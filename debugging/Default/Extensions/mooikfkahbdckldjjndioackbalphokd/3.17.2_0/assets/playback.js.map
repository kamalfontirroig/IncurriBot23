{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///./content/commands-api.js","webpack:////Users/toddtarsi/Code/selenium-ide/node_modules/scroll-into-view-if-needed/es/index.js","webpack:////Users/toddtarsi/Code/selenium-ide/node_modules/compute-scroll-into-view/es/index.js","webpack:///./content/escape.js","webpack:///./content/selenium-api.js","webpack:///./content/selenium-browserbot.js","webpack:///./content/PatternMatcher.js","webpack:///./content/targetSelector.js","webpack:///./content/region.js","webpack:///./content/prompt-injector.js"],"names":["root","factory","exports","module","define","amd","a","i","self","this","Object","defineProperty","__webpack_exports__","value","__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default","n","__WEBPACK_IMPORTED_MODULE_2__targetSelector__","__WEBPACK_IMPORTED_MODULE_3__selenium_api__","__WEBPACK_IMPORTED_MODULE_4__selenium_browserbot__","__WEBPACK_IMPORTED_MODULE_5__locatorBuilders__","__WEBPACK_IMPORTED_MODULE_6__region__","__WEBPACK_IMPORTED_MODULE_7__prompt_injector__","selenium","Selenium","BrowserBot","createForWindow","window","locatorBuilders","LocatorBuilders","targetSelector","contentSideexTabId","doCommands","request","_sender","sendResponse","commands","preprocessParameter","new_page","sideex_new_page","page_done","sideex_page_done","ajax_done","sideex_ajax_done","dom_time","target","result","e","message","upperCase","charAt","toUpperCase","slice","document","body","setAttribute","returnValue","Promise","then","removeAttribute","catch","reason","mySideexTabId","prepareToInteract","rect","prepareToInteract_","locator","buildLocators","element","browserbot","findElement","locators","buildAll","resolveLocator","find","loc","strat","test","selectMode","selecting","TargetSelector","win","detach","Array","browser","runtime","sendMessage","selectTarget","selectNext","cancelSelectTarget","region","cleanup","removeRegion","editRegion","attach","_listener","onMessage","addListener","showElement","targetValue","resolve","__WEBPACK_IMPORTED_MODULE_0_compute_scroll_into_view__","isOptionsObject","options","keys","length","targetIsDetached","ownerDocument","documentElement","contains","behavior","computeOptions","block","inline","getOptions","actions","canSmoothScroll","style","forEach","_ref","el","top","left","scroll","scrollTop","scrollLeft","defaultBehavior","isElement","nodeType","canOverflow","overflow","skipOverflowHiddenElements","isScrollable","clientHeight","scrollHeight","clientWidth","scrollWidth","getComputedStyle","overflowY","overflowX","alignNearest","scrollingEdgeStart","scrollingEdgeEnd","scrollingSize","scrollingBorderStart","scrollingBorderEnd","elementEdgeStart","elementEdgeEnd","elementSize","scrollMode","boundary","checkBoundary","node","TypeError","scrollingElement","frames","cursor","parentNode","push","viewportWidth","visualViewport","width","innerWidth","viewportHeight","height","innerHeight","viewportX","scrollX","pageXOffset","viewportY","scrollY","pageYOffset","_target$getBoundingCl","getBoundingClientRect","targetHeight","targetWidth","targetTop","targetRight","right","targetBottom","bottom","targetLeft","targetBlock","targetInline","computations","index","frame","_frame$getBoundingCli","_height","_width","_top","_left","frameStyle","borderLeft","parseInt","borderLeftWidth","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","blockScroll","inlineScroll","scrollbarWidth","offsetWidth","scrollbarHeight","offsetHeight","Math","max","min","unescapeHtml","str","replace","escapeAttr","spaceS","spaceE","tempStr","tempAttr","tempValue","processedTag","flag","finishedProcessing","indexOf","substring","equal","quotS","quotE","lastIndexOf","replaceChar","dquotS","dquotE","doEscape","m","&","\"","'","<",">","checkType","cutStr","replaceStr","mode","charType","pos","doFlag","ampersandExists","escapeHTML","smallIndex","greatIndex","tempTag","processed","tempSmallIndex","tagsExists","__WEBPACK_IMPORTED_MODULE_1_scroll_into_view_if_needed__","__WEBPACK_IMPORTED_MODULE_2__SeleniumError__","__WEBPACK_IMPORTED_MODULE_3__commands_api__","__WEBPACK_IMPORTED_MODULE_4__escape__","__WEBPACK_IMPORTED_MODULE_5__selenium_browserbot__","__WEBPACK_IMPORTED_MODULE_6__closure_polyfill__","__WEBPACK_IMPORTED_MODULE_7__PatternMatcher__","__WEBPACK_IMPORTED_MODULE_8__utils__","constructor","optionLocatorFactory","OptionLocatorFactory","page","defaultTimeout","DEFAULT_TIMEOUT","mouseSpeed","DEFAULT_MOUSE_SPEED","throwIfNoVarNameProvided","varName","Error","waitUntil","condition","timeout","failureMessage","reject","count","retryInterval","interval","setInterval","clearInterval","error","getClientXY","coordString","x","y","coords","split","Number","prototype","getElementPositionLeft","getElementPositionTop","getCoords","_element","goog","math","Coordinate","unableToLocateTargetElementError","RIGHT_MOUSE_CLICK","decorateFunctionWithTimeout","f","callback","timeoutTime","getTimeoutTime","Date","getTime","SeleniumError","proxyInjectionMode","location","reset","selectWindow","resetPopups","eval","script","argv","scoped","isExpression","JSON","stringify","doEvaluateConditional","doVerifyChecked","type","checked","doVerifyNotChecked","doVerifyEditable","isEditable","doVerifyNotEditable","doVerifySelectedValue","doVerifyNotSelectedValue","doVerifyText","doAssertText","doVerifyNotText","doAssertNotText","doVerifyValue","doVerifyTitle","string","normalizeSpaces","getTitle","doVerifyElementPresent","match","doVerifyElementNotPresent","doVerify","variableName","expected","doAssert","res","rej","getVar","variable","actual","doAssertChecked","doAssertNotChecked","doAssertEditable","doAssertNotEditable","doAssertSelectedValue","doVerifySelectedLabel","selectLocator","selectedLabel","findSelectedOptionProperty","doAssertSelectedLabel","doAssertNotSelectedValue","findElementVisible","bot","dom","isShown","visibleText","getVisibleText","trim","doAssertValue","doAssertTitle","doAssertElementPresent","doAssertElementNotPresent","doStore","storeStr","storeVar","doStoreEval","doStoreJson","json","parse","doStoreText","text","innerHTML","doStoreValue","doStoreTitle","doc","getDocument","title","doStoreXpathCount","xpath","evaluateXPathCount","doStoreAttribute","attributeValue","findAttribute","doWaitForElementPresent","isElementPresent","bind","doWaitForElementNotPresent","doWaitForElementVisible","isVisible","doWaitForElementNotVisible","doWaitForElementEditable","doWaitForElementNotEditable","doWaitForText","waitUntilText","isText","doWaitPreparation","doPrePageWait","doPageWait","doAjaxWait","doDomWait","sideex_dom_time","doClick","action","click","doDoubleClick","doubleClick","doContextMenu","rightClick","doClickAt","doDoubleClickAt","doContextMenuAt","doFocus","focus","events","fire","EventType","FOCUS","doShiftKeyDown","shiftKeyDown","core","shiftKeyDown_","doShiftKeyUp","doMetaKeyDown","metaKeyDown","metaKeyDown_","doMetaKeyUp","doAltKeyDown","altKeyDown","altKeyDown_","doAltKeyUp","doControlKeyDown","controlKeyDown","controlKeyDown_","doControlKeyUp","prepareToInteractWith_","doMouseOver","moveMouse","doMouseOut","triggerMouseEvent","doMouseDown","doMouseDownRight","undefined","doMouseDownAt","clientXY","doMouseDownRightAt","doMouseUp","doMouseUpRight","doMouseUpAt","doMouseUpRightAt","doMouseMove","doMouseMoveAt","doType","setValue","CHANGE","doSendKeys","replaceKeys","doSetSpeed","getSpeed","findToggleButton","doCheck","doUncheck","doSelect","optionLocator","option","fromLocatorString","findOption","selectOption","doAddSelection","addSelection","doRemoveSelection","removeSelection","doRemoveAllSelections","doSubmit","formLocator","log","form","submit","makePageLoadCondition","_isNewPageLoaded","_abortXhrRequest","doOpen","url","ignoreResponseCode","toLowerCase","openLocation","doOpenWindow","windowID","openWindow","doSelectWindow","doSelectPopUp","selectPopUp","doDeselectPopUp","doSelectFrame","selectFrame","getWhetherThisFrameMatchFrameExpression","currentFrameString","doesThisFrameMatchFrameExpression","getWhetherThisWindowMatchWindowExpression","_currentWindowString","opener","doWaitForPopUp","targetWindow","getWindowByName","names","getNonTopWindowNames","browserVersion","isKonqueror","href","isSafari","buttonWindow","getCurrentWindow","readyState","dontCheckAlertsAndConfirms","doGoBack","goBack","doRefresh","refresh","doClose","close","ensureNoUnhandledPopups","hasAlerts","getNextAlert","hasConfirmations","getNextConfirmation","isAlertPresent","isPromptPresent","hasPrompts","isConfirmationPresent","getAlert","Assert","fail","getConfirmation","getPrompt","getNextPrompt","getLocation","getBodyText","bodyText","getValue","getText","getEval","extractExceptionMessage","isChecked","getTable","tableCellAddress","pattern","pieces","tableName","row","col","table","rows","cells","getSelectedLabels","findSelectedOptionProperties","getSelectedLabel","getSelectedValues","getSelectedValue","getSelectedIndexes","getSelectedIndex","getSelectedIds","getSelectedId","isSomethingSelected","selected","property","selectedOptions","propVal","getSelectOptions","selectOptions","getAttribute","attributeLocator","isTextPresent","allText","patternMatcher","PatternMatcher","strategy","strategies","glob","matcher","globContains","exact","matches","findElementOrNull","tagName","String","visibility","findEffectiveStyleProperty","_isDisplayed","propertyValue","findEffectiveStyle","currentStyle","defaultView","disabled","readOnlyNode","getAttributeNode","nodeValue","getAllButtons","getAllLinks","getAllFields","doSetMouseSpeed","pixels","intValue","getMouseSpeed","doDragAndDrop","movementsString","clientStartXY","clientStartX","clientStartY","movements","movementX","movementY","clientFinishX","clientFinishY","move","current","dest","abs","clientX","clientY","doDragAndDropToObject","locatorOfObjectToBeDragged","locatorOfDragDestinationObject","draggable","triggerDragEvent","startX","startY","destinationLeftX","destinationTopY","destinationWidth","getElementWidth","destinationHeight","getElementHeight","round","doWindowFocus","doWindowMaximize","screen","moveTo","screenX","resizeTo","availWidth","availHeight","getHtmlSource","getElementsByTagName","doSetCursorPosition","position","setSelectionRange","isOpera","createTextRange","range","collapse","moveEnd","moveStart","select","getElementIndex","previousSibling","_isCommentOrEmptyTextNode","isOrdered","locator1","locator2","element1","element2","data","offsetLeft","elementParent","offsetParent","all","clientLeft","parentBorder","border","isNaN","clientTop","offsetTop","getCursorPosition","elementRange","selection","selectRange","createRange","duplicate","setEndPoint","selectionStart","getSelection","rangeCount","getExpression","expression","getXpathCount","getCssCount","css","evaluateCssCount","doAssignId","identifier","id","doAllowNativeXpath","allow","setAllowNativeXPath","doIgnoreAttributesWithoutValue","ignore","setIgnoreAttributesWithoutValue","doWaitForCondition","doSetTimeout","doWaitForPageToLoad","doWaitForFrameToLoad","_frameAddress","isNewPageLoaded","abortXhrRequest","toString","currentKey","shift","currentKeyIndex","substr","keyName","key","Keyboard","Keys","getCookie","cookie","getCookieByName","name","v","isCookiePresent","doCreateCookie","nameValuePair","optionsString","results","exec","expireDateInMilliseconds","toGMTString","path","khtml","doDeleteCookie","domain","recurse","matched","cookieName","recursivelyDeleteCookie","deleteCookie","doDeleteAllVisibleCookies","cookieNames","getAllCookieNames","pathname","doExecuteScript","doExecuteAsyncScript","doRunScript","doRollup","rollupName","kwargs","loop","currentTest","htmlTestRunner","backupManager","backup","item","restore","requiresCallBack","commandStarted","nextCommand","commandComplete","commandError","pendingRollupCommands","rollupFailed","rollupFailedMessage","expandedCommands","RollupManager","getInstance","getRollupRule","getExpandedCommands","failed","rollupFailureMessages","join","errorMessage","doAddScript","scriptContent","scriptTagId","getElementById","msg","head","createElement","appendChild","doRemoveScript","getTagName","removeChild","doUseXpathLibrary","libraryName","getXPathEngine","setXPathEngine","locatorString","locatorType","locatorValue","optionLocators","registerOptionLocators","functionName","locatorName","lowerFirstChar","OptionLocatorByLabel","label","labelMatcher","assertSelected","selectedIndex","OptionLocatorByValue","valueMatcher","selectedValue","OptionLocatorByIndex","equals","OptionLocatorById","idMatcher","selectedId","doEditContent","contentEditable","doChooseCancelOnNextPrompt","cancelNextPrompt","doAnswerOnNextPrompt","answer","setNextPromptResult","doAssertPrompt","getPromptMessage","actualMessage","doAssertAlert","getAlertMessage","doChooseCancelOnNextConfirmation","setNextConfirmationResult","doChooseOkOnNextConfirmation","doAssertConfirmation","getConfirmationMessage","doShowElement","elementForInjectingStyle","rel","getURL","highlightElement","bodyRects","elementRects","zIndex","display","pointerEvents","scrollIntoViewIfNeeded","centerIfNeeded","className","setTimeout","__WEBPACK_IMPORTED_MODULE_1__SeleniumError__","__WEBPACK_IMPORTED_MODULE_2__commands_api__","__WEBPACK_IMPORTED_MODULE_3__closure_polyfill__","__WEBPACK_IMPORTED_MODULE_4__utils__","__WEBPACK_IMPORTED_MODULE_5__PatternMatcher__","global","BrowserVersion","topLevelApplicationWindow","topWindow","topFrame","baseUrl","setWindow","currentWindow","currentWindowName","allowNativeXpath","xpathEvaluator","XPathEvaluator","isSubFrameSelected","modalDialogTest","recordedAlerts","recordedConfirmations","recordedPrompts","openedWindows","nextConfirmResult","nextPromptResult","newPageLoaded","pageLoadError","xhr","abortXhr","isXhrSent","isXhrDone","xhrOpenLocation","xhrResponseCode","xhrStatusText","shouldHighlightLocatedElement","uniqueId","pollingForLoad","permDeniedCount","windowPollers","assign","PageBot","_registerAllLocatorFunctions","recordPageLoad","engineName","setCurrentEngine","getCurrentEngine","encodeURIComponentWithASPHack","uri","aggressiveEncoding","encodeURIComponent","isIE","IEBrowserBot","KonquerorBrowserBot","OperaBrowserBot","SafariBrowserBot","MozillaBrowserBot","doModalDialogTest","cancelNextConfirmation","relayBotToRC","s","piMode","relayToRC","t","eventType","canBubble","button","screenY","getOwnerDocument","view","getWindow","evt","createEvent","initMouseEvent","initEvent","shiftKey","metaKey","altKey","ctrlKey","dispatchEvent","getXpathOfElement","parentElement","siblingElement","children","tagCount","totalTagCount","isFound","scriptTag","_windowClosed","c","closed","ignored","uniqueKey","_modifyWindow","seleniumKey","modifyWindowToRecordPopUpDialogs","ex","console","modifySeparateTestWindowToDetectPageLoads","_selectTopWindow","_selectWindowByWindowId","_selectWindowByTitle","_selectWindowByName","windowId","_selectFirstNonTopWindow","windowName","getWindowNameByTitle","parent","_getFrameElement","contentWindow","isHTA","isDom","mySandbox","Components","utils","Sandbox","evalInSandbox","autWindow","permDenied","currentFrame","abort","onXhrStateChange","method","status","XMLHttpRequest","onreadystatechange","open","setRequestHeader","send","statusText","child","setIFrameLocation","iframe","src","getCurrentPage","windowNeedsModifying","appInfo","classes","getService","interfaces","nsIXULAppInfo","nsIVersionComparator","compare","version","alert","originalWindow","browserBot","windowToModify","firefox","unwrap","seleniumAlert","call","confirm","prompt","originalOpenReference","originalOpen","newOpen","windowFeatures","replaceFlag","myOriginalOpen","openedWindow","newOpenReference","setOriginalRef","windowObject","isPollingForLoad","marker","frameElement","htaSubFrame","_isHTASubFrame","pollForLoad","caught","parentContainsIdenticallyNamedFrame","_getFrameElementByName","locateElementByName","loadFunction","originalDocument","originalLocation","originalHref","isSamePage","_isSamePage","rs","getReadyState","currentHref","currentlySelectedWindow","currentlySelectedWindowMarker","newMarker","reschedulePoller","currentDocument","currentLocation","sameDoc","_isSameDocument","sameLoc","currentHash","originalHash","sameHref","markedLoc","pageUnloading","XXXreschedulePoller","buttonName","createTextNode","tools","onclick","runScheduledPollers","oldPollers","doNotModify","winName","ok","windowTitle","nonTopWindowNames","testWindow","_handleClosedSubFrame","window_","getUserWindow","missing","setShouldHighlightElement","shouldHighlight","locationStrategies","locatorFunction","locatorPrefix","prefix","findElementBy","inDocument","inWindow","startsWith","locateElementByXPath","locateElementByDomTraversal","locateElementByIdentifier","ck","ckPairs","ckNameValue","decodeURIComponent","ckName","getAllRawCookieNames","_cookieName","rawCookieNames","rawCookieNumber","_maybeDeleteCookie","_recursivelyDeleteCookieDomains","dotIndex","_recursivelyDeleteCookie","slashIndex","deleted","parse_locator","[object Object]","findElementsLikeWebDriver","how","using","by","findElements","toReturn","inject","cache","addElement","locateElementById","elements","attributes","filter","selectElements","domTraversal","locateElementByStoredReference","locateElementByWebDriver","selectSingleNode","createNSResolver","_namespaceResolver","locateElementsByXPath","selectNodes","selector","locateElementByLinkText","linkText","links","attributePos","elementLocator","attributeName","isDefAndNotNull","optionToSelect","changed","checkMultiselect","multiple","replaceText","stringValue","SELECT","maxLengthAttr","actualValue","maxLength","designMode","clickElement","_fireEventOnElement","doubleClickElement","contextMenuOnElement","_modifyElementTarget","findClickableElement","newTarget","hasAttribute","_handleClickingImagesInsideLinks","itrElement","_getTargetWindow","_getFrameFromGlobal","history","back","goForward","forward","isChrome","reload","selectElementsBy","filterType","filterFunction","filterFunctions","selectedElements","filterExpr","defaultFilterType","locateElementByCss","promptResponse","postMessage","direction","command","promptMessage","confirmationResponse","confirmationMessage","alertResponse","alertMessage","super","closedError","windowClosed","oldShowModalDialog","showModalDialog","args","features","doc_location","end_of_base_ref","base_ref","runInterval","runOptions","fullURL","escape","pageUnloadDetector","addEventListener","attachEvent","canAccessThisWindow","canAccessCurrentlySelectedWindow","de","locateElementByIdentifer","currentPath","hash","actuallyReload","wasChecked","removeEventListener","detachEvent","__WEBPACK_IMPORTED_MODULE_0__SeleniumError__","selectStrategy","strategyName","possibleNewStrategyName","RegExp","$1","possibleNewPattern","$2","matchStrategy","regexp","regexpString","regex","regexpi","regexi","globString","regexpFromGlobContains","regexpFromGlob","convertGlobMetaCharsToRegexpMetaChars","re","cleanupCallback","div","insertBefore","firstChild","r","banner","header","img","span","innerText","handleEvent","highlight","preventDefault","stopPropagation","elementFromPoint","or","cb","canvasExists","container","canvas","cornerSize","tlc","createHotCorner","updateRegion","endX","endY","trc","blc","brc","createRegion","backgroundColor","opacity","setStyle","mousedown","mouseup","setEvents","buttonContainer","buttons","hideButtons","calculateRectFromCoords","cancel","alignItems","justifyContent","styleButton","createButtons","mouseOffset","STATES","create","update","resize","state","pageX","pageY","mousemove","mouseX","mouseY","dx","dy","moveRegion","canvasRect","showButtons","p1","p2","size","color","padding","margin","borderRadius","outline","textTransform","elementForInjectingScript","handler","event","source","response","handleMessage"],"mappings":"CAAA,SAAAA,EAAAC,GACA,oBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,SACA,sBAAAG,eAAAC,IACAD,UAAAH,OACA,CACA,IAAAK,EAAAL,IACA,QAAAM,KAAAD,GAAA,iBAAAJ,gBAAAF,GAAAO,GAAAD,EAAAC,IAPA,CASC,oBAAAC,UAAAC,KAAA,WACD,0DCVAC,OAAAC,eAAAC,EAAA,cAAAC,OAAA,QAAAC,EAAAC,EAAA,IAAAC,EAAAD,EAAAE,EAAAH,GAAAI,GAAAH,EAAA,IAAAA,EAAA,MAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAyBO,MAAMS,EAAW,IAAIC,OAASC,OAAWC,gBAAgBC,QAAQ,IACxEhB,EAAA,YAAAY,EAAA,MAAMK,EAAkB,IAAIC,OAAgBF,QAC5C,IACIG,EADAC,EAAqBJ,OAAOI,mBAKhC,SAASC,EAAWC,EAASC,EAASC,GACpC,GAAIF,EAAQG,SAAU,CACpB,GAAwB,mBAApBH,EAAQG,SACVb,EAAS,qBAAqB,GAAIA,EAASc,oBAAoB,KAC/DF,WACK,GAAwB,eAApBF,EAAQG,SACjBb,EAAS,iBAAiB,GAAIA,EAASc,oBAAoB,KAC3DF,GAAeG,SAAUX,OAAOY,uBAC3B,GAAwB,YAApBN,EAAQG,SACjBb,EAAS,cAAc,GAAIA,EAASc,oBAAoB,KACxDF,GAAeK,UAAWb,OAAOc,wBAC5B,GAAwB,YAApBR,EAAQG,SACjBb,EAAS,cAAc,GAAIA,EAASc,oBAAoB,KACxDF,GAAeO,UAAWf,OAAOgB,wBAC5B,GAAwB,WAApBV,EAAQG,SACjBb,EAAS,aAAa,GAAIA,EAASc,oBAAoB,KACvDF,GAAeS,SAAUjB,OAAOY,uBAC3B,GAAyB,wBAArBN,EAAQG,SACjB,IACE,IAAIxB,EAAQW,EAAS,yBAAyBU,EAAQY,QACtDV,GAAeW,OAAQ,UAAWlC,MAAOA,IACzC,MAAOmC,GACPZ,GAAeW,OAAQC,EAAEC,cAEtB,CACL,MAAMC,EACJhB,EAAQG,SAASc,OAAO,GAAGC,cAAgBlB,EAAQG,SAASgB,MAAM,GACpE,GAAkC,MAA9B7B,EAAS,KAAO0B,GAClB,IACEI,SAASC,KAAKC,aAAa,qBAAqB,GAChD,IAAIC,EAAcjC,EAAS,KAAO0B,GAChC1B,EAASc,oBAAoBJ,EAAQY,QACrCtB,EAASc,oBAAoBJ,EAAQrB,QAEnC4C,aAAuBC,QAEzBD,EACGE,KAAK,WAEJL,SAASC,KAAKK,gBAAgB,qBAC9BxB,GAAeW,OAAQ,cAExBc,MAAM,SAASC,GAEdR,SAASC,KAAKK,gBAAgB,qBAC9BxB,GAAeW,OAAQe,OAI3BR,SAASC,KAAKK,gBAAgB,qBAC9BxB,GAAeW,OAAQ,aAEzB,MAAOC,GAEPM,SAASC,KAAKK,gBAAgB,qBAC9BxB,GAAeW,OAAQC,EAAEC,eAG3Bb,GAAeW,OAAQ,oBAAsBb,EAAQG,WAQzD,OAH4B,IAAxBL,IACFA,EAAqBE,EAAQ6B,gBAExB,EAQT,GANI7B,EAAQ8B,mBACV5B,GACEW,OAAQ,UACRkB,KAAMzC,EAAS0C,mBAAmBhC,EAAQiC,WAG1CjC,EAAQkC,cACV,IACE,MAAMC,EAAU7C,EAAS8C,WAAWC,YAAYrC,EAAQiC,SAClDK,EAAW3C,EAAgB4C,SAASJ,GAC1CjC,GAAeW,OAAQ,UAAWyB,aAClC,MAAOxB,GACPZ,GAAeW,OAAQC,EAAEC,UAG7B,GAAIf,EAAQwC,eACV,IACE,MAAML,EAAU7C,EAAS8C,WAAWC,YAAYrC,EAAQiC,SAClDA,EAAUtC,EACb4C,SAASJ,GACTM,KAAK,EAAEC,EAAKC,KAAW,SAASC,KAAKD,IAAQ,GAChDzC,GAAeW,OAAQ,UAAWoB,YAClC,MAAOnB,GACPZ,GAAeW,OAAQC,EAAEC,UAG7B,GAAIf,EAAQ6C,WAEV,GADA3C,GAAa,GACTF,EAAQ8C,WAAa9C,EAAQmC,QAC/BtC,EAAiB,IAAIkD,OACnB,SAASZ,EAASa,GAChB,GAAIb,GAAWa,EAAK,CAClB,MAAMpC,EAASjB,EAAgB4C,SAASJ,GACxCxC,EAAgBsD,SACF,MAAVrC,GAAkBA,aAAkBsC,OAClCtC,GAEFuC,IAAQC,QAAQC,aACdC,cAAc,EACd1C,OAAQA,EACR2C,WAAYvD,EAAQuD,aAK5B1D,EAAiB,MAEnB,WACEsD,IAAQC,QAAQC,aACdG,oBAAoB,UAIrB,KAAIxD,EAAQ8C,YAAa9C,EAAQyD,OAgBtC,OAAI5D,GACFA,EAAe6D,eACf7D,EAAiB,YAGjB8D,iBApBFC,eAAW5D,EAAQ+B,KAAMnB,IACnBA,EACFuC,IAAQC,QAAQC,aACdC,cAAc,EACd1C,SAAUA,IACV2C,WAAYvD,EAAQuD,aAGtBJ,IAAQC,QAAQC,aACdG,oBAAoB,EACpBD,WAAYvD,EAAQuD,gBAtIhCM,eAAOvE,GAqKFI,OAAOoE,YACVpE,OAAOoE,UAAY/D,EACnBoD,IAAQC,QAAQW,UAAUC,YAf5B,SAA0BjD,GACxB,GAAIA,EAAQkD,YACV,IACE,MAAMpD,EAASvB,EAAS,iBAAiByB,EAAQmD,aACjD,OAAO1C,QAAQ2C,SAAUtD,OAAQA,IACjC,MAAOC,OAWXqC,IAAQC,QAAQW,UAAUC,YAAYjE,sCCtMxC,IAAAqE,EAAAvF,EAAA,KAEA,SAAAwF,EAAAC,GACA,OAAAA,IAAA9F,OAAA8F,IAAA,IAAA9F,OAAA+F,KAAAD,GAAAE,OA4De9F,EAAA,KAff,SAAAkC,EAAA0D,GACA,IAAAG,GAAA7D,EAAA8D,cAAAC,gBAAAC,SAAAhE,GAEA,GAAAyD,EAAAC,IAAA,mBAAAA,EAAAO,SACA,OAAAP,EAAAO,SAAAJ,KAAoDjG,OAAA4F,EAAA,KAAA5F,CAAOoC,EAAA0D,IAG3D,IAAAG,EAAA,CAIA,IAAAK,EA7BA,SAAAR,GACA,WAAAA,GAEAS,MAAA,MACAC,OAAA,WAIAX,EAAAC,GACAA,GAIAS,MAAA,QACAC,OAAA,WAeAC,CAAAX,GACA,OAtDA,SAAAY,EAAAL,QACA,IAAAA,IACAA,EAAA,QAGA,IAAAM,EAAA,mBAAA/D,SAAAC,KAAA+D,MACAF,EAAAG,QAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAC,GACAC,EAAAF,EAAAE,IACAC,EAAAH,EAAAG,KAEAF,EAAAG,QAAAP,EACAI,EAAAG,QACAF,MACAC,OACAZ,cAGAU,EAAAI,UAAAH,EACAD,EAAAK,WAAAH,KAmCAI,CAAyBrH,OAAA4F,EAAA,KAAA5F,CAAOoC,EAAAkE,KAAAD,8CC5DhC,SAAAiB,EAAAP,GACA,aAAAA,GAAA,iBAAAA,GAAA,IAAAA,EAAAQ,SAGA,SAAAC,EAAAC,EAAAC,GACA,QAAAA,GAAA,WAAAD,KAIA,YAAAA,GAAA,SAAAA,GAGA,SAAAE,EAAAZ,EAAAW,GACA,GAAAX,EAAAa,aAAAb,EAAAc,cAAAd,EAAAe,YAAAf,EAAAgB,YAAA,CACA,IAAAnB,EAAAoB,iBAAAjB,EAAA,MACA,OAAAS,EAAAZ,EAAAqB,UAAAP,IAAAF,EAAAZ,EAAAsB,UAAAR,GAGA,SAGA,SAAAS,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,OAAAF,EAAAL,GAAAM,EAAAL,GAAAI,EAAAL,GAAAM,EAAAL,EACA,EAGAI,GAAAL,GAAAO,GAAAL,GAAAI,GAAAL,GAAAM,GAAAL,EACAG,EAAAL,EAAAG,EAGAG,EAAAL,GAAAM,EAAAL,GAAAG,EAAAL,GAAAO,EAAAL,EACAI,EAAAL,EAAAG,EAGA,EAGgBtI,EAAA,cAAAkC,EAAA0D,GAChB,IAAA8C,EAAA9C,EAAA8C,WACArC,EAAAT,EAAAS,MACAC,EAAAV,EAAAU,OACAqC,EAAA/C,EAAA+C,SACAnB,EAAA5B,EAAA4B,2BACAoB,EAAA,mBAAAD,IAAA,SAAAE,GACA,OAAAA,IAAAF,GAGA,IAAAvB,EAAAlF,GACA,UAAA4G,UAAA,kBAOA,IAJA,IAAAC,EAAArG,SAAAqG,kBAAArG,SAAAuD,gBACA+C,KACAC,EAAA/G,EAEAkF,EAAA6B,IAAAL,EAAAK,IAAA,CAGA,IAFAA,IAAAC,cAEAH,EAAA,CACAC,EAAAG,KAAAF,GACA,MAGAA,IAAAvG,SAAAC,MAAA8E,EAAAwB,KAAAxB,EAAA/E,SAAAuD,kBAIAwB,EAAAwB,EAAAzB,IACAwB,EAAAG,KAAAF,GAqBA,IAjBA,IAAAG,EAAApI,OAAAqI,8BAAAC,MAAAC,WACAC,EAAAxI,OAAAqI,8BAAAI,OAAAC,YACAC,EAAA3I,OAAA4I,SAAAC,YACAC,EAAA9I,OAAA+I,SAAAC,YAEAC,EAAA/H,EAAAgI,wBACAC,EAAAF,EAAAR,OACAW,EAAAH,EAAAX,MACAe,EAAAJ,EAAAnD,IACAwD,EAAAL,EAAAM,MACAC,EAAAP,EAAAQ,OACAC,EAAAT,EAAAlD,KAEA4D,EAAA,UAAAtE,GAAA,YAAAA,EAAAgE,EAAA,QAAAhE,EAAAmE,EAAAH,EAAAF,EAAA,EACAS,EAAA,WAAAtE,EAAAoE,EAAAN,EAAA,UAAA9D,EAAAgE,EAAAI,EACAG,KAEAC,EAAA,EAAqBA,EAAA9B,EAAAlD,OAAuBgF,IAAA,CAC5C,IAAAC,EAAA/B,EAAA8B,GAEAE,EAAAD,EAAAb,wBACAe,EAAAD,EAAAvB,OACAyB,EAAAF,EAAA1B,MACA6B,EAAAH,EAAAlE,IACAyD,EAAAS,EAAAT,MACAE,EAAAO,EAAAP,OACAW,EAAAJ,EAAAjE,KAEA,iBAAA2B,GAAA2B,GAAA,GAAAK,GAAA,GAAAF,GAAAhB,GAAAc,GAAAlB,GAAAiB,GAAAc,GAAAX,GAAAC,GAAAC,GAAAU,GAAAd,GAAAC,EACA,OAAAM,EAGA,IAAAQ,EAAAvD,iBAAAiD,GACAO,EAAAC,SAAAF,EAAAG,gBAAA,IACAC,EAAAF,SAAAF,EAAAK,eAAA,IACAC,EAAAJ,SAAAF,EAAAO,iBAAA,IACAC,EAAAN,SAAAF,EAAAS,kBAAA,IACAC,EAAA,EACAC,EAAA,EACAC,EAAA,gBAAAlB,IAAAmB,YAAAnB,EAAAnD,YAAA0D,EAAAK,EAAA,EACAQ,EAAA,iBAAApB,IAAAqB,aAAArB,EAAArD,aAAA+D,EAAAI,EAAA,EAEA,GAAA9C,IAAAgC,EAEAgB,EADA,UAAA1F,EACAsE,EACO,QAAAtE,EACPsE,EAAAnB,EACO,YAAAnD,EACP4B,EAAA6B,IAAAN,IAAAiC,EAAAI,EAAA/B,EAAAa,EAAAb,EAAAa,EAAAR,KAEAQ,EAAAnB,EAAA,EAIAwC,EADA,UAAA1F,EACAsE,EACO,WAAAtE,EACPsE,EAAAxB,EAAA,EACO,QAAA9C,EACPsE,EAAAxB,EAEAnB,EAAA0B,IAAAP,IAAAkC,EAAAK,EAAAhC,EAAAiB,EAAAjB,EAAAiB,EAAAR,KAGA2B,EAAAM,KAAAC,IAAA,EAAAP,EAAAjC,GACAkC,EAAAK,KAAAC,IAAA,EAAAN,EAAArC,OACK,CAELoC,EADA,UAAA1F,EACAsE,EAAAQ,EAAAM,EACO,QAAApF,EACPsE,EAAAF,EAAAoB,EAAAM,EACO,YAAA9F,EACP4B,EAAAkD,EAAAV,EAAAQ,EAAAQ,EAAAI,EAAAM,EAAAxB,IAAAR,KAEAQ,GAAAQ,EAAAF,EAAA,GAAAkB,EAAA,EAIAH,EADA,UAAA1F,EACAsE,EAAAQ,EAAAE,EACO,WAAAhF,EACPsE,GAAAQ,EAAAF,EAAA,GAAAe,EAAA,EACO,QAAA3F,EACPsE,EAAAL,EAAAoB,EAAAM,EAEAhE,EAAAmD,EAAAb,EAAAW,EAAAI,EAAAK,EAAAM,EAAArB,IAAAR,KAGA,IAAAlD,EAAA6D,EAAA7D,WACAD,EAAA8D,EAAA9D,UAGA0D,GAAA1D,GAFA8E,EAAAM,KAAAC,IAAA,EAAAD,KAAAE,IAAAtF,EAAA8E,EAAAhB,EAAApD,aAAAsD,EAAAkB,KAGAvB,GAAA1D,GAFA8E,EAAAK,KAAAC,IAAA,EAAAD,KAAAE,IAAArF,EAAA8E,EAAAjB,EAAAlD,YAAAqD,EAAAe,KAKApB,EAAA1B,MACAtC,GAAAkE,EACAjE,IAAAiF,EACAhF,KAAAiF,IAIA,OAAAnB,qCC3JO,SAAS2B,EAAaC,GAC3B,OAAOA,EACJC,QAAQ,UAAW,KACnBA,QAAQ,WAAY,KACpBA,QAAQ,SAAU,KAClBA,QAAQ,SAAU,KAClBA,QAAQ,UAAW,KAGxB,SAASC,EAAWF,GAClB,IAAIG,EAAS,EACTC,GAAU,EACVC,EAAUL,EACVM,EAAW,GACXC,EAAY,GACZC,EAAe,GACfC,GAAO,EACPC,GAAqB,EAEzB,EAAG,CAID,GAHAP,EAASH,EAAIW,QAAQ,MACrBP,EAASJ,EAAIW,QAAQ,IAAKR,EAAS,KAErB,EACZ,KAAiC,KAA1BH,EAAIlK,OAAOsK,EAAS,IAAuC,KAA1BJ,EAAIlK,OAAOsK,EAAS,OAC1DA,EAASJ,EAAIW,QAAQ,IAAKP,EAAS,IACtB,KAKjB,GAAID,GAAU,GAAKC,GAAU,EAC3BE,EAAWN,EAAIY,UAAUT,EAAS,EAAGC,GACrCC,EAAUL,EAAIY,UAAU,EAAGT,EAAS,GACpCH,EAAMA,EAAIY,UAAUR,OACf,MAAID,GAAU,GAAKC,EAAS,GAI5B,CAEDK,EAAMD,GAAgB,IACrBA,EAAeR,EACpBU,GAAqB,EACrB,MARAJ,EAAWN,EAAIY,UAAUT,EAAS,EAAGH,EAAI3G,OAAS,GAClDgH,EAAUL,EAAIY,UAAU,EAAGT,EAAS,GACpCH,EAAM,GASRS,GAAO,EACP,IAAII,EAAQP,EAASK,QAAQ,KAE7B,GAAkC,KAA9BL,EAASxK,OAAO+K,EAAQ,KAEI,GAA1BP,EAASK,QAAQ,KAAY,CAC/B,IAAIG,EAAQR,EAASK,QAAQ,KACzBI,EAAQT,EAASU,YAAY,KACjCT,EAAYD,EAASM,UAAUE,EAAQ,EAAGC,GAC1CT,EAAWA,EAASM,UAAU,EAAGE,EAAQ,GAEzCR,IADAC,EAAYU,EAAYV,IACA,IAG5B,GAAkC,KAA9BD,EAASxK,OAAO+K,EAAQ,KAEI,GAA1BP,EAASK,QAAQ,KAAY,CAC/B,IAAIO,EAASZ,EAASK,QAAQ,KAC1BQ,EAASb,EAASU,YAAY,KAClCT,EAAYD,EAASM,UAAUM,EAAS,EAAGC,GAC3Cb,EAAWA,EAASM,UAAU,EAAGM,EAAS,GAE1CZ,IADAC,EAAYU,EAAYV,IACA,IAI5BC,GAAgBH,EAAUC,SAClBI,GAEV,OAAOF,EAIT,SAASY,EAASpB,GAChB,OAAOA,EAAIC,QACT,WACAoB,KACKC,IAAK,QAASC,IAAK,SAAUC,IAAK,QAASC,IAAK,OAAQC,IAAK,SAC9DL,IAMR,SAASM,EAAUC,EAAQC,EAAYC,GACrC,OAAQA,GACN,KAAK,EACH,OAAQF,GAAUC,EAAa,SACjC,KAAK,EACH,OAAQD,GAAUC,EAAa,UACjC,KAAK,EACH,OAAQD,GAAUC,EAAa,SACjC,KAAK,EACH,OAAQD,GAAUC,EAAa,QACjC,KAAK,EACH,OAAQD,GAAUC,EAAa,QACjC,QACE,OAAOD,GAKb,SAASX,EAAYjB,GAEnB,IAII+B,EAJAC,GAAO,EACPJ,EAAS,GACTC,EAAa,GACbI,EAAS,EAETC,GAAkB,EAEtB,KAAOA,GAELH,EAAW,GACC,IAFZC,EAAMhC,EAAIW,QAAQ,IAAKqB,EAAM,KAGQ,SAA/BhC,EAAIY,UAAUoB,EAAKA,EAAM,IAC3BD,EAAW,EACXF,EAAa7B,EAAIY,UAAU,EAAGoB,GAC9BhC,EAAMA,EAAIY,UAAUoB,EAAM,IACc,UAA/BhC,EAAIY,UAAUoB,EAAKA,EAAM,IAClCD,EAAW,EACXF,EAAa7B,EAAIY,UAAU,EAAGoB,GAC9BhC,EAAMA,EAAIY,UAAUoB,EAAM,IACc,SAA/BhC,EAAIY,UAAUoB,EAAKA,EAAM,IAClCD,EAAW,EACXF,EAAa7B,EAAIY,UAAU,EAAGoB,GAC9BhC,EAAMA,EAAIY,UAAUoB,EAAM,IACc,QAA/BhC,EAAIY,UAAUoB,EAAKA,EAAM,IAClCD,EAAW,EACXF,EAAa7B,EAAIY,UAAU,EAAGoB,GAC9BhC,EAAMA,EAAIY,UAAUoB,EAAM,IACc,QAA/BhC,EAAIY,UAAUoB,EAAKA,EAAM,KAClCD,EAAW,EACXF,EAAa7B,EAAIY,UAAU,EAAGoB,GAC9BhC,EAAMA,EAAIY,UAAUoB,EAAM,IAGZ,GAAZD,IACFC,GAAO,EAEPJ,EAASD,EAAUC,EADnBC,EAAaT,EAASS,GACiBE,GACvCE,EAAS,KAGXL,GAAU5B,EACVkC,GAAkB,GAGtB,OAAc,GAAVD,EAAoBb,EAASpB,GACrB4B,EAIP,SAASO,EAAWnC,GACzB,IAAIoC,EAAapC,EAAIW,QAAQ,KACzB0B,EAAarC,EAAIW,QAAQ,KACzBN,EAAU,GACViC,EAAU,GACVC,EAAY,GACZC,EAAiB,EACjBC,GAAa,EAEjB,KAAOA,GAAY,CAEjB,KAAIL,GAAc,GA2BX,CACLnB,EAAYjB,GACZyC,GAAa,EACb,MA5BA,KAAIJ,GAAc,GAoBX,CACLpB,EAAYjB,GACZyC,GAAa,EACb,MAtBA,GAEEL,GAAcI,EACdnC,EAAUL,EAAIY,UAAU,EAAGwB,GAG3BI,GADAF,EAAUtC,EAAIY,UAAUwB,EAAYC,EAAa,IACxBrB,YAAY,WACZ,GAAlBwB,GAGTF,EAAUpC,EAAWoC,GAErBtC,EAAMA,EAAIY,UAAUyB,EAAa,GAMjCE,GAAatB,EAAYZ,GAAWiC,EAYxCF,EAAapC,EAAIW,QAAQ,KACzB0B,EAAa,EACb,GAEEA,EAAarC,EAAIW,QAAQ,IAAK0B,EAAa,SACpCA,EAAaD,IAA6B,GAAfC,GAKtC,MAFW,IAAPrC,IAAWuC,GAAatB,EAAYjB,IAEjCuC,EAxOTlP,OAAAC,eAAAC,EAAA,cAAAC,OAAA,IAAAD,EAAA,gBAAAwM,EAAAxM,EAAA,cAAA4O,EA2OA5N,OAAOwL,aAAeA,EACtBxL,OAAO4N,WAAaA,oCC5OpB,IAAA1O,EAAAC,EAAA,IAAAC,EAAAD,EAAAE,EAAAH,GAAAiP,EAAAhP,EAAA,KAAAiP,EAAAjP,EAAA,KAAAkP,EAAAlP,EAAA,KAAAmP,EAAAnP,EAAA,KAAAoP,EAAApP,EAAA,KAAAqP,EAAArP,EAAA,IAAAsP,EAAAtP,EAAA,KAAAuP,EAAAvP,EAAA,WAkCqBU,EAyJnB8O,YAAYjM,GACV7D,KAAK6D,WAAaA,EAClB7D,KAAK+P,qBAAuB,IAAIC,EAEhChQ,KAAKiQ,KAAO,WACV,OAAOpM,GAET7D,KAAKkQ,eAAiBlP,EAASmP,gBAC/BnQ,KAAKoQ,WAAapP,EAASqP,qBAkV/B,SAASC,EAAyBC,GAChC,IAAKA,EACH,MAAM,IAAIC,MAAM,8BAkFpB,SAASC,EAAUC,EAAWrO,EAAQsO,EAASC,GAC7C,IAAKD,EACH,MAAM,IAAIH,MAAM,0BAElB,OAAO,IAAIvN,QAAQ,SAAS2C,EAASiL,GACnC,IAEIvO,EAFAwO,EAAQ,EACRC,EAAgB,IAEhBC,EAAWC,YAAY,WACrBH,EAAQH,IACVO,cAAcF,GACdH,EAAOD,IAET,IACEtO,EAASoO,EAAUrO,GACnB,MAAO8O,GACPD,cAAcF,GACdH,EAAOM,EAAM3O,SAEVF,EAEMA,IACT4O,cAAcF,GACdpL,KAHAkL,GAASC,GAKVA,KAkYP,SAASK,EAAYxN,EAASyN,GAE5B,IACIC,EACAC,EAFAC,EAAS,KAab,OAVIH,GACFG,EAASH,EAAYI,MAAM,KAC3BH,EAAII,OAAOF,EAAO,IAClBD,EAAIG,OAAOF,EAAO,KAElBF,EAAIC,EAAI,GAMRvQ,EAAS2Q,UAAUC,uBAAuBhO,GAAW0N,EACrDtQ,EAAS2Q,UAAUE,sBAAsBjO,GAAW2N,GAIxD,SAASO,EAAUC,EAAUV,GAE3B,IACIC,EACAC,EAFAC,EAAS,KAWb,OARIH,GACFG,EAASH,EAAYI,MAAM,KAC3BH,EAAII,OAAOF,EAAO,IAClBD,EAAIG,OAAOF,EAAO,KAElBF,EAAIC,EAAI,EAGH,IAAIS,OAAKC,KAAKC,WAAWZ,EAAGC,GAqxCrC,SAASY,IACP,MAAM,IAAI3B,MAAM,oCAwtClB,SAASR,KA70GThP,WAASmP,gBAAkB,GAAK,IAChCnP,EAASqP,oBAAsB,GAC/BrP,EAASoR,kBAAoB,EAE7BpR,EAASqR,4BAA8B,SAASC,EAAG3B,EAAS4B,GAC1D,GAAS,MAALD,EACF,OAAO,KAGT,IAAIE,EAAcC,eAAe9B,GAEjC,OAAO,WACL,IAAI,IAAI+B,MAAOC,UAAYH,EAIzB,MAHgB,MAAZD,GACFA,IAEI,IAAIK,OAAc,mBAAqBjC,EAAU,MAEzD,OAAO2B,MAIXtR,EAASE,gBAAkB,SAASC,EAAQ0R,GAC1C,IAAK1R,EAAO2R,SACV,KAAM,uBAER,OAAO9R,EAASC,OAAWC,gBAAgBC,EAAQ0R,KAGrD7R,EAAS2Q,UAAUoB,MAAQ,WACzB/S,KAAKkQ,eAAiBlP,EAASmP,gBAE/BnQ,KAAK6D,WAAWmP,aAAa,QAC7BhT,KAAK6D,WAAWoP,eAGlBjS,EAAS2Q,UAAUuB,KAAO,SACxBC,EACAC,KACAC,GAAS,EACTC,GAAe,GAIf,OAAIA,EACKnS,OAAO+R,KACZG,yBAC2BF,sBAA2BI,KAAKC,UACrDJ,QAEFD,GAGChS,OAAO+R,KACZG,yBAC2BF,sBAA2BI,KAAKC,UACrDJ,QAEFD,IAKVnS,EAAS2Q,UAAU8B,sBAAwB,SAASN,GAClD,QAASnT,KAAKkT,KAAKC,EAAOA,OAAQA,EAAOC,MAAM,GAAM,IAGvDpS,EAAS2Q,UAAU+B,gBAAkB,SAAShQ,GAC5C,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,GAAqB,aAAjBE,EAAQ+P,MAAwC,UAAjB/P,EAAQ+P,KACzC,MAAM,IAAInD,8BACgB9M,0CAErB,IAAKE,EAAQgQ,QAClB,MAAM,IAAIpD,8BAA8B9M,qBAI5C1C,EAAS2Q,UAAUkC,mBAAqB,SAASnQ,GAC/C,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,GAAqB,aAAjBE,EAAQ+P,MAAwC,UAAjB/P,EAAQ+P,KACzC,MAAM,IAAInD,8BACgB9M,0CAErB,GAAIE,EAAQgQ,QACjB,MAAM,IAAIpD,8BAA8B9M,iBAI5C1C,EAAS2Q,UAAUmC,iBAAmB,SAASpQ,GAC7C,IAAK1D,KAAK+T,WAAWrQ,GACnB,MAAM,IAAI8M,8BAA8B9M,sBAI5C1C,EAAS2Q,UAAUqC,oBAAsB,SAAStQ,GAChD,GAAI1D,KAAK+T,WAAWrQ,GAClB,MAAM,IAAI8M,8BAA8B9M,kBAI5C1C,EAAS2Q,UAAUsC,sBAAwB,SAASvQ,EAAStD,GAC3D,IAAIwD,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,GAAqB,eAAjBE,EAAQ+P,KACV,MAAM,IAAInD,8BAA8B9M,qBACnC,GAAIE,EAAQxD,QAAUA,EAC3B,MAAM,IAAIoQ,MACR,iBAAmB5M,EAAQxD,MAAQ,oBAAsBA,EAAQ,MAKvEY,EAAS2Q,UAAUuC,yBAA2B,SAASxQ,EAAStD,GAC9D,IAAIwD,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,GAAqB,eAAjBE,EAAQ+P,KACV,MAAM,IAAInD,8BAA8B9M,qBACnC,GAAIE,EAAQxD,QAAUA,EAC3B,MAAM,IAAIoQ,MAAM,iBAAmB5M,EAAQxD,MAAQ,gBAIvDY,EAAS2Q,UAAUwC,aAAe,SAASzQ,EAAStD,GAClDJ,KAAKoU,aAAa1Q,EAAStD,IAG7BY,EAAS2Q,UAAU0C,gBAAkB,SAAS3Q,EAAStD,GACrDJ,KAAKsU,gBAAgB5Q,EAAStD,IAGhCY,EAAS2Q,UAAU4C,cAAgB,SAAS7Q,EAAStD,GACnD,IAAIwD,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,GAAIE,EAAQxD,QAAUA,EACpB,MAAM,IAAIoQ,MACR,iBAAmB5M,EAAQxD,MAAQ,oBAAsBA,EAAQ,MAKvEY,EAAS2Q,UAAU6C,cAAgB,SAASpU,GAC1C,GAAI4R,OAAKyC,OAAOC,gBAAgB1U,KAAK2U,cAAgBvU,EACnD,MAAM,IAAIoQ,MACR,iBACEwB,OAAKyC,OAAOC,gBAAgB1U,KAAK2U,YACjC,oBACAvU,EACA,MAKRY,EAAS2Q,UAAUiD,uBAAyB,SAASlR,GACnD,IACE1D,KAAK6D,WAAWC,YAAYJ,GAC5B,MAAOyN,GACP,MAAIA,EAAM3O,QAAQqS,MAAM,4BAChB,IAAIrE,8BAA8B9M,wBAElCyN,IAKZnQ,EAAS2Q,UAAUmD,0BAA4B,SAASpR,GACtD,IAEE,MADA1D,KAAK6D,WAAWC,YAAYJ,GACtB,IAAI8M,8BAA8B9M,eACxC,MAAOyN,GACP,IAAKA,EAAM3O,QAAQqS,MAAM,4BACvB,MAAM1D,IAKZnQ,EAAS2Q,UAAUoD,SAAW,SAASC,EAAcC,GACnD,OAAOjV,KAAKkV,SAASF,EAAcC,IAGrCjU,EAAS2Q,UAAUuD,SAAW,SAASF,EAAcC,GACnD,OAAO,IAAIhS,QAAQ,CAACkS,EAAKC,KACvBxQ,IAAQC,QACLC,aACCuQ,QAAQ,EACRC,SAAUN,IAEX9R,KAAKqS,MACGA,KAAYN,EACVG,EACL,iBAAmBG,EAAS,oBAAsBN,EAAW,KAG1DE,QAKfnU,EAAS2Q,UAAU6D,gBAAkB,SAAS9R,GAC5C,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,GAAqB,aAAjBE,EAAQ+P,MAAwC,UAAjB/P,EAAQ+P,KACzC,MAAM,IAAInD,8BACgB9M,0CAErB,IAAKE,EAAQgQ,QAClB,MAAM,IAAIpD,8BAA8B9M,qBAI5C1C,EAAS2Q,UAAU8D,mBAAqB,SAAS/R,GAC/C,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,GAAqB,aAAjBE,EAAQ+P,MAAwC,UAAjB/P,EAAQ+P,KACzC,MAAM,IAAInD,8BACgB9M,0CAErB,GAAIE,EAAQgQ,QACjB,MAAM,IAAIpD,8BAA8B9M,iBAI5C1C,EAAS2Q,UAAU+D,iBAAmB,SAAShS,GAC7C,IAAK1D,KAAK+T,WAAWrQ,GACnB,MAAM,IAAI8M,8BAA8B9M,sBAI5C1C,EAAS2Q,UAAUgE,oBAAsB,SAASjS,GAChD,GAAI1D,KAAK+T,WAAWrQ,GAClB,MAAM,IAAI8M,8BAA8B9M,kBAI5C1C,EAAS2Q,UAAUiE,sBAAwB,SAASlS,EAAStD,GAC3D,IAAIwD,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,GAAqB,eAAjBE,EAAQ+P,KACV,MAAM,IAAInD,8BAA8B9M,qBACnC,GAAIE,EAAQxD,QAAUA,EAC3B,MAAM,IAAIoQ,MACR,iBAAmB5M,EAAQxD,MAAQ,oBAAsBA,EAAQ,MAKvEY,EAAS2Q,UAAUkE,sBAAwB,SAASC,EAAe1V,GACjE,IAAI2V,EAAgB/V,KAAKgW,2BAA2BF,EAAe,QACnE,GAAIC,IAAkB3V,EACpB,MAAM,IAAIoQ,MACR,iBAAmBuF,EAAgB,oBAAsB3V,EAAQ,MAKvEY,EAAS2Q,UAAUsE,sBAAwB,SAASH,EAAe1V,GACjE,IAAI2V,EAAgB/V,KAAKgW,2BAA2BF,EAAe,QACnE,GAAIC,IAAkB3V,EACpB,MAAM,IAAIoQ,MACR,iBAAmBuF,EAAgB,oBAAsB3V,EAAQ,MAKvEY,EAAS2Q,UAAUuE,yBAA2B,SAASxS,EAAStD,GAC9D,IAAIwD,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,GAAqB,eAAjBE,EAAQ+P,KACV,MAAM,IAAInD,8BAA8B9M,qBACnC,GAAIE,EAAQxD,QAAUA,EAC3B,MAAM,IAAIoQ,MAAM,iBAAmB5M,EAAQxD,MAAQ,gBAIvDY,EAAS2Q,UAAUwE,mBAAqB,SAASzS,GAC/C,MAAME,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC5C,IAAK0S,OAAIC,IAAIC,QAAQ1S,GACnB,MAAM,IAAI4M,iBAAiB9M,iBAC7B,OAAOE,GAGT5C,EAAS2Q,UAAUyC,aAAe,SAAS1Q,EAAStD,GAClD,MAAMwD,EAAU5D,KAAKmW,mBAAmBzS,GAClC6S,EAAcH,OAAIC,IAAIG,eAAe5S,GAAS6S,OACpD,GAAIF,IAAgBnW,EAClB,MAAM,IAAIoQ,uBAAuB+F,qBAA+BnW,OAIpEY,EAAS2Q,UAAU2C,gBAAkB,SAAS5Q,EAAStD,GACrD,MAAMwD,EAAU5D,KAAKmW,mBAAmBzS,GAClC6S,EAAcH,OAAIC,IAAIG,eAAe5S,GAAS6S,OACpD,GAAIF,IAAgBnW,EAClB,MAAM,IAAIoQ,uBAAuB+F,iBAA2BnW,OAIhEY,EAAS2Q,UAAU+E,cAAgB,SAAShT,EAAStD,GACnD,IAAIwD,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,GAAIE,EAAQxD,QAAUA,EACpB,MAAM,IAAIoQ,MACR,iBAAmB5M,EAAQxD,MAAQ,oBAAsBA,EAAQ,MAKvEY,EAAS2Q,UAAUgF,cAAgB,SAASvW,GAC1C,GAAI4R,OAAKyC,OAAOC,gBAAgB1U,KAAK2U,cAAgBvU,EACnD,MAAM,IAAIoQ,MACR,iBACEwB,OAAKyC,OAAOC,gBAAgB1U,KAAK2U,YACjC,oBACAvU,EACA,MAKRY,EAAS2Q,UAAUiF,uBAAyB,SAASlT,GACnD,IACE1D,KAAK6D,WAAWC,YAAYJ,GAC5B,MAAOyN,GACP,MAAIA,EAAM3O,QAAQqS,MAAM,4BAChB,IAAIrE,8BAA8B9M,wBAElCyN,IAKZnQ,EAAS2Q,UAAUkF,0BAA4B,SAASnT,GACtD,IAEE,MADA1D,KAAK6D,WAAWC,YAAYJ,GACtB,IAAI8M,8BAA8B9M,eACxC,MAAOyN,GACP,IAAKA,EAAM3O,QAAQqS,MAAM,4BACvB,MAAM1D,IAWZnQ,EAAS2Q,UAAUmF,QAAU,SAAS1W,EAAOmQ,GAE3C,OADAD,EAAyBC,GAClB3L,IAAQC,QAAQC,aAAciS,SAAU3W,EAAO4W,SAAUzG,KAGlEvP,EAAS2Q,UAAUsF,YAAc,WAC/B,MAAM,IAAIzG,MAAM,4DAGlBxP,EAAS2Q,UAAUuF,YAAc,SAASC,EAAM5G,GAC9CD,EAAyBC,GACzB,MAAMjO,EAASiR,KAAK6D,MAAMD,GAC1B,OAAOvS,IAAQC,QAAQC,aAAciS,SAAUzU,EAAQ0U,SAAUzG,KAGnEvP,EAAS2Q,UAAU0F,YAAc,SAAS3T,EAAS6M,GAEjD,IAAI+G,EADJhH,EAAyBC,GAEzB,IAEE,MAAM3M,EAAU5D,KAAKmW,mBAAmBzS,GACxC4T,EAAOlB,OAAIC,IAAIG,eAAe5S,GAAS6S,OACvC,MAAOlU,GAGP,GAA0B,KADVvC,KAAK6D,WAAWC,YAAYJ,GAChC6T,UAKV,MAAMhV,EAHN+U,EAAO,GAMX,OAAO1S,IAAQC,QAAQC,aACrBiS,SAAUO,EACVN,SAAUzG,KAIdvP,EAAS2Q,UAAU6F,aAAe,SAAS9T,EAAS6M,GAClDD,EAAyBC,GACzB,IAAI3M,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,OAAOkB,IAAQC,QAAQC,aACrBiS,SAAUnT,EAAQxD,MAAMqW,OACxBO,SAAUzG,KAIdvP,EAAS2Q,UAAU8F,aAAe,SAASrX,EAAOmQ,GAChDD,EAAyBC,GACzB,IAAImH,EAAM3W,cAAS8C,WAAW8T,cAC9B,OAAO/S,IAAQC,QAAQC,aACrBiS,SAAU3W,GAASsX,EAAIE,MACvBZ,SAAUzG,KAIdvP,EAAS2Q,UAAUkG,kBAAoB,SAASC,EAAOvH,GACrDD,EAAyBC,GACzB,IAAIO,EAAQ9Q,KAAK6D,WAAWkU,mBAC1BD,EACA9X,KAAK6D,WAAW8T,eAElB,OAAO/S,IAAQC,QAAQC,aACrBiS,YAAajG,KAAW,IACxBkG,SAAUzG,KAIdvP,EAAS2Q,UAAUqG,iBAAmB,SAAStU,EAAS6M,GACtDD,EAAyBC,GACzB,IAAI0H,EAAiBjY,KAAK6D,WAAWqU,cAAcxU,GACnD,OAAOkB,IAAQC,QAAQC,aACrBiS,SAAUkB,EACVjB,SAAUzG,KA8DdvP,EAAS2Q,UAAUwG,wBAA0B,SAASzU,EAASiN,GAC7D,OAAOF,EACLzQ,KAAKoY,iBAAiBC,KAAKrY,MAC3B0D,EACAiN,EACA,oEAIJ3P,EAAS2Q,UAAU2G,2BAA6B,SAAS5U,EAASiN,GAChE,OAAOF,EA6nDT,SAA6B/M,GAC3B,OAAQ1D,KAAKoY,iBAAiB1U,IA7nDR2U,KAAKrY,MACzB0D,EACAiN,EACA,oEAIJ3P,EAAS2Q,UAAU4G,wBAA0B,SAAS7U,EAASiN,GAC7D,OAAOF,EAipDT,SAAqB/M,GACnB,IACE,OAAO1D,KAAKwY,UAAU9U,GACtB,MAAOyN,GACP,OAAO,IAppDKkH,KAAKrY,MACjB0D,EACAiN,EACA,kEAIJ3P,EAAS2Q,UAAU8G,2BAA6B,SAAS/U,EAASiN,GAChE,OAAOF,EAgoDT,SAAwB/M,GACtB,IACE,OAAQ1D,KAAKwY,UAAU9U,GACvB,MAAOyN,GACPgB,MAnoDekG,KAAKrY,MACpB0D,EACAiN,EACA,oEAIJ3P,EAAS2Q,UAAU+G,yBAA2B,SAAShV,EAASiN,GAC9D,OAAOF,EAotDT,SAAoB/M,GAClB,IACE,OAAO1D,KAAK+T,WAAWrQ,GACvB,MAAOyN,GACPgB,MAvtDWkG,KAAKrY,MAChB0D,EACAiN,EACA,uDAIJ3P,EAAS2Q,UAAUgH,4BAA8B,SAASjV,EAASiN,GACjE,OAAOF,EAmtDT,SAAuB/M,GACrB,IACE,OAAQ1D,KAAK+T,WAAWrQ,GACxB,MAAOyN,GACPgB,MAttDckG,KAAKrY,MACnB0D,EACAiN,EACA,yDAIJ3P,EAAS2Q,UAAUiH,cAAgB,SAASlV,EAAS4T,GACnD,OApFF,SAAuB5G,EAAWrO,EAAQiV,EAAM3G,EAASC,GACvD,IAAKD,EACH,MAAM,IAAIH,MAAM,0BAElB,OAAO,IAAIvN,QAAQ,SAAS2C,EAASiL,GACnC,IAEIvO,EAFAwO,EAAQ,EACRC,EAAgB,IAEhBC,EAAWC,YAAY,WACrBH,EAAQH,IACVO,cAAcF,GACdH,EAAOD,IAET,IACEtO,EAASoO,EAAUrO,EAAQiV,GAC3B,MAAOnG,GACPD,cAAcF,GACdH,EAAOM,EAAM3O,SAEVF,EAEMA,IACT4O,cAAcF,GACdpL,KAHAkL,GAASC,GAKVA,KA2DE8H,CAkvDT,SAAgBnV,EAAS4T,GACvB,IACE,OAAOtX,KAAK8Y,OAAOpV,EAAS4T,GAC5B,MAAOnG,GACP,OAAO,IArvDAkH,KAAKrY,MACZ0D,EACA4T,EACAtX,KAAKkQ,eACL,4DAKJlP,EAAS2Q,UAAUoH,kBAAoB,WAiCrC/Y,KAAKkT,KACH,ghCAaA,IAIJlS,EAAS2Q,UAAUqH,cAAgB,WACjC7X,OAAOY,gBAAkB/B,KAAKkT,KAC5B,+CAEA,IAIJlS,EAAS2Q,UAAUsH,WAAa,WAS9B9X,OAAOc,iBAAmBjC,KAAKkT,KAC7B,gBAFA,8EAE+B,WAE/B,IAIJlS,EAAS2Q,UAAUuH,WAAa,WA8B9B/X,OAAOgB,iBAAmBnC,KAAKkT,KAC7B,gBAPA,4dAO+B,WAE/B,IAIJlS,EAAS2Q,UAAUwH,UAAY,WAC7BhY,OAAOiY,gBAAkBpZ,KAAKkT,KAC5B,sDAEA,IAIJlS,EAAS2Q,UAAU0H,QAAU,SAAS3V,GASpC,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C0S,OAAIkD,OAAOC,MAAM3V,IAGnB5C,EAAS2Q,UAAU6H,cAAgB,SAAS9V,GAS1C,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C0S,OAAIkD,OAAOG,YAAY7V,IAGzB5C,EAAS2Q,UAAU+H,cAAgB,SAAShW,GAO1C,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C0S,OAAIkD,OAAOK,WAAW/V,IAGxB5C,EAAS2Q,UAAUiI,UAAY,SAASlW,EAAS2N,GAW/C,IAAIzN,EAAU5D,KAAK6D,WAAWC,YAAYJ,GACtC8N,EAASM,EAAUlO,EAASyN,GAChC+E,OAAIkD,OAAOC,MAAM3V,EAAS4N,IAG5BxQ,EAAS2Q,UAAUkI,gBAAkB,SAASnW,EAAS2N,GAWrD,IAAIzN,EAAU5D,KAAK6D,WAAWC,YAAYJ,GACtC8N,EAASM,EAAUlO,EAASyN,GAChC+E,OAAIkD,OAAOG,YAAY7V,EAAS4N,IAGlCxQ,EAAS2Q,UAAUmI,gBAAkB,SAASpW,EAAS2N,GASrD,IAAIzN,EAAU5D,KAAK6D,WAAWC,YAAYJ,GACtC8N,EAASM,EAAUlO,EAASyN,GAChC+E,OAAIkD,OAAOK,WAAW/V,EAAS4N,IAGjCxQ,EAAS2Q,UAAUoI,QAAU,SAASrW,GAKpC,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GACtCE,EAAQoW,MACVpW,EAAQoW,QAER5D,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUC,QAIlDpZ,EAAS2Q,UAAU0I,eAAiB,WAKlCra,KAAK6D,WAAWyW,cAAe,EAC/BC,OAAKN,OAAOO,eAAgB,GAG9BxZ,EAAS2Q,UAAU8I,aAAe,WAKhCza,KAAK6D,WAAWyW,cAAe,EAC/BC,OAAKN,OAAOO,eAAgB,GAG9BxZ,EAAS2Q,UAAU+I,cAAgB,WAKjC1a,KAAK6D,WAAW8W,aAAc,EAC9BJ,OAAKN,OAAOW,cAAe,GAG7B5Z,EAAS2Q,UAAUkJ,YAAc,WAK/B7a,KAAK6D,WAAW8W,aAAc,EAC9BJ,OAAKN,OAAOW,cAAe,GAG7B5Z,EAAS2Q,UAAUmJ,aAAe,WAKhC9a,KAAK6D,WAAWkX,YAAa,EAC7BR,OAAKN,OAAOe,aAAc,GAG5Bha,EAAS2Q,UAAUsJ,WAAa,WAK9Bjb,KAAK6D,WAAWkX,YAAa,EAC7BR,OAAKN,OAAOe,aAAc,GAG5Bha,EAAS2Q,UAAUuJ,iBAAmB,WAKpClb,KAAK6D,WAAWsX,gBAAiB,EACjCZ,OAAKN,OAAOmB,iBAAkB,GAGhCpa,EAAS2Q,UAAU0J,eAAiB,WAKlCrb,KAAK6D,WAAWsX,gBAAiB,EACjCZ,OAAKN,OAAOmB,iBAAkB,GAwChCpa,EAAS2Q,UAAUlO,mBAAqB,SAASC,GAC/C,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GACtCF,EAAOI,EAAQyG,wBAKnB,OAJA+L,OAAIkD,OAAOgC,uBACT1X,EACA,IAAIoO,OAAKC,KAAKC,WAAW1O,EAAKiG,MAAQ,EAAGjG,EAAKoG,OAAS,IAElDhG,EAAQyG,yBAGjBrJ,EAAS2Q,UAAU4J,YAAc,SAAS7X,GAOxC,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GACtCF,EAAOI,EAAQyG,wBACnB+L,OAAIkD,OAAOkC,UACT5X,EACA,IAAIoO,OAAKC,KAAKC,WAAW1O,EAAKiG,MAAQ,EAAGjG,EAAKoG,OAAS,KAI3D5I,EAAS2Q,UAAU8J,WAAa,SAAS/X,GAMvC,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C1D,KAAK6D,WAAW6X,kBAAkB9X,EAAS,YAAY,IAGzD5C,EAAS2Q,UAAUgK,YAAc,SAASjY,GAOxC,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C1D,KAAK6D,WAAW6X,kBAAkB9X,EAAS,aAAa,IAG1D5C,EAAS2Q,UAAUiK,iBAAmB,SAASlY,GAO7C,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C1D,KAAK6D,WAAW6X,kBACd9X,EACA,aACA,OACAiY,OACAA,EACA7a,EAASoR,oBAIbpR,EAAS2Q,UAAUmK,cAAgB,SAASpY,EAAS2N,GASnD,IAAIzN,EAAU5D,KAAK6D,WAAWC,YAAYJ,GACtCqY,EAAW3K,EAAYxN,EAASyN,GAEpCrR,KAAK6D,WAAW6X,kBACd9X,EACA,aACA,EACAmY,EAAS,GACTA,EAAS,KAIb/a,EAAS2Q,UAAUqK,mBAAqB,SAAStY,EAAS2N,GASxD,IAAIzN,EAAU5D,KAAK6D,WAAWC,YAAYJ,GACtCqY,EAAW3K,EAAYxN,EAASyN,GAEpCrR,KAAK6D,WAAW6X,kBACd9X,EACA,aACA,EACAmY,EAAS,GACTA,EAAS,GACT/a,EAASoR,oBAIbpR,EAAS2Q,UAAUsK,UAAY,SAASvY,GAOtC,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C1D,KAAK6D,WAAW6X,kBAAkB9X,EAAS,WAAW,IAGxD5C,EAAS2Q,UAAUuK,eAAiB,SAASxY,GAO3C,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C1D,KAAK6D,WAAW6X,kBACd9X,EACA,WACA,OACAiY,OACAA,EACA7a,EAASoR,oBAIbpR,EAAS2Q,UAAUwK,YAAc,SAASzY,EAAS2N,GASjD,IAAIzN,EAAU5D,KAAK6D,WAAWC,YAAYJ,GACtCqY,EAAW3K,EAAYxN,EAASyN,GAEpCrR,KAAK6D,WAAW6X,kBACd9X,EACA,WACA,EACAmY,EAAS,GACTA,EAAS,KAIb/a,EAAS2Q,UAAUyK,iBAAmB,SAAS1Y,EAAS2N,GAStD,IAAIzN,EAAU5D,KAAK6D,WAAWC,YAAYJ,GACtCqY,EAAW3K,EAAYxN,EAASyN,GAEpCrR,KAAK6D,WAAW6X,kBACd9X,EACA,WACA,EACAmY,EAAS,GACTA,EAAS,GACT/a,EAASoR,oBAIbpR,EAAS2Q,UAAU0K,YAAc,SAAS3Y,GAOxC,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C1D,KAAK6D,WAAW6X,kBAAkB9X,EAAS,aAAa,IAG1D5C,EAAS2Q,UAAU2K,cAAgB,SAAS5Y,EAAS2N,GAUnD,IAAIzN,EAAU5D,KAAK6D,WAAWC,YAAYJ,GACtCqY,EAAW3K,EAAYxN,EAASyN,GAEpCrR,KAAK6D,WAAW6X,kBACd9X,EACA,aACA,EACAmY,EAAS,GACTA,EAAS,KAIb/a,EAAS2Q,UAAU4K,OAAS,SAAS7Y,EAAStD,GAU5C,GACEJ,KAAK6D,WAAWsX,gBAChBnb,KAAK6D,WAAWkX,YAChB/a,KAAK6D,WAAW8W,YAEhB,MAAM,IAAI/H,OACR,kGAIJ,IAAIhP,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAE1C6W,OAAKN,OAAOuC,SAAS5Y,EAAS,IAC9B,MAAM+P,EAAO/P,EAAQ+P,KACR,WAATA,GAA8B,SAATA,EACvB4G,OAAKN,OAAOuC,SAAS5Y,EAASxD,IAE9BgW,OAAIkD,OAAO3F,KAAK/P,EAASxD,GACrBwD,EAAQxD,QAAUA,GACpBma,OAAKN,OAAOuC,SAAS5Y,EAASxD,IAGlCgW,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUsC,SAGhDzb,EAAS2Q,UAAU+K,WAAa,SAAShZ,EAAStD,GAoBhD,GACEJ,KAAK6D,WAAWsX,gBAChBnb,KAAK6D,WAAWkX,YAChB/a,KAAK6D,WAAW8W,YAEhB,MAAM,IAAI/H,OACR,kGAIJ,IAAIhP,EAAU5D,KAAK6D,WAAWC,YAAYJ,GACtCsC,EAAOhG,KAAK2c,YAAYvc,GAC5BgW,OAAIkD,OAAO3F,KAAK/P,EAASoC,GACzBoQ,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUsC,SAGhDzb,EAAS2Q,UAAUiL,WAAa,WAO9B,MAAM,IAAIhK,OACR,sHAIJ5R,EAAS2Q,UAAUkL,SAAW,WAS5B,MAAM,IAAIjK,OACR,sHAIJ5R,EAAS2Q,UAAUmL,iBAAmB,SAASpZ,GAC7C,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,GAAuB,MAAnBE,EAAQgQ,QACV,MAAM,IAAIpD,MAAM,WAAa9M,EAAU,4BAEzC,OAAOE,GAGT5C,EAAS2Q,UAAUoL,QAAU,SAASrZ,GAMpC1D,KAAK8c,iBAAiBpZ,GAASkQ,SAAU,GAG3C5S,EAAS2Q,UAAUqL,UAAY,SAAStZ,GAMtC1D,KAAK8c,iBAAiBpZ,GAASkQ,SAAU,GAG3C5S,EAAS2Q,UAAUsL,SAAW,SAASnH,EAAeoH,GAiDpD,IAAItZ,EAAU5D,KAAK6D,WAAWC,YAAYgS,GAC1C,KAAM,YAAalS,GACjB,MAAM,IAAIgP,OACR,sDAGJ,IACIuK,EADUnd,KAAK+P,qBAAqBqN,kBAAkBF,GACrCG,WAAWzZ,GAChC5D,KAAK6D,WAAWyZ,aAAa1Z,EAASuZ,IAGxCnc,EAAS2Q,UAAU4L,eAAiB,SAAS7Z,EAASwZ,GASpD,IAAItZ,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,KAAM,YAAaE,GACjB,MAAM,IAAIgP,OACR,sDAGJ,IACIuK,EADcnd,KAAK+P,qBAAqBqN,kBAAkBF,GACrCG,WAAWzZ,GACpC5D,KAAK6D,WAAW2Z,aAAa5Z,EAASuZ,IAGxCnc,EAAS2Q,UAAU8L,kBAAoB,SAAS/Z,EAASwZ,GAUvD,IAAItZ,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,KAAM,YAAaE,GACjB,MAAM,IAAIgP,OACR,sDAGJ,IACIuK,EADcnd,KAAK+P,qBAAqBqN,kBAAkBF,GACrCG,WAAWzZ,GACpC5D,KAAK6D,WAAW6Z,gBAAgB9Z,EAASuZ,IAG3Cnc,EAAS2Q,UAAUgM,sBAAwB,SAASja,GAMlD,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,KAAM,YAAaE,GACjB,MAAM,IAAIgP,OACR,sDAGJ,IAAK,IAAI9S,EAAI,EAAGA,EAAI8D,EAAQmC,QAAQE,OAAQnG,IAC1CE,KAAK6D,WAAW6Z,gBAAgB9Z,EAASA,EAAQmC,QAAQjG,KAI7DkB,EAAS2Q,UAAUiM,SAAW,SAASC,GAOrCjZ,IAAQC,QAAQC,aACdgZ,KACEnK,KAAM,OACNnR,QACE,8GAGN,IAAIub,EAAO/d,KAAK6D,WAAWC,YAAY+Z,GACvC,OAAOzH,OAAIkD,OAAO0E,OAAOD,IAG3B/c,EAAS2Q,UAAUsM,sBAAwB,SAAStN,GAKlD,GAJe,MAAXA,IACFA,EAAU3Q,KAAKkQ,gBAGF,GAAXS,EAKJ,OAAO3P,EAASqR,4BACdrS,KAAKke,iBAAiB7F,KAAKrY,MAC3B2Q,EACA3Q,KAAKme,iBAAiB9F,KAAKrY,OAN3BA,KAAKme,oBAUTnd,EAAS2Q,UAAUyM,OAAS,SAASC,EAAKC,GAyBxC,GAR0B,MAAtBA,GAA2D,GAA7BA,EAAmBrY,OACnDjG,KAAK6D,WAAWya,oBAAqB,EACQ,QAApCA,EAAmBC,cAC5Bve,KAAK6D,WAAWya,oBAAqB,EAErCte,KAAK6D,WAAWya,oBAAqB,EAEvCte,KAAK6D,WAAW2a,aAAaH,GACO,MAAhCld,OAAO,wBAAkCA,OAAO,sBAClD,OAAOnB,KAAKie,yBAIhBjd,EAAS2Q,UAAU8M,aAAe,SAASJ,EAAKK,GAa9C1e,KAAK6D,WAAW8a,WAAWN,EAAKK,IAGlC1d,EAAS2Q,UAAUiN,eAAiB,SAASF,GAiD3C1e,KAAK6D,WAAWmP,aAAa0L,IAG/B1d,EAAS2Q,UAAUkN,cAAgB,SAASH,GAqB1C1e,KAAK6D,WAAWib,YAAYJ,IAG9B1d,EAAS2Q,UAAUoN,gBAAkB,WAMnC/e,KAAK6D,WAAWmP,gBAGlBhS,EAAS2Q,UAAUqN,cAAgB,SAAStb,GAa1C1D,KAAK6D,WAAWob,YAAYvb,IAG9B1C,EAAS2Q,UAAUuN,wCAA0C,SAC3DC,EACA9c,GAeA,OAAOrC,KAAK6D,WAAWub,kCACrBD,EACA9c,IAIJrB,EAAS2Q,UAAU0N,0CAA4C,SAC7DC,EACAjd,GAeA,OACmB,MAAjBlB,OAAOoe,QACkB,MAAzBpe,OAAOoe,OAAOld,IACdlB,OAAOoe,OAAOld,IAAWlB,QAO7BH,EAAS2Q,UAAU6N,eAAiB,SAASd,EAAU/N,GAahDA,IACHA,EAAU3Q,KAAKkQ,gBAEjB,IAAIsC,EAAcC,eAAe9B,GAmDjC,OAAO3P,EAASqR,4BAjDW,WACzB,IAAIoN,EACJ,IACE,GAAIf,GAAwB,QAAZA,EACde,EAAe1e,cAAS8C,WAAW6b,gBAAgBhB,GAAU,OACxD,CACL,IAAIiB,EAAQ5e,cAAS8C,WAAW+b,uBAChCH,EAAe1e,cAAS8C,WAAW6b,gBAAgBC,EAAM,IAAI,IAE/D,MAAOpd,GACP,IAAI,IAAImQ,MAAOC,UAAYH,EACzB,MAAMjQ,EAIV,IAAKkd,EAAc,OAAO,EAC1B,IACE,IAAKA,EAAa3M,SAAU,OAAO,EACnC,GAAI,eAAiB2M,EAAa3M,SAAU,OAAO,EACnD,MAAOvQ,GAEP,OAAO,EAET,QAAIsd,OAAeC,aACb,KAAOL,EAAa3M,SAASiN,MAK/BF,OAAeG,UAEfP,EAAa3M,SAASiN,MACtBhf,cAAS8C,WAAWoc,aAAanN,SAASiN,OAQzCN,EAAa5c,UACb9B,cAAS8C,WAAWqc,mBAAmBrd,SAASsd,YAIjD,YAAcV,EAAa5c,SAASsd,aAIwBxP,IAGpE3P,EAAS2Q,UAAU6N,eAAeY,4BAA6B,EAuD/Dpf,EAAS2Q,UAAU0O,SAAW,WAK5BrgB,KAAK6D,WAAWyc,UAGlBtf,EAAS2Q,UAAU4O,UAAY,WAK7BvgB,KAAK6D,WAAW2c,WAGlBxf,EAAS2Q,UAAU8O,QAAU,WAK3BzgB,KAAK6D,WAAW6c,SAGlB1f,EAAS2Q,UAAUgP,wBAA0B,WAC3C,GAAI3gB,KAAK6D,WAAW+c,YAClB,MAAM,IAAIhO,OACR,mCAAqC5S,KAAK6D,WAAWgd,eAAiB,KAG1E,GAAI7gB,KAAK6D,WAAWid,mBAClB,MAAM,IAAIlO,OACR,0CACE5S,KAAK6D,WAAWkd,sBAChB,MAKR/f,EAAS2Q,UAAUqP,eAAiB,WASlC,OAAOhhB,KAAK6D,WAAW+c,aAGzB5f,EAAS2Q,UAAUsP,gBAAkB,WASnC,OAAOjhB,KAAK6D,WAAWqd,cAGzBlgB,EAAS2Q,UAAUwP,sBAAwB,WASzC,OAAOnhB,KAAK6D,WAAWid,oBAEzB9f,EAAS2Q,UAAUyP,SAAW,WAoB5B,OAHKphB,KAAK6D,WAAW+c,aACnBS,OAAOC,KAAK,wBAEPthB,KAAK6D,WAAWgd,gBAEzB7f,EAAS2Q,UAAUyP,SAAShB,4BAA6B,EAEzDpf,EAAS2Q,UAAU4P,gBAAkB,WAgCnC,OAHKvhB,KAAK6D,WAAWid,oBACnBO,OAAOC,KAAK,+BAEPthB,KAAK6D,WAAWkd,uBAEzB/f,EAAS2Q,UAAU4P,gBAAgBnB,4BAA6B,EAEhEpf,EAAS2Q,UAAU6P,UAAY,WAoB7B,OAHKxhB,KAAK6D,WAAWqd,cACnBG,OAAOC,KAAK,yBAEPthB,KAAK6D,WAAW4d,iBAGzBzgB,EAAS2Q,UAAU+P,YAAc,WAK/B,OAAO1hB,KAAK6D,WAAWqc,mBAAmBpN,SAASiN,MAGrD/e,EAAS2Q,UAAUgD,SAAW,WAK5B,OAAO3U,KAAK6D,WAAW8Q,YAGzB3T,EAAS2Q,UAAUgQ,YAAc,WAK/B,OAAO3hB,KAAK6D,WAAW+d,YAGzB5gB,EAAS2Q,UAAUkQ,SAAW,SAASne,GAUrC,OADc1D,KAAK6D,WAAWC,YAAYJ,GAC3BtD,MAAMqW,QAGvBzV,EAAS2Q,UAAUmQ,QAAU,SAASpe,GAUpC,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,OAAO0S,OAAIC,IAAIG,eAAe5S,GAAS6S,QAGzCzV,EAAS2Q,UAAUoQ,QAAU,SAAS5O,GAepC,IAEE,IAAI7Q,EAAStC,KAAKkT,KAAKC,GAEvB,OAAI,MAAQ7Q,EAAe,OACpBA,EACP,MAAOC,GACP,MAAM,IAAIqQ,OAAc,uBAAyBoP,eAAwBzf,MAI7EvB,EAAS2Q,UAAUsQ,UAAY,SAASve,GAMtC,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,GAAuB,MAAnBE,EAAQgQ,QACV,MAAM,IAAIhB,OAAc,WAAalP,EAAU,4BAEjD,OAAOE,EAAQgQ,SAGjB5S,EAAS2Q,UAAUuQ,SAAW,SAASC,GAUrC,IAAIC,EAAU,qBAEd,IAAKA,EAAQ/d,KAAK8d,GAChB,MAAM,IAAIvP,OACR,uEAIJ,IAAIyP,EAASF,EAAiBtN,MAAMuN,GAEhCE,EAAYD,EAAO,GACnBE,EAAMF,EAAO,GACbG,EAAMH,EAAO,GAEbI,EAAQziB,KAAK6D,WAAWC,YAAYwe,GACxC,GAAIC,EAAME,EAAMC,KAAKzc,OAEnBob,OAAOC,KACL,qBAAuBiB,EAAM,gBAAkBE,EAAMC,KAAKzc,OAAS,aAEhE,MAAIuc,EAAMC,EAAMC,KAAKH,GAAKI,MAAM1c,QAShC,CAEL,OADoBmQ,OAAIC,IAAIG,eAAeiM,EAAMC,KAAKH,GAAKI,MAAMH,IAC5C/L,OATrB4K,OAAOC,KACL,wBACEkB,EACA,oBACAC,EAAMC,KAAKH,GAAKI,MAAM1c,OACtB,YAMN,OAAO,MAGTjF,EAAS2Q,UAAUiR,kBAAoB,SAAS9M,GAM9C,OAAO9V,KAAK6iB,6BAA6B/M,EAAe,SAG1D9U,EAAS2Q,UAAUmR,iBAAmB,SAAShN,GAM7C,OAAO9V,KAAKgW,2BAA2BF,EAAe,SAGxD9U,EAAS2Q,UAAUoR,kBAAoB,SAASjN,GAM9C,OAAO9V,KAAK6iB,6BAA6B/M,EAAe,UAG1D9U,EAAS2Q,UAAUqR,iBAAmB,SAASlN,GAM7C,OAAO9V,KAAKgW,2BAA2BF,EAAe,UAGxD9U,EAAS2Q,UAAUsR,mBAAqB,SAASnN,GAM/C,OAAO9V,KAAK6iB,6BAA6B/M,EAAe,UAG1D9U,EAAS2Q,UAAUuR,iBAAmB,SAASpN,GAM7C,OAAO9V,KAAKgW,2BAA2BF,EAAe,UAGxD9U,EAAS2Q,UAAUwR,eAAiB,SAASrN,GAM3C,OAAO9V,KAAK6iB,6BAA6B/M,EAAe,OAG1D9U,EAAS2Q,UAAUyR,cAAgB,SAAStN,GAM1C,OAAO9V,KAAKgW,2BAA2BF,EAAe,OAGxD9U,EAAS2Q,UAAU0R,oBAAsB,SAASvN,GAMhD,IAAIlS,EAAU5D,KAAK6D,WAAWC,YAAYgS,GAC1C,KAAM,YAAalS,GACjB,MAAM,IAAIgP,OACR,sDAIJ,IAAK,IAAI9S,EAAI,EAAGA,EAAI8D,EAAQmC,QAAQE,OAAQnG,IAC1C,GAAI8D,EAAQmC,QAAQjG,GAAGwjB,SACrB,OAAO,EAGX,OAAO,GAGTtiB,EAAS2Q,UAAUkR,6BAA+B,SAASnf,EAAS6f,GAClE,IAAI3f,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAC1C,KAAM,YAAaE,GACjB,MAAM,IAAIgP,OACR,sDAIJ,IAAI4Q,KAEJ,IAAK,IAAI1jB,EAAI,EAAGA,EAAI8D,EAAQmC,QAAQE,OAAQnG,IAC1C,GAAI8D,EAAQmC,QAAQjG,GAAGwjB,SAAU,CAC/B,IAAIG,EAAU7f,EAAQmC,QAAQjG,GAAGyjB,GACjCC,EAAgBla,KAAKma,GAIzB,OAD8B,GAA1BD,EAAgBvd,QAAaob,OAAOC,KAAK,sBACtCkC,GAGTxiB,EAAS2Q,UAAUqE,2BAA6B,SAAStS,EAAS6f,GAChE,IAAIC,EAAkBxjB,KAAK6iB,6BAA6Bnf,EAAS6f,GAIjE,OAHIC,EAAgBvd,OAAS,GAC3Bob,OAAOC,KAAK,kCAEPkC,EAAgB,IAGzBxiB,EAAS2Q,UAAU+R,iBAAmB,SAAS5N,GAM7C,IAAIlS,EAAU5D,KAAK6D,WAAWC,YAAYgS,GAEtC6N,KAEJ,IAAK,IAAI7jB,EAAI,EAAGA,EAAI8D,EAAQmC,QAAQE,OAAQnG,IAAK,CAC/C,IAAIqd,EAASvZ,EAAQmC,QAAQjG,GAAGwX,KAChCqM,EAAcra,KAAK6T,GAGrB,OAAOwG,GAGT3iB,EAAS2Q,UAAUiS,aAAe,SAASC,GASzC,IAAIvhB,EAAStC,KAAK6D,WAAWqU,cAAc2L,GAC3C,GAAc,MAAVvhB,EACF,MAAM,IAAIsQ,OACR,qCAAuCiR,GAG3C,OAAOvhB,GAGTtB,EAAS2Q,UAAUmS,cAAgB,SAAS1B,GAM1C,IAAI2B,EAAU/jB,KAAK6D,WAAW+d,WAE1BoC,EAAiB,IAAIC,OAAe7B,GACxC,GAAI4B,EAAeE,UAAYD,OAAeE,WAAWC,KACvB,GAA5BhC,EAAQ7U,QAAQ,WAClB6U,EAAUA,EAAQ5U,UAAU,QAAQvH,SAEtC+d,EAAeK,QAAU,IAAIJ,OAAeE,WAAWG,aAAalC,QAC/D,GAAI4B,EAAeE,UAAYD,OAAeE,WAAWI,MAE9D,OADAnC,EAAUA,EAAQ5U,UAAU,SAASvH,SACD,GAA7B8d,EAAQxW,QAAQ6U,GAEzB,OAAO4B,EAAeQ,QAAQT,IAOhC/iB,EAAS2Q,UAAUyG,iBAAmB,SAAS1U,GAO7C,OAAe,MADD1D,KAAK6D,WAAW4gB,kBAAkB/gB,IA2BlD1C,EAAS2Q,UAAU6G,UAAY,SAAS9U,GAWtC,IAAIE,EAGJ,IAFAA,EAAU5D,KAAK6D,WAAWC,YAAYJ,IAE1BghB,QAAS,CAEnB,GAAe,SADD,IAAIC,OAAO/gB,EAAQ8gB,SAASnG,eAEpC3a,EAAQ+P,KAAM,CAEhB,GAAmB,UADD,IAAIgR,OAAO/gB,EAAQ+P,MAAM4K,cAEzC,OAAO,GAKf,IAAIqG,EAAa5kB,KAAK6kB,2BAA2BjhB,EAAS,cACtDkhB,EAAe9kB,KAAK8kB,aAAalhB,GACrC,MAAqB,UAAdghB,GAA0BE,GAGnC9jB,EAAS2Q,UAAUkT,2BAA6B,SAASjhB,EAAS2f,GAChE,IACIwB,EADiB/kB,KAAKglB,mBAAmBphB,GACV2f,GACnC,MAAqB,WAAjBwB,GAA8BnhB,EAAQyF,WAAWxC,MAC5C7G,KAAK6kB,2BAA2BjhB,EAAQyF,WAAYka,GAEtDwB,GAGT/jB,EAAS2Q,UAAUmT,aAAe,SAASlhB,GAEzC,MAAe,QADD5D,KAAK6kB,2BAA2BjhB,EAAS,cAEnDA,EAAQyF,WAAWxC,OACd7G,KAAK8kB,aAAalhB,EAAQyF,cAKrCrI,EAAS2Q,UAAUqT,mBAAqB,SAASphB,GAC/C,QAAqBiY,GAAjBjY,EAAQiD,MACV,OAEF,IAAI1F,EAASnB,KAAK6D,WAAWqc,mBAC7B,GAAI/e,EAAO8G,iBAET,OAAO9G,EAAO8G,iBAAiBrE,EAAS,MAE1C,GAAIA,EAAQqhB,aAEV,OAAOrhB,EAAQqhB,aAMjB,GACE9jB,EAAO0B,SAASqiB,aAChB/jB,EAAO0B,SAASqiB,YAAYjd,iBAE5B,OAAO9G,EAAO0B,SAASqiB,YAAYjd,iBAAiBrE,EAAS,MAG/D,MAAM,IAAIgP,OACR,0DAoBJ5R,EAAS2Q,UAAUoC,WAAa,SAASrQ,GAQvC,IAAIE,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAI1C,QAHqBmY,GAAjBjY,EAAQxD,OACVihB,OAAOC,KAAK,WAAa5d,EAAU,qBAEjCE,EAAQuhB,SACV,OAAO,EAIT,IAAIC,EAAexhB,EAAQyhB,iBAAiB,YAC5C,GAAID,EAAc,CAEhB,GAAqC,kBAA1BA,EAAaE,UAMtB,OAAO,EAJP,GADeF,EAAaE,UAE1B,OAAO,EAMb,OAAO,GAWTtkB,EAAS2Q,UAAUmH,OAAS,SAASpV,EAAS4T,GAQ5C,IAAI1T,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAE1C,OADkB0S,OAAIC,IAAIG,eAAe5S,GAAS6S,SAC3Ba,GAGzBtW,EAAS2Q,UAAU4T,cAAgB,WAOjC,OAAOvlB,KAAK6D,WAAW0hB,iBAGzBvkB,EAAS2Q,UAAU6T,YAAc,WAO/B,OAAOxlB,KAAK6D,WAAW2hB,eAGzBxkB,EAAS2Q,UAAU8T,aAAe,WAOhC,OAAOzlB,KAAK6D,WAAW4hB,gBAGzBzkB,EAAS2Q,UAAU+T,gBAAkB,SAASC,GAU5C,IAAIC,EAAW,IAAIlU,OAAOiU,GACtBC,EAAS9V,aAAe4B,QAAUkU,EAAW,EAC/C5lB,KAAKoQ,WAAapP,EAASqP,oBAE3BrQ,KAAKoQ,WAAauV,GAItB3kB,EAAS2Q,UAAUkU,cAAgB,WAKjC,OAAO7lB,KAAKoQ,YAGdpP,EAAS2Q,UAAUmU,cAAgB,SAASpiB,EAASqiB,GAKnD,IAAIniB,EAAU5D,KAAK6D,WAAWC,YAAYJ,GACtCsiB,EAAgB5U,EAAYxN,GAC5BqiB,EAAeD,EAAc,GAC7BE,EAAeF,EAAc,GAE7BG,EAAYJ,EAAgBtU,MAAM,KAClC2U,EAAY1U,OAAOyU,EAAU,IAC7BE,EAAY3U,OAAOyU,EAAU,IAE7BG,EACFL,EAAeG,EAAY,EAAI,EAAIH,EAAeG,EAChDG,EACFL,EAAeG,EAAY,EAAI,EAAIH,EAAeG,EAEhDjW,EAAapQ,KAAKoQ,WAClBoW,EAAO,SAASC,EAASC,GAC3B,OAAID,GAAWC,EAAaD,EACxBja,KAAKma,IAAIF,EAAUC,GAAQtW,EAAmBsW,EAC3CD,EAAUC,EAAOD,EAAUrW,EAAaqW,EAAUrW,GAG3DpQ,KAAK6D,WAAW6X,kBACd9X,EACA,aACA,EACAqiB,EACAC,GAEFlmB,KAAK6D,WAAW6X,kBACd9X,EACA,aACA,EACAqiB,EACAC,GAEF,IAAIU,EAAUX,EACVY,EAAUX,EAEd,KAAOU,GAAWN,GAAiBO,GAAWN,GAC5CK,EAAUJ,EAAKI,EAASN,GACxBO,EAAUL,EAAKK,EAASN,GACxBvmB,KAAK6D,WAAW6X,kBACd9X,EACA,aACA,EACAgjB,EACAC,GAIJ7mB,KAAK6D,WAAW6X,kBACd9X,EACA,aACA,EACA0iB,EACAC,GAEFvmB,KAAK6D,WAAW6X,kBACd9X,EACA,WACA,EACA0iB,EACAC,IAIJvlB,EAAS2Q,UAAUmV,sBAAwB,SACzCC,EACAC,GAOA,GAAKhnB,KAAK6D,WAAWC,YAAYijB,GAA4BE,UAwBtD,CAEL,IAAIrjB,EAAU5D,KAAK6D,WAAWC,YAAYijB,GACtC1kB,EAASrC,KAAK6D,WAAWC,YAAYkjB,GACzChnB,KAAK6D,WAAWqjB,iBAAiBtjB,EAASvB,OA5B4B,CAEtE,IAAI8kB,EAASnnB,KAAK4R,uBAAuBmV,GACrCK,EAASpnB,KAAK6R,sBAAsBkV,GAEpCM,EAAmBrnB,KAAK4R,uBAC1BoV,GAEEM,EAAkBtnB,KAAK6R,sBACzBmV,GAEEO,EAAmBvnB,KAAKwnB,gBAAgBR,GACxCS,EAAoBznB,KAAK0nB,iBAC3BV,GASEjB,EANOvZ,KAAKmb,MAAMN,EAAmBE,EAAmB,GAGxCJ,EAGgB,KALzB3a,KAAKmb,MAAML,EAAkBG,EAAoB,GAGxCL,GAGpBpnB,KAAK8lB,cAAciB,EAA4BhB,KASnD/kB,EAAS2Q,UAAUiW,cAAgB,WAIjC5nB,KAAK6D,WAAWqc,mBAAmBlG,SAGrChZ,EAAS2Q,UAAUkW,iBAAmB,WAIpC,IAAI1mB,EAASnB,KAAK6D,WAAWqc,mBACf,MAAV/e,GAAkBA,EAAO2mB,SAC3B3mB,EAAO4mB,OAAO,EAAG,GAKK,GAAlB5mB,EAAO6mB,SACT7mB,EAAO4mB,OAAO,EAAG,GAGnB5mB,EAAO8mB,SAASH,OAAOI,WAAYJ,OAAOK,eAI9CnnB,EAAS2Q,UAAUyW,cAAgB,WAMjC,OAAOpoB,KAAK6D,WAAW8T,cAAc0Q,qBAAqB,QAAQ,GAAG9Q,WAGvEvW,EAAS2Q,UAAU2W,oBAAsB,SAAS5kB,EAAS6kB,GAQzD,IAAI3kB,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAQ1C,QAPqBmY,GAAjBjY,EAAQxD,OACVihB,OAAOC,KAAK,WAAa5d,EAAU,sBAEpB,GAAb6kB,IACFA,EAAW3kB,EAAQxD,MAAM6F,QAGvBrC,EAAQ4kB,oBAAsB3I,OAAe4I,QAC/C7kB,EAAQoW,QACRpW,EAAQ4kB,kBAA4BD,EAAkBA,QACjD,GAAI3kB,EAAQ8kB,gBAAiB,CAClCtS,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUC,OAC9C,IAAIuO,EAAQ/kB,EAAQ8kB,kBACpBC,EAAMC,UAAS,GACfD,EAAME,QAAQ,YAAaN,GAC3BI,EAAMG,UAAU,YAAaP,GAC7BI,EAAMI,WAIV/nB,EAAS2Q,UAAUqX,gBAAkB,SAAStlB,GAQ5C,IACIulB,EADArlB,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAEtCuH,EAAQ,EACZ,KAAsD,OAA9Cge,EAAkBrlB,EAAQqlB,kBAC3BjpB,KAAKkpB,0BAA0BD,IAClChe,IAEFrH,EAAUqlB,EAEZ,OAAOhe,GAGTjK,EAAS2Q,UAAUwX,UAAY,SAASC,EAAUC,GAShD,IAIIJ,EAJAK,EAAWtpB,KAAK6D,WAAWC,YAAYslB,GACvCG,EAAWvpB,KAAK6D,WAAWC,YAAYulB,GAC3C,GAAIC,IAAaC,EAAU,OAAO,EAGlC,KAAuD,OAA/CN,EAAkBM,EAASN,kBAA0B,CAC3D,GAAIA,IAAoBK,EACtB,OAAO,EAETC,EAAWN,EAEb,OAAO,GAGTjoB,EAAS2Q,UAAUuX,0BAA4B,SAASlgB,GACtD,OACmB,GAAjBA,EAAKxB,UAAmC,GAAjBwB,EAAKxB,WAAkB,aAAanD,KAAK2E,EAAKwgB,OAIzExoB,EAAS2Q,UAAUC,uBAAyB,SAASlO,GAOnD,IAAIE,EAMA0N,GAJF1N,EADE,iBAAmBF,EACX1D,KAAK6D,WAAWC,YAAYJ,GAE5BA,GAEI+lB,WACZC,EAAgB9lB,EAAQ+lB,aAE5B,KAAwB,MAAjBD,GAAuB,CAC5B,GAAI7mB,SAAS+mB,IACkB,SAAzBF,EAAchF,SAA+C,QAAzBgF,EAAchF,UACpDpT,GAAKoY,EAAcG,iBAIrB,GAA6B,SAAzBH,EAAchF,QAAoB,CACpC,IAAIoF,EAAepe,SAASge,EAAcK,QAC1C,GAAIC,MAAMF,GAAe,CAEJ,MADDJ,EAAc9F,aAAa,WAE3CtS,GAAK,QAEEwY,EAAe,IACxBxY,GAAKwY,GAIXxY,GAAKoY,EAAcD,WACnBC,EAAgBA,EAAcC,aAEhC,OAAOrY,GAGTtQ,EAAS2Q,UAAUE,sBAAwB,SAASnO,GAOlD,IAAIE,EAEFA,EADE,iBAAmBF,EACX1D,KAAK6D,WAAWC,YAAYJ,GAE5BA,EAGZ,IAAI6N,EAAI,EAER,KAAkB,MAAX3N,GAAiB,CACtB,GAAIf,SAAS+mB,IACY,SAAnBhmB,EAAQ8gB,SAAyC,QAAnB9gB,EAAQ8gB,UACxCnT,GAAK3N,EAAQqmB,gBAIf,GAAuB,SAAnBrmB,EAAQ8gB,QAAoB,CAC9B,IAAIoF,EAAepe,SAAS9H,EAAQmmB,QACpC,GAAIC,MAAMF,GAAe,CAEJ,MADDlmB,EAAQggB,aAAa,WAErCrS,GAAK,QAEEuY,EAAe,IACxBvY,GAAKuY,GAIXvY,GAAK3N,EAAQsmB,UAWXtmB,EALAA,EAAQ+lB,cACR/lB,EAAQ+lB,aAAapd,cACrB3I,EAAQ+lB,aAAapd,aAAe3I,EAAQ2I,aAGlC3I,EAAQ+lB,aAAaA,aAGrB/lB,EAAQ+lB,aAGtB,OAAOpY,GAGTvQ,EAAS2Q,UAAU6V,gBAAkB,SAAS9jB,GAQ5C,OADc1D,KAAK6D,WAAWC,YAAYJ,GAC3B2I,aAGjBrL,EAAS2Q,UAAU+V,iBAAmB,SAAShkB,GAQ7C,OADc1D,KAAK6D,WAAWC,YAAYJ,GAC3B6I,cAGjBvL,EAAS2Q,UAAUwY,kBAAoB,SAASzmB,GAW9C,IAGI0mB,EAHAxmB,EAAU5D,KAAK6D,WAAWC,YAAYJ,GACtCgU,EAAM1X,KAAK6D,WAAW8T,cACtBlT,EAAMzE,KAAK6D,WAAWqc,mBAE1B,GAAIxI,EAAI2S,YAAcxK,OAAe4I,QAAS,CAC5C,IACE,IAAI6B,EAAc5S,EAAI2S,UAAUE,cAAcC,YAC9CJ,EAAexmB,EAAQ8kB,kBACvB4B,EAAY9D,KAAK,YAAa,GAC9B4D,EAAa5D,KAAK,YAAa,GAC/B4D,EAAaK,YAAY,WAAYH,GACrC,MAAO/nB,GACP8e,OAAOC,KAAK,oCAGd,OADaqD,OAAOyF,EAAa9S,MAAMzK,QAAQ,MAAO,IAAI5G,OAG1D,QAAqC,IAA1BrC,EAAQ8mB,eAQjB,OANEjmB,EAAIkmB,mBACoC9O,UAAjCpX,EAAIkmB,eAAeC,YACO,GAAjCnmB,EAAIkmB,eAAeC,YAEnBvJ,OAAOC,KAAK,oCAEP1d,EAAQ8mB,eAGnB,MAAM,IAAIla,MAAM,qDAGlBxP,EAAS2Q,UAAUkZ,cAAgB,SAASC,GAU1C,OAAOA,GAGT9pB,EAAS2Q,UAAUoZ,cAAgB,SAASjT,GAY1C,OAJa9X,KAAK6D,WAAWkU,mBAC3BD,EACA9X,KAAK6D,WAAW8T,gBAKpB3W,EAAS2Q,UAAUqZ,YAAc,SAASC,GAYxC,OAJajrB,KAAK6D,WAAWqnB,iBAC3BD,EACAjrB,KAAK6D,WAAW8T,gBAKpB3W,EAAS2Q,UAAUwZ,WAAa,SAASznB,EAAS0nB,GAQlCprB,KAAK6D,WAAWC,YAAYJ,GAClC2nB,GAAKD,GAGfpqB,EAAS2Q,UAAU2Z,mBAAqB,SAASC,GAU3C,SAAWA,GAAS,KAAOA,IAE7BA,GAAQ,GAEVvrB,KAAK6D,WAAW2nB,oBAAoBD,IAGtCvqB,EAAS2Q,UAAU8Z,+BAAiC,SAASC,GAgBvD,SAAWA,GAAU,KAAOA,IAC9BA,GAAS,GAEX1rB,KAAK6D,WAAW8nB,gCAAgCD,IAGlD1qB,EAAS2Q,UAAUia,mBAAqB,SAASzY,EAAQxC,GAcvD,OAAO3P,EAASqR,4BAA4B,WAC1C,OAAOrS,KAAKkT,KAAKC,IAChBxC,IAGL3P,EAAS2Q,UAAUia,mBAAmBxL,4BAA6B,EAEnEpf,EAAS2Q,UAAUka,aAAe,SAASlb,GAQpCA,IACHA,EAAU3P,EAASmP,iBAErBnQ,KAAKkQ,eAAiBS,GAGxB3P,EAAS2Q,UAAUma,oBAAsB,SAASnb,GAchD,GAAoC,MAAhCxP,OAAO,wBAAkCA,OAAO,sBAClD,OAAOnB,KAAKie,sBAAsBtN,IAItC3P,EAAS2Q,UAAUoa,qBAAuB,SAASC,EAAerb,GAahE,GAAoC,MAAhCxP,OAAO,wBAAkCA,OAAO,sBAClD,OAAOnB,KAAKie,sBAAsBtN,IAItC3P,EAAS2Q,UAAUuM,iBAAmB,WACpC,OAAOle,KAAK6D,WAAWooB,mBAGzBjrB,EAAS2Q,UAAUwM,iBAAmB,WACpC,OAAOne,KAAK6D,WAAWqoB,mBAGzBlrB,EAAS2Q,UAAUma,oBAAoB1L,4BAA6B,EAMpEpf,EAAS2Q,UAAU9P,oBAAsB,SAASzB,GAChD,IAAKA,EAAM+S,OAAQ,CAEjB,IAAI0B,EAAQzU,EAAMyU,MAAM,gCACxB,GAAIA,GAASA,EAAM,GAAI,CACrBjQ,IAAQC,QAAQC,aACdgZ,KACEnK,KAAM,OACNnR,QACE,6FAGN,IAAIF,EAAStC,KAAKkT,KAAK2B,EAAM,IAC7B,OAAiB,MAAVvS,EAAiB,KAAOA,EAAO6pB,YAG1C,OAAO/rB,GAGTY,EAAS2Q,UAAUgL,YAAc,SAAS/P,GACxC,IAAI5G,KACA6O,EAAQjI,EAAIiI,MAAM,cACtB,GAAKA,EAEE,CACL,IAAI/U,EAAI,EACR,KAAOA,EAAI8M,EAAI3G,QAAQ,CACrB,IAAImmB,EAAavX,EAAMwX,QACrBC,EAAkB1f,EAAIW,QAAQ6e,EAAYtsB,GAM5C,GALIwsB,EAAkBxsB,IAEpBkG,EAAKsD,KAAKsD,EAAI2f,OAAOzsB,EAAGwsB,EAAkBxsB,IAC1CA,EAAIwsB,GAEFF,EAAY,CACd,GAAI,iBAAiB/nB,KAAK+nB,GAAa,CAErC,IAAII,EAAUJ,EAAWvX,MAAM,mBAAmB,GAC9C4X,EAAMrW,OAAIsW,SAASC,KAAKH,GAC5B,IAAIC,EAGF,MAAM,IAAIjc,0BAA0Bgc,KAFpCxmB,EAAKsD,KAAKmjB,QAMZzmB,EAAKsD,KAAK8iB,GAEZtsB,GAAKssB,EAAWnmB,YACPnG,EAAI8M,EAAI3G,SAEjBD,EAAKsD,KAAKsD,EAAI2f,OAAOzsB,EAAG8M,EAAI3G,SAC5BnG,EAAI8M,EAAI3G,cA7BZD,EAAKsD,KAAKsD,GAiCZ,OAAO5G,GAGThF,EAAS2Q,UAAUib,UAAY,WAO7B,OADU5sB,KAAK6D,WAAW8T,cACfkV,QAGb7rB,EAAS2Q,UAAUmb,gBAAkB,SAASC,GAM5C,IAAIC,EAAIhtB,KAAK6D,WAAWipB,gBAAgBC,GACxC,GAAU,OAANC,EACF,MAAM,IAAIpa,OAAc,WAAama,EAAO,mBAE9C,OAAOC,GAGThsB,EAAS2Q,UAAUsb,gBAAkB,SAASF,GAQ5C,QADmB,OADX/sB,KAAK6D,WAAWipB,gBAAgBC,KAK1C/rB,EAAS2Q,UAAUub,eAAiB,SAASC,EAAeC,GAY1D,IAAIC,EAAU,oDAAoDhpB,KAChE8oB,GAEF,IAAKE,EACH,MAAM,IAAIza,OAAc,sBAE1B,IAAIia,EAASM,EAAc1W,OAE3B,GADA4W,EAAU,gBAAgBC,KAAKF,GAClB,CACX,IAAIG,GAA2B,IAAI7a,MAAOC,UAAyB,IAAb0a,EAAQ,GAC9DR,GAAU,aAAe,IAAIna,KAAK6a,GAA0BC,cAG9D,GADAH,EAAU,qBAAqBC,KAAKF,GACvB,CACX,IAAIK,EAAOJ,EAAQ,GACfxN,OAAe6N,OAEb,KAAOD,IACTA,EAAOA,EAAK5gB,QAAQ,MAAO,KAG/BggB,GAAU,UAAYY,EAGxB,GADAJ,EAAU,uBAAuBC,KAAKF,GACzB,CAEXP,GAAU,YADGQ,EAAQ,GAIvBrtB,KAAK6D,WAAW8T,cAAckV,OAASA,GAGzC7rB,EAAS2Q,UAAUgc,eAAiB,SAASZ,EAAMK,GAoBjD,IAAIK,EAAO,GACPG,EAAS,GACTC,GAAU,EACVC,GAAU,EACVT,EAAU,qBAAqBC,KAAKF,GACpCC,IACFS,GAAU,EACVL,EAAOJ,EAAQ,KAEjBA,EAAU,uBAAuBC,KAAKF,MAEpCU,GAAU,EACVF,EAASP,EAAQ,KAEnBA,EAAU,wBAAwBC,KAAKF,MAErCU,GAAU,EAEN,UADJD,EAAUR,EAAQ,MAEhBQ,GAAU,IAIVT,IAAkBU,IAEpBL,EAAOL,GAELvN,OAAe6N,OAEb,KAAOD,IACTA,EAAOA,EAAK5gB,QAAQ,MAAO,KAG/B4gB,EAAOA,EAAKhX,OACZmX,EAASA,EAAOnX,OAChB,IAAIsX,EAAahB,EAAKtW,OAClBoX,EACF7tB,KAAK6D,WAAWmqB,wBAAwBD,EAAYH,EAAQH,GAE5DztB,KAAK6D,WAAWoqB,aAAaF,EAAYH,EAAQH,IAIrDzsB,EAAS2Q,UAAUuc,0BAA4B,WAK7C,IAAIzpB,EAAMzE,KAAK6D,WAAWqc,mBACtBxI,EAAMjT,EAAI5B,SACVsrB,EAAcnuB,KAAK6D,WAAWuqB,kBAAkB1W,GAChDkW,EAASlW,EAAIkW,OACbH,EAAOhpB,EAAIqO,SAASub,SACxB,IAAK,IAAIvuB,EAAI,EAAGA,EAAIquB,EAAYloB,OAAQnG,IACtCE,KAAK6D,WAAWmqB,wBAAwBG,EAAYruB,GAAI8tB,EAAQH,EAAMhpB,IAuB1EzD,EAAS2Q,UAAU2c,gBAAkB,SAASnb,EAAQ5C,GACpD,MAAMnQ,EAAQJ,KAAKkT,KAAKC,EAAOA,OAAQA,EAAOC,MAC9C,GAAIhT,GAAoC,YAA3BA,EAAM0P,YAAYid,KAC7B,MAAM,IAAIvc,MAAM,qDAElB,GAAID,EACF,OAAO3L,IAAQC,QAAQC,aAAciS,SAAU3W,EAAO4W,SAAUzG,KAIpEvP,EAAS2Q,UAAU4c,qBAAuB,SAASpb,EAAQ5C,GACzD,MAAMnQ,EAAQJ,KAAKkT,KAAKC,EAAOA,OAAQA,EAAOC,MAC9C,GAAIhT,GAAoC,YAA3BA,EAAM0P,YAAYid,KAC7B,MAAM,IAAIvc,oDAENpQ,EAAQA,EAAM0P,YAAYid,KAAO3sB,KAIvC,OAAO6C,QAAQ2C,QAAQxF,GAAO8C,KAAK8pB,IACjC,GAAIzc,EACF,OAAO3L,IAAQC,QAAQC,aAAciS,SAAUiW,EAAGhW,SAAUzG,OAKlEvP,EAAS2Q,UAAU6c,YAAc,SAASrb,GAWxCnT,KAAKkT,KAAKC,EAAOA,OAAQA,EAAOC,OAGlCpS,EAAS2Q,UAAU8c,SAAW,SAASC,EAAYC,GAejD,IAAIC,EAAOC,aAAeC,eAAeD,YACrCE,GACFC,OAAQ,WACN,IAAK,IAAIC,KAAQjvB,KAAKwpB,KACpBxpB,KAAKwpB,KAAKyF,GAAQL,EAAKK,IAG3BC,QAAS,WACP,IAAK,IAAID,KAAQjvB,KAAKwpB,KACpBoF,EAAKK,GAAQjvB,KAAKwpB,KAAKyF,IAG3BzF,MACE2F,iBAAkB,KAClBC,eAAgB,KAChBC,YAAa,KACbC,gBAAiB,KACjBC,aAAc,KACdC,sBAAuB,KACvBC,aAAc,KACdC,oBAAqB,OAMrBC,EADOC,cAAcC,cAAcC,cAAcpB,GACzBqB,oBAAoBpB,GAGhD,IACEI,EAAcC,SACdJ,EAAKO,kBAAmB,EACxBP,EAAKQ,eAAiB,aACtBR,EAAKS,YAAc,WACjB,GAAyC,GAArCrvB,KAAKwvB,sBAAsBvpB,OAC7B,OAAO,KAGT,OADcjG,KAAKwvB,sBAAsBnD,SAG3CuC,EAAKU,gBAAkB,SAAShtB,GAC1BA,EAAO0tB,SACThwB,KAAKyvB,cAAe,EACpBzvB,KAAKiwB,sBAAsB3mB,KAAKhH,EAAOsO,iBAGA,GAArC5Q,KAAKwvB,sBAAsBvpB,SAC7B3D,GACE0tB,OAAQhwB,KAAKyvB,aACb7e,eAAgB5Q,KAAKiwB,sBAAsBC,KAAK,OAGlDnB,EAAcG,UACdlvB,KAAKsvB,gBAAgBhtB,KAGzBssB,EAAKW,aAAe,SAASY,GAE3BpB,EAAcG,UACdlvB,KAAKuvB,aAAaY,IAGpBvB,EAAKY,sBAAwBG,EAC7Bf,EAAKa,cAAe,EACpBb,EAAKqB,yBACL,MAAO1tB,GAEPwsB,EAAcG,YAIlBluB,EAAS2Q,UAAUye,YAAc,SAASC,EAAeC,GAmBvD,GAAIA,GAAeztB,SAAS0tB,eAAeD,GAAc,CACvD,IAAIE,EAAM,oBAAsBF,EAAc,oBAC9C,MAAM,IAAI1d,OAAc4d,GAG1B,IAAIC,EAAO5tB,SAASwlB,qBAAqB,QAAQ,GAC7ClV,EAAStQ,SAAS6tB,cAAc,UAEpCvd,EAAOQ,KAAO,kBAEV2c,IACFnd,EAAOkY,GAAKiF,GAIdD,EAAgBA,EACbxjB,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,SAAU,KAErBsG,EAAOmE,KAAO+Y,EACdI,EAAKE,YAAYxd,IAGnBnS,EAAS2Q,UAAUif,eAAiB,SAASN,GAO3C,IAAInd,EAAStQ,SAAS0tB,eAAeD,GAEjCnd,GAAgC,UAAtB0d,eAAW1d,IACvBA,EAAO9J,WAAWynB,YAAY3d,IAIlCnS,EAAS2Q,UAAUof,kBAAoB,SAASC,GAkBzChxB,KAAK6D,WAAWotB,eAAeD,IAIpChxB,KAAK6D,WAAWqtB,eAAeF,IAiBjChhB,EAAqB2B,UAAUyL,kBAAoB,SAAS+T,GAC1D,IAAIC,EAAc,QACdC,EAAeF,EAEf7uB,EAAS6uB,EAActc,MAAM,qBAQjC,GAPIvS,IACF8uB,EAAc9uB,EAAO,GACrB+uB,EAAe/uB,EAAO,SAEGuZ,GAAvB7b,KAAKsxB,gBACPtxB,KAAKuxB,yBAEHvxB,KAAKsxB,eAAeF,GACtB,OAAO,IAAIpxB,KAAKsxB,eAAeF,GAAaC,GAE9C,MAAM,IAAIze,OAAc,gCAAkCwe,IAS5DphB,EAAqB2B,UAAU4f,uBAAyB,WACtDvxB,KAAKsxB,kBACL,IAAK,IAAIE,KAAgBxxB,KAAM,CAC7B,IAAIsC,EAAS,4BAA4BgrB,KAAKkE,GAC9C,GAAc,MAAVlvB,EAAgB,CAClB,IAAImvB,EAAcC,eAAepvB,EAAO,IACxCtC,KAAKsxB,eAAeG,GAAezxB,KAAKwxB,MAQ9CxhB,EAAqB2B,UAAUggB,qBAAuB,SAASC,GAC7D5xB,KAAK4xB,MAAQA,EACb5xB,KAAK6xB,aAAe,IAAI5N,OAAejkB,KAAK4xB,OAC5C5xB,KAAKqd,WAAa,SAASzZ,GACzB,IAAK,IAAI9D,EAAI,EAAGA,EAAI8D,EAAQmC,QAAQE,OAAQnG,IAC1C,GAAIE,KAAK6xB,aAAarN,QAAQ5gB,EAAQmC,QAAQjG,GAAGwX,MAC/C,OAAO1T,EAAQmC,QAAQjG,GAG3B,MAAM,IAAI8S,OAAc,sBAAwB5S,KAAK4xB,MAAQ,gBAG/D5xB,KAAK8xB,eAAiB,SAASluB,GAC7B,IAAImS,EAAgBnS,EAAQmC,QAAQnC,EAAQmuB,eAAeza,KAC3D+J,OAAOmD,QAAQxkB,KAAK4xB,MAAO7b,KAO/B/F,EAAqB2B,UAAUqgB,qBAAuB,SAAS5xB,GAC7DJ,KAAKI,MAAQA,EACbJ,KAAKiyB,aAAe,IAAIhO,OAAejkB,KAAKI,OAC5CJ,KAAKqd,WAAa,SAASzZ,GACzB,IAAK,IAAI9D,EAAI,EAAGA,EAAI8D,EAAQmC,QAAQE,OAAQnG,IAC1C,GAAIE,KAAKiyB,aAAazN,QAAQ5gB,EAAQmC,QAAQjG,GAAGM,OAC/C,OAAOwD,EAAQmC,QAAQjG,GAG3B,MAAM,IAAI8S,OAAc,sBAAwB5S,KAAKI,MAAQ,gBAG/DJ,KAAK8xB,eAAiB,SAASluB,GAC7B,IAAIsuB,EAAgBtuB,EAAQmC,QAAQnC,EAAQmuB,eAAe3xB,MAC3DihB,OAAOmD,QAAQxkB,KAAKI,MAAO8xB,KAO/BliB,EAAqB2B,UAAUwgB,qBAAuB,SAASlnB,GAE7D,GADAjL,KAAKiL,MAAQyG,OAAOzG,GAChB+e,MAAMhqB,KAAKiL,QAAUjL,KAAKiL,MAAQ,EACpC,MAAM,IAAI2H,OAAc,kBAAoB3H,GAG9CjL,KAAKqd,WAAa,SAASzZ,GACzB,GAAIA,EAAQmC,QAAQE,QAAUjG,KAAKiL,MACjC,MAAM,IAAI2H,OACR,6BACEhP,EAAQmC,QAAQE,OAChB,sBAGN,OAAOrC,EAAQmC,QAAQ/F,KAAKiL,QAG9BjL,KAAK8xB,eAAiB,SAASluB,GAC7Byd,OAAO+Q,OAAOpyB,KAAKiL,MAAOrH,EAAQmuB,iBAOtC/hB,EAAqB2B,UAAU0gB,kBAAoB,SAAShH,GAC1DrrB,KAAKqrB,GAAKA,EACVrrB,KAAKsyB,UAAY,IAAIrO,OAAejkB,KAAKqrB,IACzCrrB,KAAKqd,WAAa,SAASzZ,GACzB,IAAK,IAAI9D,EAAI,EAAGA,EAAI8D,EAAQmC,QAAQE,OAAQnG,IAC1C,GAAIE,KAAKsyB,UAAU9N,QAAQ5gB,EAAQmC,QAAQjG,GAAGurB,IAC5C,OAAOznB,EAAQmC,QAAQjG,GAG3B,MAAM,IAAI8S,OAAc,mBAAqB5S,KAAKqrB,GAAK,gBAGzDrrB,KAAK8xB,eAAiB,SAASluB,GAC7B,IAAI2uB,EAAa3uB,EAAQmC,QAAQnC,EAAQmuB,eAAe1G,GACxDhK,OAAOmD,QAAQxkB,KAAKqrB,GAAIkH,KAK5BvxB,EAAS2Q,UAAU6gB,cAAgB,SAAS9uB,EAAStD,GAMnD,IAAIwD,EAAU5D,KAAK6D,WAAWC,YAAYJ,GAG1C,GAAgB,QAFDE,EAAQ6uB,gBAKrB,MAAM,IAAI7f,OACR,uEAHFhP,EAAQ2T,UAAYxI,wBAAW3O,IASnCY,EAAS2Q,UAAU+gB,2BAA6B,WAC9C,OAAO1yB,KAAK6D,WAAW8uB,oBAGzB3xB,EAAS2Q,UAAUihB,qBAAuB,SAASC,GACjD,OAAO7yB,KAAK6D,WAAWivB,oBAAoBD,IAG7C7xB,EAAS2Q,UAAUohB,eAAiB,SAASvwB,GAC3C,OAAOxC,KAAK6D,WAAWmvB,mBAAmB9vB,KAAK,SAAS+vB,GACtD,OAAIzwB,GAAWywB,EACNhwB,QAAQ4N,OAAO,+CACZ5N,QAAQ2C,SAAQ,MAKhC5E,EAAS2Q,UAAUuhB,cAAgB,SAAS1wB,GAC1C,OAAOxC,KAAK6D,WAAWsvB,kBAAkBjwB,KAAK,SAAS+vB,GACrD,OAAIzwB,GAAWywB,EACNhwB,QAAQ4N,OAAO,8CACZ5N,QAAQ2C,SAAQ,MAKhC5E,EAAS2Q,UAAUyhB,iCAAmC,WACpD,OAAOpzB,KAAK6D,WAAWwvB,2BAA0B,IAGnDryB,EAAS2Q,UAAU2hB,6BAA+B,WAChD,OAAOtzB,KAAK6D,WAAWwvB,2BAA0B,IAGnDryB,EAAS2Q,UAAU4hB,qBAAuB,SAASnzB,GACjD,OAAOJ,KAAK6D,WAAW2vB,yBAAyBtwB,KAAK,SAAS+vB,GAC5D,OAAI7yB,GAAS6yB,EACJhwB,QAAQ4N,OAAO,qDACZ5N,QAAQ2C,SAAQ,MAIhC5E,EAAS2Q,UAAU8hB,cAAgB,SAAS/vB,GAC1C,MAAMgwB,EAA2B7wB,SAAS6tB,cAAc,QACxDgD,EAAyBC,IAAM,aAC/BD,EAAyB3T,KAAOnb,IAAQC,QAAQ+uB,OAC9C,0BAEA/wB,SAAS4tB,MAAQ5tB,SAASuD,iBAAiBuqB,YAC3C+C,GAEF,MAAMG,EAAmBhxB,SAAS6tB,cAAc,OAGhD,GAFAmD,EAAiBxI,GAAK,qBACtBxoB,SAASC,KAAK6tB,YAAYkD,GACtBnwB,EAAQ4N,EACVuiB,EAAiBhtB,MAAMK,KAAOwE,SAAShI,EAAQ4N,GAAK,KACpDuiB,EAAiBhtB,MAAMI,IAAMyE,SAAShI,EAAQ6N,GAAK,KACnDsiB,EAAiBhtB,MAAM4C,MAAQiC,SAAShI,EAAQ+F,OAAS,KACzDoqB,EAAiBhtB,MAAM+C,OAAS8B,SAAShI,EAAQkG,QAAU,SACtD,CACL,MAAMkqB,EAAYjxB,SAASuD,gBAAgBiE,wBAErC0pB,EADU/zB,KAAK6D,WAAWC,YAAYJ,GACf2G,wBAC7BwpB,EAAiBhtB,MAAMK,KACrBwE,SAASqoB,EAAa7sB,KAAO4sB,EAAU5sB,MAAQ,KACjD2sB,EAAiBhtB,MAAMI,IACrByE,SAASqoB,EAAa9sB,IAAM6sB,EAAU7sB,KAAO,KAC/C4sB,EAAiBhtB,MAAM4C,MAAQiC,SAASqoB,EAAatqB,OAAS,KAC9DoqB,EAAiBhtB,MAAM+C,OAAS8B,SAASqoB,EAAanqB,QAAU,KAYlE,OAVAiqB,EAAiBhtB,MAAM0hB,SAAW,WAClCsL,EAAiBhtB,MAAMmtB,OAAS,MAChCH,EAAiBhtB,MAAMotB,QAAU,QACjCJ,EAAiBhtB,MAAMqtB,cAAgB,OACvCC,eAAuBN,GAAoBO,gBAAgB,IAC3DP,EAAiBQ,UAAY,4BAC7BC,WAAW,KACTzxB,SAASC,KAAKguB,YAAY+C,GAC1BH,EAAyBrqB,WAAWynB,YAAY4C,IAC/C,KACI,mDCrvHTpzB,EAAA,SAAAi0B,EAAAj0B,EAAA,KAAAk0B,EAAAl0B,EAAA,KAAAm0B,EAAAn0B,EAAA,IAAAo0B,EAAAp0B,EAAA,KAAAq0B,EAAAr0B,EAAA,KAiCO,MAAMuf,EAAiB,IAAI1e,OAAOyzB,OAAOC,eAChD1zB,gBAAOyzB,OAAO/U,eAAiBA,QAIV5e,EACnB6O,YAAYglB,GACV90B,KAAK+0B,UAAYD,EACjB90B,KAAKg1B,SAAWh1B,KAAK+0B,UACrB/0B,KAAKi1B,QAAU9zB,OAAO2R,SAASiN,KAC/B3J,OAAI8e,UAAU/zB,QAGdnB,KAAK8Q,MAAQ,EAIb9Q,KAAKigB,aAAe9e,OACpBnB,KAAKm1B,cAAgBn1B,KAAK+0B,UAC1B/0B,KAAKo1B,kBAAoB,KACzBp1B,KAAKq1B,kBAAmB,EACxBr1B,KAAKs1B,eAAiB,IAAIC,eAAe,WAGzCv1B,KAAKw1B,oBAAqB,EAE1Bx1B,KAAK+a,YAAa,EAClB/a,KAAKmb,gBAAiB,EACtBnb,KAAKsa,cAAe,EACpBta,KAAK2a,aAAc,EAEnB3a,KAAKy1B,gBAAkB,KACvBz1B,KAAK01B,eAAiB,IAAI/wB,MAC1B3E,KAAK21B,sBAAwB,IAAIhxB,MACjC3E,KAAK41B,gBAAkB,IAAIjxB,MAC3B3E,KAAK61B,iBAEL71B,KAAK61B,cAAc,iBAAmB71B,KAAK+0B,UAE3C/0B,KAAK81B,mBAAoB,EACzB91B,KAAK+1B,iBAAmB,GACxB/1B,KAAKg2B,eAAgB,EACrBh2B,KAAKi2B,cAAgB,KAErBj2B,KAAKse,oBAAqB,EAC1Bte,KAAKk2B,IAAM,KACXl2B,KAAKm2B,UAAW,EAChBn2B,KAAKo2B,WAAY,EACjBp2B,KAAKq2B,WAAY,EACjBr2B,KAAKs2B,gBAAkB,KACvBt2B,KAAKu2B,gBAAkB,KACvBv2B,KAAKw2B,cAAgB,KAErBx2B,KAAKy2B,+BAAgC,EAErCz2B,KAAK02B,SAAW,kBAAmB,IAAIhkB,MAAOC,UAC9C3S,KAAK22B,eAAiB,IAAI12B,OAC1BD,KAAK42B,gBAAkB,IAAI32B,OAC3BD,KAAK62B,cAAgB,IAAIlyB,MAEzB3E,KAAK6D,WAAa7D,KAElB,IAAID,EAAOC,KAEXC,OAAO62B,OAAO92B,KAAM+2B,EAAQplB,WAC5B3R,KAAKg3B,+BAELh3B,KAAKi3B,eAAiB,WACpBl3B,EAAKi2B,eAAgB,GAGvBh2B,KAAKisB,gBAAkB,WACrB,IAAI1pB,EAEJ,GAAIvC,KAAKi2B,cAGP,MAFA1zB,EAAIvC,KAAKi2B,cACTj2B,KAAKi2B,cAAgB,KACf1zB,EAGR,GAAIxC,EAAKue,mBACP,OAAOve,EAAKi2B,cAEZ,GAAIj2B,EAAKq2B,WAAar2B,EAAKs2B,aAGpBt2B,EAAKw2B,iBAAmB,KAAOx2B,EAAKw2B,iBAAmB,KAChC,GAAxBx2B,EAAKw2B,iBAgBP,MAZAh0B,EACE,oBACAxC,EAAKu2B,gBACL,oBACAv2B,EAAKw2B,gBACL,oBACAx2B,EAAKy2B,cACPz2B,EAAKo2B,UAAW,EAChBp2B,EAAKq2B,WAAY,EACjBr2B,EAAKs2B,WAAY,EACjBt2B,EAAKw2B,gBAAkB,KACvBx2B,EAAKy2B,cAAgB,KACf,IAAI5jB,OAAcrQ,GAG5B,OACExC,EAAKi2B,iBACJj2B,EAAKq2B,YAAYr2B,EAAKo2B,UAAYp2B,EAAKs2B,aAK9Cr2B,KAAKwrB,oBAAsB,SAASD,GAClCvrB,KAAKs1B,eAAe9J,oBAAoBD,IAG1CvrB,KAAK2rB,gCAAkC,SAASD,GAC9C1rB,KAAKs1B,eAAe3J,gCAAgCD,IAGtD1rB,KAAKkxB,eAAiB,SAASgG,GAC7Bl3B,KAAKs1B,eAAe6B,iBAAiBD,IAGvCl3B,KAAKixB,eAAiB,WACpB,OAAOjxB,KAAKs1B,eAAe8B,qBAKjCj3B,EAAA,KAAAc,EACA,MAAM81B,EAAU,aA62ChB,SAASM,EAA8BC,GACrC,IACIC,EADkBC,mBAAmBF,GACAzqB,QAAQ,IAAK,OAEtD,OADA0qB,EAAqBA,EAAmB1qB,QAAQ,IAAK,OA92CvD5L,EAAWC,gBAAkB,SAASC,EAAQ0R,GAC5C,IAAIhP,EAgBJ,OAdEA,EADEgc,EAAe4X,KACJ,IAAIC,EAAav2B,GACrB0e,EAAeC,YACX,IAAI6X,EAAoBx2B,GAC5B0e,EAAe4I,QACX,IAAImP,EAAgBz2B,GACxB0e,EAAeG,SACX,IAAI6X,EAAiB12B,GAGrB,IAAI22B,EAAkB32B,IAG1B0R,mBAAqBA,EAChChP,EAAWqc,mBACJrc,GAIT5C,EAAW0Q,UAAUomB,kBAAoB,SAAS1zB,GAChDrE,KAAKy1B,gBAAkBpxB,GAGzBpD,EAAW0Q,UAAUqmB,uBAAyB,SAAS11B,GACrDtC,KAAK81B,kBAAoBxzB,GAO3BrB,EAAW0Q,UAAUiP,UAAY,WAC/B,OAAO5gB,KAAK01B,eAAezvB,OAAS,GAGtChF,EAAW0Q,UAAUsmB,aAAe,SAASC,GAG3C,IAAIC,EAASn4B,KAAK6S,mBACbslB,QACoB,IAAZp3B,gBACTo3B,EAASp3B,cAAS8C,YAAc9C,cAAS8C,WAAWgP,oBAGpDslB,GACFn4B,KAAKo4B,UAAU,YAAcF,IAIjCj3B,EAAW0Q,UAAUymB,UAAY,WAC/B,OAAO,MAGTn3B,EAAW0Q,UAAUsB,YAAc,WACjCjT,KAAK01B,kBACL11B,KAAK21B,yBACL31B,KAAK41B,oBAGP30B,EAAW0Q,UAAUkP,aAAe,WAClC,IAAIwX,EAAIr4B,KAAK01B,eAAerJ,QAK5B,OAJIgM,IACFA,EAAIA,EAAExrB,QAAQ,MAAO,MAEvB7M,KAAKi4B,aAAa,6BACXI,GAGTp3B,EAAW0Q,UAAUmP,iBAAmB,WACtC,OAAO9gB,KAAK21B,sBAAsB1vB,OAAS,GAG7ChF,EAAW0Q,UAAUoP,oBAAsB,WACzC,IAAIsX,EAAIr4B,KAAK21B,sBAAsBtJ,QAEnC,OADArsB,KAAKi4B,aAAa,oCACXI,GAGTp3B,EAAW0Q,UAAUuP,WAAa,WAChC,OAAOlhB,KAAK41B,gBAAgB3vB,OAAS,GAGvChF,EAAW0Q,UAAU8P,cAAgB,WACnC,IAAI4W,EAAIr4B,KAAK41B,gBAAgBvJ,QAE7B,OADArsB,KAAKi4B,aAAa,8BACXI,GAKTp3B,EAAW0Q,UAAU+J,kBAAoB,SACvC9X,EACA00B,EACAC,EACA3R,EACAC,EACA2R,GAEA5R,EAAUA,GAAoB,EAC9BC,EAAUA,GAAoB,EAG9B,IAAImB,EAAU,EACVyQ,EAAU,EAEdF,OAAgC1c,UAAb0c,GAAgCA,EACnD,IAAI7gB,EAAM1F,OAAKqE,IAAIqiB,iBAAiB90B,GAChC+0B,EAAO3mB,OAAKqE,IAAIuiB,UAAUlhB,GAE1BmhB,EAAMnhB,EAAIohB,YAAY,eACtBD,EAAIE,eAINF,EAAIE,eACFT,EACAC,GACA,EACAI,EACA,EACA3Q,EACAyQ,EACA7R,EACAC,EACA7mB,KAAKmb,eACLnb,KAAK+a,WACL/a,KAAKsa,aACLta,KAAK2a,YACL6d,GAAkB,EAClB,OAIFK,EAAIG,UAAUV,EAAWC,GAAW,GAEpCM,EAAII,SAAWj5B,KAAKsa,aACpBue,EAAIK,QAAUl5B,KAAK2a,YACnBke,EAAIM,OAASn5B,KAAK+a,WAClB8d,EAAIO,QAAUp5B,KAAKmb,eACfqd,IACFK,EAAIL,OAASA,IAGjB50B,EAAQy1B,cAAcR,IAIxB53B,EAAW0Q,UAAUuV,iBAAmB,SAAStjB,EAASvB,GACxD,MAAMi3B,EAAoB,SAAS11B,GACjC,GAAe,MAAXA,EACF,MAAO,OAET,GAA6B,MAAzBA,EAAQ21B,cACV,MAAO,IAAM31B,EAAQ8gB,QAGvB,IAAI8U,EAAiB51B,EAAQ21B,cAAcE,SACvCC,EAAW,EACXC,EAAgB,EAChBC,GAAU,EAEd,IAAK,IAAI95B,EAAI,EAAGA,EAAI05B,EAAevzB,OAAQnG,IACrC05B,EAAe15B,GAAG4kB,SAAW9gB,EAAQ8gB,SAAYkV,EAG1CJ,EAAe15B,GAAG4kB,SAAW9gB,EAAQ8gB,SAC9CiV,KAHAD,IACAC,KAIEH,EAAe15B,IAAM8D,IACvBg2B,GAAU,GAId,OAAID,EAAgB,EAEhBL,EAAkB11B,EAAQ21B,eAC1B,IACA31B,EAAQ8gB,QACR,IACAgV,EACA,IAIGJ,EAAkB11B,EAAQ21B,eAAiB,IAAM31B,EAAQ8gB,SAElE,IAAIvR,EACF,svEAqCAmmB,EAAkB11B,GAClB,qGACA01B,EAAkBj3B,GAClB,sFAGEqV,EADM1X,KAAK6D,WAAWqc,mBACZrd,SACVg3B,EAAYniB,EAAIgZ,cAAc,UAClCmJ,EAAUlmB,KAAO,kBACjBkmB,EAAUviB,KAAOnE,EACjBuE,EAAI5U,KAAK6tB,YAAYkJ,IAGvB54B,EAAW0Q,UAAUmoB,cAAgB,SAASr1B,GAC5C,IACE,IAAIs1B,EAAIt1B,EAAIu1B,OACZ,OAAS,MAALD,GACGA,EACP,MAAOE,GAIP,OAAO,IAIXh5B,EAAWi5B,UAAY,EAEvBj5B,EAAW0Q,UAAUwoB,cAAgB,SAAS11B,GAE5C,GAAIzE,KAAK85B,cAAcr1B,GAIrB,OAHKzE,KAAK6S,mBAGH,KAEJ7S,KAAK6S,mBAMVpO,EAAI21B,YAAcn5B,EAAWi5B,YAE7B,IACEl6B,KAAKq6B,iCAAiC51B,EAAKzE,MAC3C,MAAOs6B,GACPC,QAAQppB,MAAMmpB,GAUhB,GAHKt6B,KAAK6S,oBACR7S,KAAKw6B,0CAA0C/1B,GAE7CA,EAAI0E,QAAU1E,EAAI0E,OAAOlD,QAAUxB,EAAI0E,OAAOlD,OAAS,EACzD,IAAK,IAAInG,EAAI,EAAGA,EAAI2E,EAAI0E,OAAOlD,OAAQnG,IACrC,IACEE,KAAKm6B,cAAc11B,EAAI0E,OAAOrJ,IAC9B,MAAOyC,IAIb,OAAOkC,GAGTxD,EAAW0Q,UAAUqB,aAAe,SAAS3Q,GAC3C,IAAKA,GAAoB,QAAVA,EAEb,YADArC,KAAKy6B,mBAGP,IAAIn4B,EAASD,EAAOwS,MAAM,qBAC1B,IAAKvS,EAEH,YADAtC,KAAK06B,wBAAwBr4B,GAG/B,IAAI+uB,EAAc9uB,EAAO,GACrB+uB,EAAe/uB,EAAO,GAC1B,GAAmB,SAAf8uB,EACFpxB,KAAK26B,qBAAqBtJ,QAGvB,GAAmB,QAAfD,EACPpxB,KAAK46B,oBAAoBvJ,OACpB,IAAmB,OAAfD,EAQT,MAAM,IAAIxe,OAAc,kCAAoCwe,GAR7B,CAC/B,IAAI3sB,EAAMzE,KAAKkgB,mBAAmBhN,KAAKme,GACvC,IAAI5sB,EAGF,MAAM,IAAImO,OAAc,4BAA8Bye,GAFtDrxB,KAAK46B,oBAAoBn2B,EAAIsoB,SASnC9rB,EAAW0Q,UAAUmN,YAAc,SAAS+b,GACrCA,GAAwB,QAAZA,EAGf76B,KAAK06B,wBAAwBG,GAF7B76B,KAAK86B,4BAMT75B,EAAW0Q,UAAU8oB,iBAAmB,WACtCz6B,KAAKo1B,kBAAoB,KACzBp1B,KAAKm1B,cAAgBn1B,KAAK+0B,UAC1B/0B,KAAKg1B,SAAWh1B,KAAK+0B,UACrB/0B,KAAKw1B,oBAAqB,GAG5Bv0B,EAAW0Q,UAAU+oB,wBAA0B,SAASG,GACtD,IACE76B,KAAK46B,oBAAoBC,GACzB,MAAOt4B,GACPvC,KAAK26B,qBAAqBE,KAI9B55B,EAAW0Q,UAAUipB,oBAAsB,SAASv4B,GAClDrC,KAAKm1B,cAAgBn1B,KAAK0f,gBAAgBrd,GAAQ,GAClDrC,KAAKg1B,SAAWh1B,KAAKm1B,cACrBn1B,KAAKo1B,kBAAoB/yB,EACzBrC,KAAKw1B,oBAAqB,GAG5Bv0B,EAAW0Q,UAAUgpB,qBAAuB,SAASt4B,GACnD,IAAI04B,EAAa/6B,KAAKg7B,qBAAqB34B,GACtC04B,EAGH/6B,KAAK46B,oBAAoBG,GAFzB/6B,KAAKy6B,oBAMTx5B,EAAW0Q,UAAUmpB,yBAA2B,WAC9C,IAAInb,EAAQ3f,KAAK4f,uBACbD,EAAM1Z,QACRjG,KAAK46B,oBAAoBjb,EAAM,KAInC1e,EAAW0Q,UAAUsN,YAAc,SAAS5c,GAC1C,IAAI6I,EAEJ,GAAgC,GAA5B7I,EAAOkL,QAAQ,UAAgB,CAGjC,GAFAlL,EAASA,EAAOkqB,OAAO,GAEV,OADbrhB,EAAQlL,KAAKkgB,mBAAmB/W,OAAO9G,IAErC,MAAM,IAAIuQ,OAAc,qBAAuBvQ,EAAS,KAE1D,IAAK6I,EAAMrI,SACT,MAAM,IAAI+P,OAAc,UAAYvQ,EAAS,oBAE/CrC,KAAKm1B,cAAgBjqB,EACrBlL,KAAKw1B,oBAAqB,OACrB,GAAc,eAAVnzB,GAAqC,mBAAVA,EACpCrC,KAAKm1B,cAAgBn1B,KAAKkgB,mBAAmB+a,OAC7Cj7B,KAAKw1B,mBAAkE,MAA7Cx1B,KAAKk7B,iBAAiBl7B,KAAKm1B,oBAChD,GAAc,gBAAV9yB,EACTrC,KAAKm1B,cAAgBn1B,KAAKg1B,SAC1Bh1B,KAAKw1B,oBAAqB,MACrB,CAEL,GAAa,OADbtqB,EAAQlL,KAAK8D,YAAYzB,IAEvB,MAAM,IAAIuQ,OAAc,cAAgBvQ,GAG1C,IAAIwS,GAAQ,EAkBZ,GAjBI3J,EAAMiwB,cAEJtb,EAAeub,MAEjB/4B,EAAS6I,EAAMiwB,cAAcpO,MAE7B/sB,KAAKm1B,cAAgBjqB,EAAMiwB,cAC3Bn7B,KAAKw1B,oBAAqB,EAC1B3gB,GAAQ,GAED3J,EAAMrI,UAAYqI,EAAM4H,WAEjC9S,KAAKm1B,cAAgBjqB,EACrBlL,KAAKw1B,oBAAqB,EAC1B3gB,GAAQ,IAGLA,EAAO,CAEV,IAAIpQ,EAAMzE,KAAKkgB,mBAEf,GAAIzb,GAAOA,EAAI0E,QAAU1E,EAAI0E,OAAOlD,OAClC,IAAK,IAAInG,EAAI,EAAGA,EAAI2E,EAAI0E,OAAOlD,OAAQnG,IACrC,GAAI2E,EAAI0E,OAAOrJ,GAAGitB,MAAQ1qB,EAAQ,CAChCrC,KAAKm1B,cAAgB1wB,EAAI0E,OAAOrJ,GAChCE,KAAKw1B,oBAAqB,EAC1B3gB,GAAQ,EACR,MAIN,IAAKA,EACH,MAAM,IAAIjC,OAAc,gBAAkBvQ,IAKhDrC,KAAKkgB,oBAGPjf,EAAW0Q,UAAUyN,kCAAoC,SACvDD,EACA9c,GAEA,IAQIg2B,EARAgD,GAAQ,EACkB,GAA1Bh5B,EAAOkL,QAAQ,SACjBlL,EAASA,EAAOkqB,OAAO,GACvB8O,GAAQ,GAC6B,GAA5Bh5B,EAAOkL,QAAQ,YACxBlL,EAAS,UAAYA,EAAOkqB,OAAO,GAAK,IACxC8O,GAAQ,GAKV,IAAIC,EAAY,IAAIC,WAAWC,MAAMC,QAAQz7B,KAAKm1B,cAAcriB,SAASiN,MACzEub,EAAUnc,mBAAqBA,EAC/Bmc,EAAUj5B,OAASA,EACnB,IAEEg2B,EAAIkD,WAAWC,MAAME,cACnBvc,EAAqB,IAAM9c,EAC3Bi5B,GAGF,MAAO/4B,IACT,IAAIo5B,EAAY37B,KAAK6D,WAAWqc,mBAChC,GAAS,MAALmY,EACF,IACE,OAAIA,EAAEl3B,QAAUw6B,GAGZtD,EAAEl3B,OAAOu1B,UAAYiF,EAAUjF,SAInC,MAAOkF,IAIX,GAAIP,EACF,OAAO,EAGT,IAAIQ,EAAeN,WAAWC,MAAME,cAClCvc,EACAmc,GAIF,GAAc,eAAVj5B,EACF,OAAIw5B,EAAa16B,OAAO85B,QAAUU,EAKpC,GAAc,gBAAVt5B,EACF,OAAIw5B,EAAa16B,OAAO8F,KAAO00B,EAKjC,GAAIE,EAAa16B,QAAUw6B,EAAUV,OAAQ,CAC3C,GAAIU,EAAU5O,MAAQ1qB,EACpB,OAAO,EAET,IAEE,GADcrC,KAAK8D,YAAYzB,EAAQw5B,EAAa16B,QACxCg6B,eAAiBQ,EAC3B,OAAO,EAET,MAAOp5B,KAEX,OAAO,GAGTtB,EAAW0Q,UAAUua,gBAAkB,WACjClsB,KAAKse,oBAGc,GAAjBte,KAAKm2B,UAAqBn2B,KAAKo2B,YAAcp2B,KAAKq2B,YAEpDr2B,KAAKm2B,UAAW,EAChBn2B,KAAKk2B,IAAI4F,UAKf76B,EAAW0Q,UAAUoqB,iBAAmB,SAASC,GAE/C,GAA2B,GAAvBh8B,KAAKk2B,IAAI/V,WAAiB,CAE5B,GAAqB,GAAjBngB,KAAKm2B,SAIP,OAHAn2B,KAAKu2B,gBAAkB,EACvBv2B,KAAKw2B,cAAgB,uBACrBx2B,KAAKq2B,WAAY,GAInB,IACE,GACY,QAAV2F,IACoB,KAAnBh8B,KAAKk2B,IAAI+F,QAAoC,KAAnBj8B,KAAKk2B,IAAI+F,QAWpC,OANAj8B,KAAKk2B,IAAM,IAAIgG,eACfl8B,KAAKk2B,IAAIiG,mBAAqBn8B,KAAK+7B,iBAAiB1jB,KAAKrY,KAAM,OAC/DA,KAAKk2B,IAAIkG,KAAK,MAAOp8B,KAAKs2B,iBAAiB,GAC3Ct2B,KAAKk2B,IAAImG,iBAAiB,QAAS,aACnCr8B,KAAKk2B,IAAIoG,KAAK,SACdt8B,KAAKo2B,WAAY,GAGnBp2B,KAAKu2B,gBAAkBv2B,KAAKk2B,IAAI+F,OAChCj8B,KAAKw2B,cAAgBx2B,KAAKk2B,IAAIqG,WAC9B,MAAOjC,GAEPt6B,KAAKu2B,iBAAmB,EACxBv2B,KAAKw2B,cAAgB,gBAGvBx2B,KAAKq2B,WAAY,IAIrBp1B,EAAW0Q,UAAUgN,WAAa,SAASN,EAAKK,GAI9C,GAHW,IAAPL,IACFA,EAAM,0BAEJwB,EAAeub,MAAO,CAGxB,IAAIoB,EAAQx8B,KAAKkgB,mBAAmBkc,KAAK/d,EAAKK,EAAU,iBACxD3d,cAAS8C,WAAWgyB,cAAcnX,GAAY8d,OAE9Cx8B,KAAKkgB,mBAAmBkc,KAAK/d,EAAKK,EAAU,kBAIhDzd,EAAW0Q,UAAU8qB,kBAAoB,SAASC,EAAQ5pB,GACxD4pB,EAAOC,IAAM7pB,GAGf7R,EAAW0Q,UAAUirB,eAAiB,WACpC,OAAO58B,MAGTiB,EAAW0Q,UAAUkrB,qBAAuB,SAASp4B,EAAKiyB,GAIxD,IAEE,IAAIoG,EAAUvB,WAAWwB,QAAQ,+BAA+BC,WAE9DzB,WAAW0B,WAAWC,eAQxB,GALqB3B,WAAWwB,QAC9B,2CAEAC,WAAWzB,WAAW0B,WAAWE,sBAEhBC,QAAQN,EAAQO,QAAS,UAAY,EACtD,OAAuD,GAAhD54B,EAAI64B,MAAMnR,WAAW5e,QAAQ,eAEtC,MAAO0sB,IACT,OAAQx1B,EAAIiyB,IAGdz1B,EAAW0Q,UAAU0oB,iCAAmC,SACtDkD,EACAC,GAEA,IAAIz9B,EAAOC,KAIPy9B,EAAiBljB,OAAKmjB,QAAQC,OAAOJ,GAOzC,GANKE,IACHA,EAAiBF,GAGnBE,EAAeG,cAAgBH,EAAeH,OAEzCv9B,EAAK88B,qBAAqBY,EAAgBD,EAAW9G,UACxD,OAGF+G,EAAeH,MAAQ,SAASA,GAC9BE,EAAW9H,eAAepsB,KAAKg0B,GAC/Bv9B,EAAKk4B,aAAa4F,KAAK99B,EAAM,8BAG/B09B,EAAeK,QAAU,SAASt7B,GAChCg7B,EAAW7H,sBAAsBrsB,KAAK9G,GACtC,IAAIF,EAASk7B,EAAW1H,kBAGxB,OAFA0H,EAAW1H,mBAAoB,EAC/B/1B,EAAKk4B,aAAa4F,KAAK99B,EAAM,oCACtBuC,GAGTm7B,EAAeM,OAAS,SAASv7B,GAC/Bg7B,EAAW5H,gBAAgBtsB,KAAK9G,GAChC,IAAIF,EAAUk7B,EAAW1H,kBAErB0H,EAAWzH,iBADX,KAKJ,OAHAyH,EAAW1H,mBAAoB,EAC/B0H,EAAWzH,iBAAmB,GAC9Bh2B,EAAKk4B,aAAa4F,KAAK99B,EAAM,8BACtBuC,GAKT,IACI07B,EADAC,EAAeR,EAAerB,KAE9Bvc,EAAeub,QAEjBqC,EADAO,EAAwB,yBAA0B,IAAItrB,MAAOC,WACrB8qB,EAAerB,MAGzD,IAAIhB,EAAQvb,EAAeub,MAEvB8C,EAAU,SAAS7f,EAAK0c,EAAYoD,EAAgBC,GACtD,IAAIC,EAAiBJ,EACjB7C,IACFiD,EAAiBr+B,KAAKg+B,IAKR,IAAdjD,GACc,UAAdA,QACsB,IAAfA,IAEPA,EAAa,WAAah7B,EAAK+Q,MAC/B/Q,EAAK+Q,OAAS,GAGhB,IAAIwtB,EAAeD,EACjBhgB,EACA0c,EACAoD,EACAC,GAOF,OAJkB,MAAdrD,IACFuD,EAAa,sBAAwBvD,GAEvCh6B,cAAS8C,WAAWgyB,cAAckF,GAAcuD,EACzCA,GAGT,GAAIze,EAAeub,MAAO,CACxB4C,EAAwB,yBAA0B,IAAItrB,MAAOC,UAC7D,MAAM4rB,EAAmB,oBAAqB,IAAI7rB,MAAOC,UACzD,IAAI6rB,EAAiB,SAAWR,EAAwB,kBAEpDP,EAAevqB,MACjBuqB,EAAevqB,KAAKsrB,GACpBf,EAAerB,KAAO8B,IAGtBM,GAAkB,qBAAuBD,EAAmB,MAC5Dd,EAAec,GAAoBL,EACnCT,EAAenJ,WAAWkK,EAAgB,SAG5Cf,EAAerB,KAAO8B,GAQ1Bj9B,EAAW0Q,UAAU6oB,0CAA4C,SAC/DiE,GAGA,IAAKA,EAEH,OAEF,GAAIz+B,KAAK85B,cAAc2E,GAErB,OAGF,GADgBz+B,KAAK0+B,iBAAiBD,GAGpC,OAGF,IAAIE,EAAS,YAAa,IAAIjsB,MAAOC,UAErC3S,KAAK22B,eAAegI,IAAU,EAE9B,IAAIC,EAAe5+B,KAAKk7B,iBAAiBuD,GAErCI,EAAc7+B,KAAK8+B,eAAeL,GAClCG,IAAiBC,GAGnBD,EAAaD,IAAU,EACvBC,EAAa,QAAU5+B,KAAK02B,UAAYiI,EAIxCC,EAAa5+B,KAAK02B,UAAYiI,IAG9BF,EAAa3rB,SAAS6rB,IAAU,EAChCF,EAAaz+B,KAAK02B,UAAYiI,EAC9B3+B,KAAK++B,YACH/+B,KAAKi3B,eACLwH,EACAA,EAAa57B,SACb47B,EAAa3rB,SACb2rB,EAAa3rB,SAASiN,KACtB4e,KAKN19B,EAAW0Q,UAAUmtB,eAAiB,WACpC,QAAKjf,EAAeub,OAEbp7B,KAAKw1B,oBAGdv0B,EAAW0Q,UAAUupB,iBAAmB,SAASz2B,GAC/C,IACIu6B,EADAJ,EAAe,KAEnB,IACEA,EAAen6B,EAAIm6B,aACnB,MAAOr8B,GACPy8B,GAAS,EAEX,GAAIA,EAAQ,CAGV,IAAIC,GAAsC,EAC1C,IACEA,EAAsCx6B,EAAIw2B,OAAO9xB,OAAO1E,EAAIsoB,MAC5D,MAAOxqB,IAGT,GAAI08B,EAAqC,CAEvC,IAAI38B,EACJ,IAEE,GADAA,EAAS28B,EAAoCL,aAE3C,OAAOt8B,EAET,MAAOC,IAGT,OADAD,EAAStC,KAAKk/B,uBAAuBz6B,EAAIsoB,KAAMtoB,EAAIw2B,OAAOp4B,SAAU4B,IAQxE,OAAOm6B,GAGT39B,EAAW0Q,UAAUutB,uBAAyB,SAASnS,EAAMrV,EAAKjT,GAChE,IAAI0E,EACA+B,EACApL,EAEJ,IADAqJ,EAASuO,EAAI2Q,qBAAqB,UAC7BvoB,EAAI,EAAGA,EAAIqJ,EAAOlD,OAAQnG,IAE7B,IADAoL,EAAQ/B,EAAOrJ,IACLitB,OAASA,EACjB,OAAO7hB,EAIX,IADA/B,EAASuO,EAAI2Q,qBAAqB,SAC7BvoB,EAAI,EAAGA,EAAIqJ,EAAOlD,OAAQnG,IAE7B,IADAoL,EAAQ/B,EAAOrJ,IACLitB,OAASA,EACjB,OAAO7hB,EAKX,OAAOjK,EAAW0Q,UAAUwtB,oBAAoB16B,EAAIsoB,KAAMtoB,EAAIw2B,OAAOp4B,WAQvE5B,EAAW0Q,UAAUotB,YAAc,SACjCK,EACAX,EACAY,EACAC,EACAC,EACAZ,GAGA,IAGE,GADAF,EAAelkB,OAAKmjB,QAAQC,OAAOc,GAC/Bz+B,KAAK85B,cAAc2E,GAGrB,mBADOz+B,KAAK22B,eAAegI,GAI7B,IAAIa,EAAax/B,KAAKy/B,YACpBhB,EACAY,EACAC,EACAC,EACAZ,GAEEe,EAAK1/B,KAAK2/B,cAAclB,EAAcA,EAAa57B,UAEvD,IAAK28B,GAAoB,YAANE,EAAkB,CACnC,IAAIE,EAAcnB,EAAa3rB,SAASiN,YAEjC/f,KAAK22B,eAAegI,GAC3B3+B,KAAKm6B,cAAcsE,GACnB,IAMIoB,EACAC,EAPAC,EAAY//B,KAAK0+B,iBAAiBD,GAmBtC,OAlBKsB,GAEH//B,KAAKw6B,0CAA0CiE,GAEjDsB,EAAY//B,KAAK0+B,iBAAiBD,GAIlCqB,GADAD,EAA0B7/B,KAAKkgB,kBAAiB,IACQlgB,KAAK02B,eAGzD,+CAA+CryB,KAAKu7B,IAE7CE,GAAiCC,GAC1CX,EAAaS,IAOjB7/B,KAAKggC,iBACHZ,EACAX,EACAY,EACAC,EACAC,EACAZ,GAEF,MAAOp8B,GAIPvC,KAAKi2B,cAAgB1zB,IAIzBtB,EAAW0Q,UAAU8tB,YAAc,SACjChB,EACAY,EACAC,EACAC,EACAZ,GAEA,IAAIsB,EAAkBxB,EAAa57B,SAC/Bq9B,EAAkBzB,EAAa3rB,SAC/B8sB,EAAcM,EAAgBngB,KAE9BogB,EAAUngC,KAAKogC,gBAAgBf,EAAkBY,GAEjDI,EAAUf,IAAqBY,EAG/BI,EAAcV,EAAYryB,QAAQ,KAClC+yB,EAAc,IAChBV,EAAcA,EAAYpyB,UAAU,EAAG8yB,IAEzC,IAAIC,EAAehB,EAAahyB,QAAQ,KACpCgzB,EAAe,IACjBhB,EAAeA,EAAa/xB,UAAU,EAAG+yB,IAK3C,IAAIC,EAAWjB,IAAiBK,EAC5Ba,EAAYP,EAAgBvB,GAahC,OAXI9e,EAAeC,aAAeD,EAAeG,YAE/CygB,GAAY,GASPN,GAAWE,GAAWG,GAAYC,GAG3Cx/B,EAAW0Q,UAAUyuB,gBAAkB,SACrCf,EACAY,GAEA,OAAOZ,IAAqBY,GAG9Bh/B,EAAW0Q,UAAUguB,cAAgB,SAASlB,EAAcwB,GAC1D,IAAIP,EAAKO,EAAgB9f,WACzB,GAAU,MAANuf,GACF,IACwB,MAArB1/B,KAAKigB,cACqC,MAAzCjgB,KAAKigB,aAAapd,SAASsd,YACF,MAA3BlZ,IAAIpE,SAASsd,kBAOoC,IAAxC8f,EAAgB5X,2BACkB,IAAlC4X,EAAgB1P,iBAC6B,MAAnD0P,EAAgB5X,qBAAqB,QAAQ,IACpB,MAAxB4X,EAAgBn9B,MAClB,CACA,GACE27B,EAAaG,cACiB,eAA9BH,EAAa3rB,SAASiN,MACW,eAAjC0e,EAAaG,aAAajC,IAG1B,OAAO,KAGT,IAAK,IAAI78B,EAAI,EAAGA,EAAI2+B,EAAat1B,OAAOlD,OAAQnG,IAE9C,GAIO,YAHLE,KAAK2/B,cACHlB,EAAat1B,OAAOrJ,GACpB2+B,EAAat1B,OAAOrJ,GAAG+C,UAIzB,OAAO,KAIX68B,EAAK,gBAKM,WAANA,GAAmB7f,EAAe4X,OAE3Cz3B,KAAK0gC,eAAgB,GAGvB,OAAOhB,GAOTz+B,EAAW0Q,UAAUgvB,oBAAsB,SACzCvB,EACAX,EACAY,EACAC,EACAC,EACAZ,GAEA,IAAI5+B,EAAOC,KACXmB,OAAOmzB,WAAW,WAChBv0B,EAAKg/B,YACHK,EACAX,EACAY,EACAC,EACAC,EACAZ,IAED,MAOL19B,EAAW0Q,UAAUgvB,oBAAsB,SACzCvB,EACAX,EACAY,EACAC,EACAC,EACAZ,GAEA,IAAIjnB,EAAM1X,KAAKigB,aAAapd,SACxB21B,EAAS9gB,EAAIgZ,cAAc,UAC3BkQ,EAAalpB,EAAImpB,eAAelC,EAAS,MAAQF,EAAa1R,MAClEyL,EAAO7H,YAAYiQ,GACnB,IAAIE,EAAQppB,EAAI6Y,eAAe,SAC3BxwB,EAAOC,KACXw4B,EAAOuI,QAAU,WACfD,EAAMhQ,YAAY0H,GAClBz4B,EAAKg/B,YACHK,EACAX,EACAY,EACAC,EACAC,EACAZ,IAGJmC,EAAMnQ,YAAY6H,GAClBr3B,OAAOmzB,WAAWkE,EAAOuI,QAAS,MAGpC9/B,EAAW0Q,UAAUquB,iBAAmB,SACtCZ,EACAX,EACAY,EACAC,EACAC,EACAZ,GAEA,IAAI5+B,EAAOC,KAWXA,KAAK62B,cAAcvtB,KAVE,WACnBvJ,EAAKg/B,YACHK,EACAX,EACAY,EACAC,EACAC,EACAZ,MAMN19B,EAAW0Q,UAAUqvB,oBAAsB,WAEzC,IAAIC,EAAajhC,KAAK62B,cACtB72B,KAAK62B,cAAgB,IAAIlyB,MACzB,IAAK,IAAI7E,EAAI,EAAGA,EAAImhC,EAAWh7B,OAAQnG,IACrCmhC,EAAWnhC,GAAG+9B,QAKlB58B,EAAW0Q,UAAU+sB,iBAAmB,SAASj6B,GAC/C,IAAIk6B,EACAC,EAAe5+B,KAAKk7B,iBAAiBz2B,GACrCo6B,EAAc7+B,KAAK8+B,eAAer6B,GAMtC,SAJEk6B,EADEC,IAAiBC,EACVD,EAAa,QAAU5+B,KAAK02B,UAE5BjyB,EAAIzE,KAAK02B,eAMf12B,KAAK22B,eAAegI,IAIlBA,IAGT19B,EAAW0Q,UAAU+N,gBAAkB,SAASqb,EAAYmG,GAG1D,IAAIzhB,EAAezf,KAAK61B,cAAckF,GAItC,GAHKtb,IACHA,EAAezf,KAAK+0B,UAAUgG,KAE3Btb,GAA8B,UAAdsb,EACnB,IAAK,IAAIoG,KAAWnhC,KAAK61B,cAEvB,GAAI,kBAAkBxxB,KAAK88B,GAAU,CAEnC,IAAIC,EADJ3hB,EAAezf,KAAK61B,cAAcsL,GAElC,IACOnhC,KAAK85B,cAAcra,KACtB2hB,EAAK3hB,EAAa3M,SAASiN,MAE7B,MAAOxd,IACT,GAAI6+B,EAAI,MAId,IAAK3hB,EACH,MAAM,IAAI7M,OACR,6LAGJ,GAAIiN,EAAeub,MACjB,IACE3b,EAAa3M,SAASiN,KACtB,MAAOxd,GACPkd,EAAete,OAAOi7B,KAAK,GAAI3c,EAAasN,MAC5C/sB,KAAK61B,cAAcpW,EAAasN,MAAQtN,EAM5C,OAHKyhB,GACHlhC,KAAKm6B,cAAc1a,GAEdA,GAMTxe,EAAW0Q,UAAUqpB,qBAAuB,SAASqG,GAInD,IAAK,IAAItG,KAAc/6B,KAAK61B,cAAe,CACzC,IAAIpW,EAAezf,KAAK61B,cAAckF,GAGtC,IAEE,IACG/6B,KAAK85B,cAAcra,IACpBA,EAAa5c,SAAS+U,OAASypB,EAE/B,OAAOtG,EAET,MAAOx4B,KAOX,IACE,GAAIvC,KAAK+0B,UAAUlyB,SAAS+U,OAASypB,EACnC,MAAO,GAET,MAAO9+B,IAGT,MAAM,IAAIqQ,OAAc,oCAAsCyuB,IAGhEpgC,EAAW0Q,UAAUiO,qBAAuB,WAC1C,IAAI0hB,KAEJ,IAAK,IAAIvG,KAAc/6B,KAAK61B,cAAe,CACzC,IAAIpxB,EAAMzE,KAAK61B,cAAckF,GACxB/6B,KAAK85B,cAAcr1B,IAAQA,GAAOzE,KAAK+0B,WAC1CuM,EAAkBh4B,KAAKyxB,GAI3B,OAAOuG,GAGTrgC,EAAW0Q,UAAUuO,iBAAmB,SAASghB,GAC/C,GAAIlhC,KAAK6S,mBACP,OAAO1R,OAET,IAAIogC,EAAahnB,OAAKmjB,QAAQC,OAAO39B,KAAKm1B,eAQ1C,OAPK+L,IACHlhC,KAAKm6B,cAAcoH,GAEnBvhC,KAAKg2B,eAAgB,GAEvBuL,EAAavhC,KAAKwhC,sBAAsBD,EAAYL,GACpD9qB,OAAIqrB,QAAUF,EACPhnB,OAAKmjB,QAAQC,OAAO4D,IAQ7BtgC,EAAW0Q,UAAU+vB,cAAgB,WAEnC,OADiB1hC,KAAKkgB,kBAAiB,IAIzCjf,EAAW0Q,UAAU6vB,sBAAwB,SAASD,EAAYL,GAChE,GAAIlhC,KAAK6S,mBACP,OAAO0uB,EAGT,GAAIvhC,KAAKw1B,mBAAoB,CAC3B,IAAImM,GAAU,EACd,GACEJ,EAAWtG,QACXsG,EAAWtG,OAAO9xB,QAClBo4B,EAAWtG,OAAO9xB,OAAOlD,OAEzB,IAAK,IAAInG,EAAI,EAAGA,EAAIyhC,EAAWtG,OAAO9xB,OAAOlD,OAAQnG,IAAK,CACxD,IAAIoL,EAAQq2B,EAAWtG,OAAO9xB,OAAOrJ,GACrC,GACEoL,GAASq2B,GACTr2B,EAAMkvB,aAAemH,EAAWnH,YAChC,CACAuH,GAAU,EACV,OAIN,GAAIA,EAGF,OADA3hC,KAAKif,YAAY,gBACVjf,KAAKkgB,iBAAiBghB,QAEtBlhC,KAAK85B,cAAcyH,KAK5BA,EAAavhC,KAAK+0B,WAEpB,OAAOwM,GAGTtgC,EAAW0Q,UAAUiwB,0BAA4B,SAASC,GACxD7hC,KAAKy2B,8BAAgCoL,GAMvC5gC,EAAW0Q,UAAUqlB,6BAA+B,WAElDh3B,KAAK8hC,sBACL,IAAK,IAAItQ,KAAgBxxB,KAAM,CAC7B,IAAIsC,EAAS,6BAA6BgrB,KAAKkE,GAC/C,GAAc,MAAVlvB,EAAgB,CAClB,IAAIy/B,EAAkB/hC,KAAKwxB,GAC3B,GAA8B,mBAAnBuQ,EACT,SAIF,IAAIC,EAAgBD,EAAgBE,QAAU3/B,EAAO,GAAGic,cACxDve,KAAK8hC,mBAAmBE,GAAiBD,GAO7C/hC,KAAKkiC,cAAgB,SAAS9Q,EAAa1tB,EAASy+B,EAAYC,GAC9D,IAAIL,EAAkB/hC,KAAK8hC,mBAAmB1Q,GAC9C,IAAK2Q,EACH,MAAM,IAAInvB,OACR,+BAAiCwe,EAAc,KAGnD,OAAO2Q,EAAgBlE,KAAK79B,KAAM0D,EAASy+B,EAAYC,IAMzDpiC,KAAK8hC,mBAAmB,YAAc,SACpCp+B,EACAy+B,EACAC,GAEA,OAAI1+B,EAAQ2+B,WAAW,MACdriC,KAAKsiC,qBAAqB5+B,EAASy+B,EAAYC,GAEpD1+B,EAAQ2+B,WAAW,aACdriC,KAAKuiC,4BAA4B7+B,EAASy+B,EAAYC,GAExDpiC,KAAKwiC,0BAA0B9+B,EAASy+B,EAAYC,KAI/DnhC,EAAW0Q,UAAUgG,YAAc,WACjC,OAAO4C,OAAKmjB,QAAQC,OAAO39B,KAAKkgB,mBAAmBrd,WAGrD5B,EAAW0Q,UAAUgD,SAAW,WAC9B,IAAI0jB,EAAIr4B,KAAK2X,cAAcC,MAI3B,MAHgB,iBAALygB,IACTA,EAAIA,EAAE5hB,QAED4hB,GAGTp3B,EAAW0Q,UAAUmb,gBAAkB,SAASiB,EAAYrW,GACrDA,IAAKA,EAAM1X,KAAK2X,eACrB,IAAI8qB,EAAK/qB,EAAImV,OACb,IAAK4V,EAAI,OAAO,KAChB,IAAIC,EAAUD,EAAGhxB,MAAM,KACvB,IAAK,IAAI3R,EAAI,EAAGA,EAAI4iC,EAAQz8B,OAAQnG,IAAK,CACvC,IACI6iC,EADSD,EAAQ5iC,GAAG2W,OACChF,MAAM,KAE/B,GADamxB,mBAAmBD,EAAY,MAC7B5U,EACb,OAAO6U,mBAAmBD,EAAY//B,MAAM,GAAGstB,KAAK,MAGxD,OAAO,MAGTjvB,EAAW0Q,UAAUyc,kBAAoB,SAAS1W,GAC3CA,IAAKA,EAAM1X,KAAK2X,eACrB,IAAI8qB,EAAK/qB,EAAImV,OACb,IAAK4V,EAAI,SACT,IAAItU,KACAuU,EAAUD,EAAGhxB,MAAM,KACvB,IAAK,IAAI3R,EAAI,EAAGA,EAAI4iC,EAAQz8B,OAAQnG,IAAK,CACvC,IACI6iC,EADSD,EAAQ5iC,GAAG2W,OACChF,MAAM,KAC3BoxB,EAASD,mBAAmBD,EAAY,IAC5CxU,EAAY7kB,KAAKu5B,GAEnB,OAAO1U,GAGTltB,EAAW0Q,UAAUmxB,qBAAuB,SAASprB,GAC9CA,IAAKA,EAAM1X,KAAK2X,eACrB,IAAI8qB,EAAK/qB,EAAImV,OACb,IAAK4V,EAAI,SACT,IAAItU,KACAuU,EAAUD,EAAGhxB,MAAM,KACvB,IAAK,IAAI3R,EAAI,EAAGA,EAAI4iC,EAAQz8B,OAAQnG,IAAK,CACvC,IAEI+iC,EAFSH,EAAQ5iC,GAAG2W,OACChF,MAAM,KACN,GACzB0c,EAAY7kB,KAAKu5B,GAEnB,OAAO1U,GAUTltB,EAAW0Q,UAAUsc,aAAe,SAASF,EAAYH,EAAQH,EAAM/V,GAChEA,IAAKA,EAAM1X,KAAK2X,eACrB,IAGIorB,EAHAxV,GAA2B,IAAI7a,MAAOC,WAAa,EAAI,IAIvDqwB,EAAiBhjC,KAAK8iC,qBAAqBprB,GAC/C,IAAK,IAAIurB,KAAmBD,EAAgB,CAC1C,GAAIA,EAAeC,IAAoBlV,EAAY,CACjDgV,EAAchV,EACd,MACK,GACLiV,EAAeC,IAAoBzL,mBAAmBzJ,GACtD,CACAgV,EAAcvL,mBAAmBzJ,GACjC,MACK,GACLiV,EAAeC,IACf5L,EAA8BtJ,GAC9B,CACAgV,EAAc1L,EAA8BtJ,GAC5C,OAIJ,IAAIlB,EAASkW,EAAc,aACvBtV,IACFZ,GAAU,QAAUY,EAAO,MAEzBG,IACFf,GAAU,UAAYe,EAAS,MAEjCf,GAAU,WAAa,IAAIna,KAAK6a,GAA0BC,cAE1D9V,EAAImV,OAASA,GAIf5rB,EAAW0Q,UAAUuxB,mBAAqB,SACxCnV,EACAH,EACAH,EACA/V,GAGA,OADA1X,KAAKiuB,aAAaF,EAAYH,EAAQH,EAAM/V,IACpC1X,KAAK8sB,gBAAgBiB,EAAYrW,IAG3CzW,EAAW0Q,UAAUwxB,gCAAkC,SACrDpV,EACAH,EACAH,EACA/V,GAGA,GADc1X,KAAKkjC,mBAAmBnV,EAAYH,EAAQH,EAAM/V,GACnD,OAAO,EACpB,IAAI0rB,EAAWxV,EAAOrgB,QAAQ,KAC9B,OAAgB,GAAZ61B,EACKpjC,KAAKmjC,gCACVpV,EACAH,EAAOpgB,UAAU,GACjBigB,EACA/V,IAEoB,GAAb0rB,EACFpjC,KAAKmjC,gCACVpV,EACAH,EAAOpgB,UAAU41B,GACjB3V,EACA/V,GAIK1X,KAAKkjC,mBAAmBnV,EAAY,KAAMN,EAAM/V,IAI3DzW,EAAW0Q,UAAU0xB,yBAA2B,SAC9CtV,EACAH,EACAH,EACA/V,GAEA,IAAI4rB,EAAa7V,EAAK7f,YAAY,KAKlC,GAHI01B,GADa7V,EAAKxnB,OAAS,GAE7Bq9B,KAEiB,GAAfA,EAAkB,CAOpB,GANgBtjC,KAAKqjC,yBACnBtV,EACAH,EACAH,EAAKjgB,UAAU,EAAG81B,EAAa,GAC/B5rB,GAEW,OAAO,EAEtB,OAAO1X,KAAKmjC,gCAAgCpV,EAAYH,EAAQH,EAAM/V,IAGxEzW,EAAW0Q,UAAUqc,wBAA0B,SAC7CD,EACAH,EACAH,EACAhpB,GAEKA,IAAKA,EAAMzE,KAAKkgB,oBACrB,IAAIxI,EAAMjT,EAAI5B,SACT+qB,IACHA,EAASlW,EAAIkW,QAEVH,IACHA,EAAOhpB,EAAIqO,SAASub,UAEtB,IAAIkV,EAAUvjC,KAAKqjC,yBACjBtV,EACA,IAAMH,EACNH,EACA/V,GAEF,IAAI6rB,KAEJA,EAAUvjC,KAAKmjC,gCACbpV,EACA,IAAMH,EACN,KACAlW,IAGF,MAAM,IAAI9E,OAAc,0BAA4Bmb,IAMtD9sB,EAAW0Q,UAAU8S,kBAAoB,SAAS/gB,EAASe,GACzDf,EAAU8/B,eAAc9/B,GAEb,MAAPe,IACFA,EAAMzE,KAAKkgB,oBAEb,IAAItc,EAAUwS,OAAIrS,SAASD,aACvB2/B,CAAC//B,EAAQiQ,MAAOjQ,EAAQ+Q,QAC1BhQ,EAAI5B,UAKN,OAHAe,EAAU2W,OAAKmjB,QAAQC,OAAO/5B,IAMhC3C,EAAW0Q,UAAU7N,YAAc,SAASJ,EAASe,GACnD,IAAIb,EAAU5D,KAAKykB,kBAAkB/gB,EAASe,GAC9C,GAAe,MAAXb,EACF,MAAM,IAAIgP,OAAc,WAAalP,EAAU,cACjD,OAAO6W,OAAKmjB,QAAQC,OAAO/5B,IAU7B3C,EAAW0Q,UAAU+xB,0BAA4B,SAASC,EAAKC,EAAOrkC,GACpE,IAAIskC,KACJA,EAAGF,GAAOC,EAEV,IAAIha,EAAMxT,OAAIrS,SAAS+/B,aAAaD,EAAItkC,GACpCwkC,EAAW,GAEf,IAAK,IAAIjkC,EAAI,EAAGA,EAAI8pB,EAAI3jB,OAAS,EAAGnG,IAClCikC,GAAY3tB,OAAI4tB,OAAOC,MAAMC,WAAW3pB,OAAKmjB,QAAQC,OAAO/T,EAAI9pB,KAAO,IAQzE,OANI8pB,EAAIA,EAAI3jB,OAAS,KACnB89B,GAAY3tB,OAAI4tB,OAAOC,MAAMC,WAC3B3pB,OAAKmjB,QAAQC,OAAO/T,EAAIA,EAAI3jB,OAAS,MAIlC89B,GAOT9iC,EAAW0Q,UAAU6wB,0BAA4B,SAC/CpX,EACA+W,EACAC,GAIA,OACEpiC,KAAKmkC,kBAAkB/Y,EAAY+W,EAAYC,IAC/CnhC,EAAW0Q,UAAUwtB,oBACnB/T,EACA+W,EACAC,IAEF,MAOJnhC,EAAW0Q,UAAUwyB,kBAAoB,SAAS/Y,EAAY+W,GAC5D,IAAIv+B,EAAUu+B,EAAW5R,eAAenF,GACxC,GAAIxnB,GAAWA,EAAQggB,aAAa,QAAUwH,EAC5C,OAAOxnB,EACF,GAAIic,EAAe4X,MAAQ5X,EAAe4I,QAAS,CAExD,IAAI2b,EAAWjC,EAAW9Z,qBAAqB,KAE/C,IAAK,IAAIvoB,EAAI,EAAGU,EAAI4jC,EAASn+B,OAAQnG,EAAIU,IAAKV,EAG5C,GAAqC,SAFrC8D,EAAUwgC,EAAStkC,IAEP4kB,QAAQnG,eAClB,GAAI3a,EAAQygC,WAAW,MAAM/e,WAAa8F,EACxC,OAAOxnB,OAEJ,GAAIA,EAAQggB,aAAa,OAASwH,EACvC,OAAOxnB,EAIX,OAAO,KAEP,OAAO,MAQX3C,EAAW0Q,UAAUwtB,oBAAsB,SAASz7B,EAASb,GAC3D,IAAIuhC,EAAWvhC,EAASwlB,qBAAqB,KAWzCic,EAAS,QAAU5gC,EAGvB,OAFA0gC,EAAWpkC,KAAKukC,eAAeD,EAAQF,EAAU,UAEpCn+B,OAAS,EACbm+B,EAAS,GAEX,MAMTnjC,EAAW0Q,UAAU4wB,4BAA8B,SAASiC,GAC1D,IAAI5gC,EAAU,KAIV03B,EAAY,IAAIC,WAAWC,MAAMC,QAAQz7B,KAAKm1B,cAAcriB,SAASiN,MACzEub,EAAUkJ,aAAeA,EACzB,IAEE5gC,EAAU23B,WAAWC,MAAME,cAAc8I,EAAclJ,GAEvD,MAAO/4B,GACP,OAAO,KAGT,OAAKqB,GACI,MAMX3C,EAAW0Q,UAAU4wB,4BAA4BN,OAAS,MAE1DhhC,EAAW0Q,UAAU8yB,+BAAiC,SAAS/gC,GAC7D,IACE,OAAO6W,OAAKxW,SAASD,YAAY,UAAYJ,GAC7C,MAAOnB,GACP,OAAO,OAGXtB,EAAW0Q,UAAU8yB,+BAA+BxC,OAAS,SAE7DhhC,EAAW0Q,UAAU+yB,yBAA2B,SAAShhC,GACvD,IACE,OAAO6W,OAAKxW,SAASD,YAAY,aAAeJ,GAChD,MAAOnB,GACP,OAAO,OAGXtB,EAAW0Q,UAAU+yB,yBAAyBzC,OAAS,YAMvDhhC,EAAW0Q,UAAU2wB,qBAAuB,SAASxqB,EAAOqqB,GAC1D,OAAOniC,KAAKs1B,eAAeqP,iBACzBxC,EACArqB,EACA,KACAqqB,EAAWyC,iBACPzC,EAAWyC,iBAAiBzC,EAAW/7B,iBACvCpG,KAAK6kC,qBAWb5jC,EAAW0Q,UAAUmzB,sBAAwB,SAAShtB,EAAOqqB,GAC3D,OAAOniC,KAAKs1B,eAAeyP,YACzB5C,EACArqB,EACA,KACAqqB,EAAWyC,iBACPzC,EAAWyC,iBAAiBzC,EAAW/7B,iBACvCpG,KAAK6kC,qBAIb5jC,EAAW0Q,UAAUkzB,mBAAqB,SAAS5C,GACjD,GAAc,QAAVA,GAA8B,SAAVA,GAA+B,KAAVA,EAC3C,MAAO,+BACF,GAAc,UAAVA,EACT,MAAO,qCACF,GAAc,OAAVA,EACT,MAAO,6BAEP,MAAM,IAAIzxB,MAAM,sBAAwByxB,EAAS,MAOrDhhC,EAAW0Q,UAAUoG,mBAAqB,SAASitB,EAAU7C,GAC3D,IAAIz+B,EAAU8/B,eAAcwB,GAC5B,MAAoB,SAAhBthC,EAAQiQ,MAAmC,YAAhBjQ,EAAQiQ,KAC9ByC,OAAIrS,SAAS+/B,cAAehsB,MAAOpU,EAAQ+Q,QAAU0tB,GACzDl8B,OAGI,GAOXhF,EAAW0Q,UAAUuZ,iBAAmB,SAAS8Z,EAAU7C,GACzD,IAAIz+B,EAAU8/B,eAAcwB,GAC5B,MAAoB,OAAhBthC,EAAQiQ,MAAiC,YAAhBjQ,EAAQiQ,KAC5ByC,OAAIrS,SAAS+/B,cAAe7Y,IAAKvnB,EAAQ+Q,QAAU0tB,GAAYl8B,OAG/D,GAQXhF,EAAW0Q,UAAUszB,wBAA0B,SAASC,EAAU/C,GAChE,IAAIgD,EAAQhD,EAAW9Z,qBAAqB,KAC5C,IAAK,IAAIvoB,EAAI,EAAGA,EAAIqlC,EAAMl/B,OAAQnG,IAAK,CACrC,IAAI8D,EAAUuhC,EAAMrlC,GACpB,GAAImkB,OAAeO,QAAQ0gB,EAAU9uB,OAAIC,IAAIG,eAAe5S,IAC1D,OAAOA,EAGX,OAAO,MAGT3C,EAAW0Q,UAAUszB,wBAAwBhD,OAAS,OAMtDhhC,EAAW0Q,UAAUuG,cAAgB,SAASxU,GAE5C,IAAI0hC,EAAe1hC,EAAQkK,YAAY,KACnCy3B,EAAiB3hC,EAAQd,MAAM,EAAGwiC,GAClCE,EAAgB5hC,EAAQd,MAAMwiC,EAAe,GAG7CxhC,EAAU5D,KAAK8D,YAAYuhC,GAC3BptB,EAAiB7B,OAAIC,IAAIuN,aAAahgB,EAAS0hC,GACnD,OAAOtzB,OAAKuzB,gBAAgBttB,GAAkBA,EAAekU,WAAa,MAM5ElrB,EAAW0Q,UAAU2L,aAAe,SAAS1Z,EAAS4hC,GACpDpvB,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUC,OAC9C,IAAIqrB,GAAU,EACd,IAAK,IAAI3lC,EAAI,EAAGA,EAAI8D,EAAQmC,QAAQE,OAAQnG,IAAK,CAC/C,IAAIqd,EAASvZ,EAAQmC,QAAQjG,GACzBqd,EAAOmG,UAAYnG,GAAUqoB,GAC/BroB,EAAOmG,UAAW,EAClBmiB,GAAU,GACAtoB,EAAOmG,UAAYnG,GAAUqoB,IACvCroB,EAAOmG,UAAW,EAClBmiB,GAAU,GAIVA,GACFrvB,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUsC,SAOlDxb,EAAW0Q,UAAU6L,aAAe,SAAS5Z,EAASuZ,GACpDnd,KAAK0lC,iBAAiB9hC,GACtBwS,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUC,OACzC+C,EAAOmG,WACVnG,EAAOmG,UAAW,EAClBlN,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUsC,UAOlDxb,EAAW0Q,UAAU+L,gBAAkB,SAAS9Z,EAASuZ,GACvDnd,KAAK0lC,iBAAiB9hC,GACtBwS,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUC,OAC1C+C,EAAOmG,WACTnG,EAAOmG,UAAW,EAClBlN,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUsC,UAIlDxb,EAAW0Q,UAAU+zB,iBAAmB,SAAS9hC,GAC/C,IAAKA,EAAQ+hC,SACX,MAAM,IAAI/yB,OAAc,uBAI5B3R,EAAW0Q,UAAUi0B,YAAc,SAAShiC,EAASiiC,GACnDzvB,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUC,OAC9ChE,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAU2rB,QAC9C,IAAIC,EAAgBniC,EAAQggB,aAAa,aACrCoiB,EAAcH,EAClB,GAAqB,MAAjBE,EAAuB,CACzB,IAAIE,EAAYv6B,SAASq6B,GACrBF,EAAY5/B,OAASggC,IACvBD,EAAcH,EAAYtZ,OAAO,EAAG0Z,IAIxC,GAA2B,QAAvBpV,eAAWjtB,IACb,GAAIA,EAAQuC,eAAiBvC,EAAQuC,cAAc+/B,WAAY,CAI3C,MAHD,IAAIvhB,OACnB/gB,EAAQuC,cAAc+/B,YACtB3nB,gBAGA3a,EAAQ2T,UAAYyuB,SAIxBpiC,EAAQxD,MAAQ4lC,EAGlB,IACE5vB,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUsC,QAC9C,MAAOla,MAGXtB,EAAW0Q,UAAUw0B,aAAe,SAASviC,EAASgjB,EAASC,GAC7D7mB,KAAKomC,oBAAoB,QAASxiC,EAASgjB,EAASC,IAGtD5lB,EAAW0Q,UAAU00B,mBAAqB,SAASziC,EAASgjB,EAASC,GACnE7mB,KAAKomC,oBAAoB,WAAYxiC,EAASgjB,EAASC,IAIzD5lB,EAAW0Q,UAAU20B,qBAAuB,SAC1C1iC,EACAgjB,EACAC,GAEA7mB,KAAKomC,oBAAoB,cAAexiC,EAASgjB,EAASC,IAK5D5lB,EAAW0Q,UAAU40B,qBAAuB,SAAShkC,GACnD,IAAIqB,EAAU5D,KAAKwmC,qBAAqBjkC,IAAMA,EAC9C,GAAIqB,EAAQvB,OACV,GAAsB,UAAlBuB,EAAQvB,QAAsB,kBAAkBgC,KAAKT,EAAQvB,QAAS,CACxE,IAAIqiB,EAAUmM,eAAWjtB,GACzB,GAAe,KAAX8gB,GAA6B,QAAXA,EAAmB,CACvC,MAAM+hB,EAAY,WAAazmC,KAAK8Q,MACpC9Q,KAAK8Q,OAAS,EACd9Q,KAAK6D,WAAW8a,WAAW,GAAI8nB,GAC/B7iC,EAAQvB,OAASokC,OAEd,CACL,MAAMA,EAAY7iC,EAAQvB,OAC1BrC,KAAK6D,WAAW8a,WAAW,GAAI8nB,GAC/B7iC,EAAQvB,OAASokC,IAMvBxlC,EAAW0Q,UAAU60B,qBAAuB,SAASjkC,GACnD,IAAKA,EAAEmiB,QAAS,OAAO,KACvB,IAAIA,EAAUniB,EAAEmiB,QAAQnG,cACpB5K,EAAOpR,EAAEoR,KACb,OACEpR,EAAEmkC,aAAa,YACfnkC,EAAEmkC,aAAa,SACfnkC,EAAEmkC,aAAa,QACJ,UAAXhiB,GACY,SAAXA,IACU,UAAR/Q,GACS,UAARA,GACQ,SAARA,GACQ,SAARA,GACQ,YAARA,GACQ,SAARA,GAEGpR,EAEa,MAAhBA,EAAE8G,WACGrJ,KAAKwmC,qBAAqBjkC,EAAE8G,YAE5B,MAKbpI,EAAW0Q,UAAUg1B,iCAAmC,SACtDlnB,EACA7b,GAEA,IAAIgjC,EAAahjC,EACjB,KAAqB,MAAdgjC,GAAoB,CACzB,GAAIA,EAAW7mB,KAAM,CACnBN,EAAa3M,SAASiN,KAAO6mB,EAAW7mB,KACxC,MAEF6mB,EAAaA,EAAWv9B,aAI5BpI,EAAW0Q,UAAUk1B,iBAAmB,SAASjjC,GAC/C,IAAI6b,EAAe7b,EAAQuC,cAAc+e,YAIzC,OAHIthB,EAAQvB,SACVod,EAAezf,KAAK8mC,oBAAoBljC,EAAQvB,SAE3Cod,GAGTxe,EAAW0Q,UAAUm1B,oBAAsB,SAASzkC,GAClD,GAAc,SAAVA,EACF,OAAOrC,KAAKkgB,mBAEd,GAAc,QAAV7d,EACF,OAAOrC,KAAKg1B,SACP,GAAc,WAAV3yB,EACT,OAAOrC,KAAKkgB,mBAAmB+a,OAC1B,GAAc,UAAV54B,EAET,OAAOrC,KAAKkgB,mBAAmBkc,KAAK,GAAI,UAE1C,IAAIwC,EAAe5+B,KAAKkiC,cACtB,WACA7/B,EACArC,KAAKg1B,SAASnyB,SACd7C,KAAKg1B,UAEP,GAAI4J,EACF,OAAOA,EAAazD,cAEtB,IAAI12B,EAAMzE,KAAK0f,gBAAgBrd,GAC/B,OAAIoC,GACGzE,KAAKkgB,mBAAmBkc,KAAK,GAAI/5B,IAG1CpB,EAAW0Q,UAAUiQ,SAAW,WAC9B,IAAK5hB,KAAK2X,cAAc7U,KACtB,MAAM,IAAI8P,OACR,mEAGJ,OAAOwD,OAAIC,IAAIG,eAAexW,KAAK2X,cAAc7U,OAGnD7B,EAAW0Q,UAAU4T,cAAgB,WACnC,IAAI6e,EAAWpkC,KAAK2X,cAAc0Q,qBAAqB,SACnD/lB,KAEJ,IAAK,IAAIxC,EAAI,EAAGA,EAAIskC,EAASn+B,OAAQnG,IAEb,UAApBskC,EAAStkC,GAAG6T,MACQ,UAApBywB,EAAStkC,GAAG6T,MACQ,SAApBywB,EAAStkC,GAAG6T,MAEZrR,EAAOgH,KAAK86B,EAAStkC,GAAGurB,IAI5B,OAAO/oB,GAGTrB,EAAW0Q,UAAU8T,aAAe,WAClC,IAAI2e,EAAWpkC,KAAK2X,cAAc0Q,qBAAqB,SACnD/lB,KAEJ,IAAK,IAAIxC,EAAI,EAAGA,EAAIskC,EAASn+B,OAAQnG,IACX,QAApBskC,EAAStkC,GAAG6T,MACdrR,EAAOgH,KAAK86B,EAAStkC,GAAGurB,IAI5B,OAAO/oB,GAGTrB,EAAW0Q,UAAU6T,YAAc,WACjC,IAAI4e,EAAWpkC,KAAK2X,cAAc0Q,qBAAqB,KACnD/lB,KAEJ,IAAK,IAAIxC,EAAI,EAAGA,EAAIskC,EAASn+B,OAAQnG,IACnCwC,EAAOgH,KAAK86B,EAAStkC,GAAGurB,IAG1B,OAAO/oB,GAOTrB,EAAW0Q,UAAU2O,OAAS,WAC5BtgB,KAAKkgB,mBAAmB6mB,QAAQC,QAGlC/lC,EAAW0Q,UAAUs1B,UAAY,WAC/BjnC,KAAKkgB,mBAAmB6mB,QAAQG,WAGlCjmC,EAAW0Q,UAAU+O,MAAQ,WAC3B,GAAIb,EAAe4X,KAIjB,IAIE,OAHAz3B,KAAKg1B,SAASjI,MAAO,IAAIra,MAAOC,UAChCxR,OAAOi7B,KAAK,GAAIp8B,KAAKg1B,SAASjI,KAAM,SACpC/sB,KAAKg1B,SAAStU,QAEd,MAAOne,IAGTsd,EAAesnB,UACftnB,EAAeG,UACfH,EAAe4I,QAEfzoB,KAAKg1B,SAAStU,QAEd1gB,KAAKkgB,mBAAmBhN,KAAK,wBAIjCjS,EAAW0Q,UAAU6O,QAAU,WAC7BxgB,KAAKkgB,mBAAmBpN,SAASs0B,QAAO,IAM1CnmC,EAAW0Q,UAAU01B,iBAAmB,SAASC,EAAYhD,EAAQF,GACnE,IAAImD,EAAiBtmC,EAAWumC,gBAAgBF,GAChD,IAAKC,EACH,MAAM,IAAI30B,OACR,sCAAwC00B,EAAa,KAIzD,OAAOC,EAAejD,EAAQF,IAGhCnjC,EAAWumC,mBAEXvmC,EAAWumC,gBAAgBza,KAAO,SAASA,EAAMqX,GAC/C,IAAIqD,KACJ,IAAK,IAAI3nC,EAAI,EAAGA,EAAIskC,EAASn+B,OAAQnG,IAC/BskC,EAAStkC,GAAGitB,OAASA,GACvB0a,EAAiBn+B,KAAK86B,EAAStkC,IAGnC,OAAO2nC,GAGTxmC,EAAWumC,gBAAgBpnC,MAAQ,SAASA,EAAOgkC,GACjD,IAAIqD,KACJ,IAAK,IAAI3nC,EAAI,EAAGA,EAAIskC,EAASn+B,OAAQnG,IAC/BskC,EAAStkC,GAAGM,QAAUA,GACxBqnC,EAAiBn+B,KAAK86B,EAAStkC,IAGnC,OAAO2nC,GAGTxmC,EAAWumC,gBAAgBv8B,MAAQ,SAASA,EAAOm5B,GAEjD,GADAn5B,EAAQyG,OAAOzG,GACX+e,MAAM/e,IAAUA,EAAQ,EAC1B,MAAM,IAAI2H,OAAc,kBAAoB3H,GAE9C,GAAIm5B,EAASn+B,QAAUgF,EACrB,MAAM,IAAI2H,OAAc,uBAAyB3H,GAEnD,OAAQm5B,EAASn5B,KAGnBhK,EAAW0Q,UAAU4yB,eAAiB,SACpCmD,EACAtD,EACAuD,GAEA,IAAIL,EAAaK,GAAqB,QAGlCrlC,EAASolC,EAAW7yB,MAAM,qBAM9B,OALIvS,IACFglC,EAAahlC,EAAO,GAAGic,cACvBmpB,EAAaplC,EAAO,IAGftC,KAAKqnC,iBAAiBC,EAAYI,EAAYtD,IAMvDnjC,EAAW0Q,UAAUi2B,mBAAqB,SAASlkC,EAASb,GAC1D,IAAIuhC,EAAWhuB,OAAIrS,SAAS+/B,cAAe7Y,IAAKvnB,GAAWb,GAC3D,OAAuB,GAAnBuhC,EAASn+B,OAAoBm+B,EAAS,GACnC,MAITnjC,EAAW0Q,UAAUghB,iBAAmB,WACtC,OAAO3yB,KAAK8yB,oBAAoB,OAGlC7xB,EAAW0Q,UAAUmhB,oBAAsB,SAASxwB,GAClDtC,KAAK6nC,gBAAiB,EACtB,IAAI9nC,EAAOC,KA2BX,OAzBAmB,OAAO2mC,aAEHC,UAAW,sBACXC,QAAS,sBACT3lC,OAAQC,GAEV,KAGa,IAAIW,QAAQ,SAAS2C,EAASiL,GAC3C,IAAIC,EAAQ,EACRE,EAAWC,YAAY,WACpBlR,EAAK8nC,gBAORjiC,IACA7F,EAAK8nC,gBAAiB,EACtB32B,cAAcF,MARdF,EACY,KACVD,EAAO,eACPK,cAAcF,KAOjB,QAKP/P,EAAW0Q,UAAUqhB,iBAAmB,WACtChzB,KAAK6nC,gBAAiB,EACtB7nC,KAAKioC,cAAgB,KACrB,IAAIloC,EAAOC,KAyBX,OAxBAmB,OAAO2mC,aAEHC,UAAW,sBACXC,QAAS,oBAEX,KAEa,IAAI/kC,QAAQ,SAAS2C,EAASiL,GAC3C,IAAIC,EAAQ,EACRE,EAAWC,YAAY,WACpBlR,EAAK8nC,gBAORjiC,EAAQ7F,EAAKkoC,eACbloC,EAAK8nC,gBAAiB,EACtB9nC,EAAKkoC,cAAgB,KACrB/2B,cAAcF,MATdF,EACY,KACVD,EAAO,eACPK,cAAcF,KAQjB,QAMP/P,EAAW0Q,UAAU0hB,0BAA4B,SAAS/wB,GACxDtC,KAAKkoC,sBAAuB,EAC5B,IAAInoC,EAAOC,KAyBX,OAxBAmB,OAAO2mC,aAEHC,UAAW,sBACXC,QAAS,4BACT3lC,OAAQC,GAEV,KAEa,IAAIW,QAAQ,SAAS2C,EAASiL,GAC3C,IAAIC,EAAQ,EACRE,EAAWC,YAAY,WACpBlR,EAAKmoC,sBAORtiC,IACA7F,EAAKmoC,sBAAuB,EAC5Bh3B,cAAcF,MARdF,EACY,KACVD,EAAO,eACPK,cAAcF,KAOjB,QAKP/P,EAAW0Q,UAAU6hB,uBAAyB,WAC5CxzB,KAAKkoC,sBAAuB,EAC5BloC,KAAKmoC,oBAAsB,KAC3B,IAAIpoC,EAAOC,KAyBX,OAxBAmB,OAAO2mC,aAEHC,UAAW,sBACXC,QAAS,0BAEX,KAEa,IAAI/kC,QAAQ,SAAS2C,EAASiL,GAC3C,IAAIC,EAAQ,EACRE,EAAWC,YAAY,WACpBlR,EAAKmoC,sBAORtiC,EAAQ7F,EAAKooC,qBACbpoC,EAAKmoC,sBAAuB,EAC5BnoC,EAAKooC,oBAAsB,KAC3Bj3B,cAAcF,MATdF,EACY,KACVD,EAAO,eACPK,cAAcF,KAQjB,QAKP/P,EAAW0Q,UAAUwhB,gBAAkB,WACrC,IAAIpzB,EAAOC,KAkBX,OAjBe,IAAIiD,QAAQ,SAAS2C,EAASiL,GAC3C,IAAIC,EAAQ,EACRE,EAAWC,YAAY,WACpBlR,EAAKqoC,eAORxiC,EAAQ7F,EAAKsoC,cACbtoC,EAAKqoC,eAAgB,EACrBroC,EAAKsoC,aAAe,KACpBn3B,cAAcF,MATdF,EACY,KACVD,EAAO,mBACPK,cAAcF,KAQjB,cAQM8mB,UAA0B72B,EACrC6O,YAAY5E,GACVo9B,MAAMp9B,UAIGysB,UAA4B12B,EACvC6O,YAAY5E,GACVo9B,MAAMp9B,IAIVysB,EAAoBhmB,UAAU8qB,kBAAoB,SAASC,EAAQ5pB,GAGjE4pB,EAAOC,IAAM,cACbD,EAAOC,IAAM7pB,GAGf6kB,EAAoBhmB,UAAUyuB,gBAAkB,SAC9Cf,EACAY,GAKA,OAAIZ,EACKA,EAAiBvsB,UAAYmtB,EAAgBntB,SAE7CusB,IAAqBY,SAInBpI,UAAyB52B,EACpC6O,YAAY5E,GACVo9B,MAAMp9B,IAIV2sB,EAAiBlmB,UAAU8qB,kBACzB9E,EAAoBhmB,UAAU8qB,wBAEnB7E,UAAwB32B,EACnC6O,YAAY5E,GACVo9B,MAAMp9B,IAIV0sB,EAAgBjmB,UAAU8qB,kBAAoB,SAASC,EAAQ5pB,GACzD4pB,EAAOC,KAAO7pB,EAChB4pB,EAAOC,IAAM7pB,EAAW,UAExB4pB,EAAOC,IAAM7pB,SAIJ4kB,UAAqBz2B,EAChC6O,YAAY5E,GACVo9B,MAAMp9B,IAIVwsB,EAAa/lB,UAAU6vB,sBAAwB,SAC7CD,EACAL,GAEA,GAAIlhC,KAAK6S,mBACP,OAAO0uB,EAGT,IACEA,EAAWzuB,SAASiN,KACpB/f,KAAK47B,WAAa,EAClB,MAAOr5B,GACPvC,KAAK47B,aAEP,GAAI57B,KAAK85B,cAAcyH,IAAevhC,KAAK47B,WAAa,EAAG,CACzD,GAAI57B,KAAKw1B,mBAGP,OADAx1B,KAAKif,YAAY,gBACVjf,KAAKkgB,iBAAiBghB,GACxB,CACL,IAAIqH,EAAc,IAAI31B,OAAc,sCAEpC,MADA21B,EAAYC,cAAe,EACrBD,GAGV,OAAOhH,GAGT7J,EAAa/lB,UAAU0oB,iCAAmC,SACxDoD,EACAD,GAEAv8B,EAAW0Q,UAAU0oB,iCACnBoD,EACAD,GAIF,IAAIiL,EAAqBhL,EAAeiL,gBAExCjL,EAAeiL,gBAAkB,SAASrqB,EAAKsqB,EAAMC,GAGnD,IAAIC,EAAehmC,SAASiQ,SAASqZ,WACjC2c,EAAkBD,EAAat7B,QAAQ,mBACvCw7B,EAAWF,EAAar7B,UAAU,EAAGs7B,GACrCE,EAAc,QAGc,IAArB7nC,OAAO8nC,aAChBD,EAAc,gBAAkBC,WAAWD,aAG7C,IAMIE,EAAUH,GALZ,wCACAI,OAAO3L,EAAW/H,iBAClB,YACA0T,OAAO9qB,GACP2qB,GASF,OAPAxL,EAAW/H,gBAAkB,KAGzBz1B,KAAK6S,qBACPq2B,EAAU7qB,GAEMoqB,EAAmBS,EAASP,EAAMC,KAKxDlR,EAAa/lB,UAAU6oB,0CAA4C,SACjEiE,GAEAz+B,KAAK0gC,eAAgB,EACrB,IAAI3gC,EAAOC,KACPopC,EAAqB,WACvBrpC,EAAK2gC,eAAgB,GAEnBjC,EAAa4K,iBACf5K,EAAa4K,iBAAiB,eAAgBD,GAAoB,GAElE3K,EAAa6K,YAAY,iBAAkBF,GAE7CnoC,EAAW0Q,UAAU6oB,0CAA0CqD,KAC7D79B,KACAy+B,IAIJ/G,EAAa/lB,UAAUotB,YAAc,SACnCK,EACAX,EACAY,EACAC,EACAC,EACAZ,GAaA,GAVK3+B,KAAK42B,gBAAgB+H,KAAS3+B,KAAK42B,gBAAgB+H,GAAU,GAClE19B,EAAW0Q,UAAUotB,YAAYlB,KAC/B79B,KACAo/B,EACAX,EACAY,EACAC,EACAC,EACAZ,GAEE3+B,KAAKi2B,cAAe,CACtB,GAAIj2B,KAAK0gC,cAWP,OATA1gC,KAAKggC,iBACHZ,EACAX,EACAY,EACAC,EACAC,EACAZ,QAEF3+B,KAAKi2B,cAAgB,MAEhB,IAC0B,qBAA9Bj2B,KAAKi2B,cAAczzB,SAClB,oBAAoB6B,KAAKrE,KAAKi2B,cAAczzB,WAC9CxC,KAAK42B,gBAAgB+H,KAAY,EACjC,CACA,GAAI3+B,KAAK42B,gBAAgB+H,GAAU,EAAG,CACpC,IAAI4K,EACAC,EACJ,IACE/K,EAAa3rB,SAASiN,KACtBwpB,GAAsB,EACtB,MAAOhnC,IACT,IACEvC,KAAKkgB,kBAAiB,GAAMpN,SAASiN,KACrCypB,GAAmC,EACnC,MAAOjnC,IACT,GAAIinC,GAAoCD,EAItC,YADAvpC,KAAKi2B,cAAgB,MAezB,OATAj2B,KAAKggC,iBACHZ,EACAX,EACAY,EACAC,EACAC,EACAZ,QAEF3+B,KAAKi2B,cAAgB,SAQ3ByB,EAAa/lB,UAAUmoB,cAAgB,SAASr1B,GAC9C,IACE,IAAIs1B,EAAIt1B,EAAIu1B,OAGZ,IAAKD,EACH,IACEt1B,EAAI5B,SACJ,MAAO4mC,GACP,MAAkB,qBAAdA,EAAGjnC,UAGI,oBAAoB6B,KAAKolC,EAAGjnC,SAW3C,OAAS,MAALu3B,GAIGA,EACP,MAAOx3B,GAGP,QAAIsd,EAAeub,OACA,qBAAb74B,EAAEC,UAiBZk1B,EAAa/lB,UAAU+3B,yBAA2B,SAChDte,EACA+W,GAEA,OAAOA,EAAW5R,eAAenF,IAGnCyM,EAAiBlmB,UAAU0oB,iCAAmC,SAC5DoD,EACAD,GAEAv8B,EAAW0Q,UAAU0oB,iCACnBoD,EACAD,GAGF,IAAIS,EAAeR,EAAerB,KAMlCqB,EAAerB,KAAO,SAAS/d,EAAK0c,EAAYoD,EAAgBC,GAC9D,GACE/f,EAAIgkB,WAAW,YACfhkB,EAAIgkB,WAAW,aACfhkB,EAAIgkB,WAAW,KAEf,OAAOpE,EAAa5f,EAAK0c,EAAYoD,EAAgBC,GAIvD,IAAIuL,EAAclM,EAAe3qB,SAASub,UAAY,IACtDsb,EAAcA,EAAY98B,QAAQ,YAAa,KAG/CwR,EAAMA,EAAIxR,QAAQ,QAAS,IAI3B,IAAIyxB,EAAeL,EAFJ0L,EAActrB,EAI3B0c,EACAoD,EACAC,GAMF,OAHkB,MAAdrD,IACFuD,EAAa,sBAAwBvD,GAEhCuD,IAIXxG,EAAkBnmB,UAAUy0B,oBAAsB,SAChD9N,EACA10B,EACAgjB,EACAC,GAEA,IAAIpiB,EAAMzE,KAAKkgB,mBACf9J,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUC,OAO9CxW,EAAQylC,iBAAiB/Q,EAAW,cAAe,GAKnDt4B,KAAK6D,WAAW6X,kBAAkB9X,EAAS00B,GAAW,EAAM1R,EAASC,GAEjE7mB,KAAK85B,cAAcr1B,IAmBzBmzB,EAAgBjmB,UAAUy0B,oBAAsB,SAC9C9N,EACA10B,EACAgjB,EACAC,GAEA,IAAIpiB,EAAMzE,KAAKkgB,mBACf9J,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUC,OAE9Cpa,KAAKumC,qBAAqB3iC,GAG1B5D,KAAK6D,WAAW6X,kBAAkB9X,EAAS00B,GAAW,EAAM1R,EAASC,GAEjE7mB,KAAK85B,cAAcr1B,IAKzBkzB,EAAoBhmB,UAAUy0B,oBAAsB,SAClD9N,EACA10B,EACAgjB,EACAC,GAEA,IAAIpiB,EAAMzE,KAAKkgB,mBACf9J,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUC,OAE9Cpa,KAAKumC,qBAAqB3iC,GAEtBA,EAAQ00B,GACV10B,EAAQ00B,KAERt4B,KAAK6D,WAAW6X,kBACd9X,EACA00B,GACA,EACA1R,EACAC,GAIA7mB,KAAK85B,cAAcr1B,IAKzBozB,EAAiBlmB,UAAUy0B,oBAAsB,SAC/C9N,EACA10B,EACAgjB,EACAC,GAEAzQ,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUC,OAC9Cpa,KAAKumC,qBAAqB3iC,GAGtBA,EAAQ00B,GACV10B,EAAQ00B,KAKRt4B,KAAK6D,WAAW6X,kBACd9X,EACA00B,GACA,EACA1R,EACAC,IAKNgR,EAAiBlmB,UAAU6O,QAAU,WACnC,IAAI/b,EAAMzE,KAAKkgB,mBACf,GAAIzb,EAAIqO,SAAS82B,KAAM,CAErBnlC,EAAIqO,SAAS82B,KAAO,GACpB,IAAIC,EAAiB,WACnBplC,EAAIqO,SAASs0B,QAAO,IAEtBjmC,OAAOmzB,WAAWuV,EAAgB,QAElCplC,EAAIqO,SAASs0B,QAAO,IAIxB1P,EAAa/lB,UAAUy0B,oBAAsB,SAC3C9N,EACA10B,EACAgjB,EACAC,GAEA,IAAIpiB,EAAMzE,KAAKkgB,mBACf9J,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUC,OAE9C,IAAI0vB,EAAalmC,EAAQgQ,QAIrB8sB,GAAgB,EAChB0I,EAAqB,WACvB1I,GAAgB,GAEdj8B,EAAI4kC,iBACN5kC,EAAI4kC,iBAAiB,eAAgBD,GAAoB,GAEzD3kC,EAAI6kC,YAAY,iBAAkBF,GAEpCppC,KAAKumC,qBAAqB3iC,GACtBA,EAAQ00B,GACV10B,EAAQ00B,KAERt4B,KAAK6D,WAAW6X,kBACd9X,EACA00B,GACA,EACA1R,EACAC,GAMJ,IAOE,GANIpiB,EAAIslC,oBACNtlC,EAAIslC,oBAAoB,iBAAkBX,GAAoB,GAE9D3kC,EAAIulC,YAAY,iBAAkBZ,GAGhCppC,KAAK85B,cAAcr1B,GACrB,YA9vBmBoX,UAkwBPjY,EAAQgQ,SAAYk2B,GAAclmC,EAAQgQ,SACtDwC,OAAI6D,OAAOC,KAAKtW,EAASwS,OAAI6D,OAAOE,UAAUsC,QAEhD,MAAOla,GAGP,GAAIm+B,EAIF,OAEF,MAAMn+B,sCCz7FVpC,EAAA,KAAA8jB,EAAA,IAAAgmB,EAAA3pC,EAAA,KAmBe,SAAS2jB,EAAe7B,GACrCpiB,KAAKkqC,eAAe9nB,GAGtB6B,EAAetS,WACbu4B,eAAgB,SAAS9nB,GACvBpiB,KAAKoiB,QAAUA,EACf,IAAI+nB,EAAe,OAEnB,GAAI,kBAAkB9lC,KAAK+d,GAAU,CACnC,MAAMgoB,EAA0BC,OAAOC,GACjCC,EAAqBF,OAAOG,GAC9BvmB,EAAeE,WAAWimB,KAC5BD,EAAeC,EACfhoB,EAAUmoB,GAGd,MAAME,EAAgBxmB,EAAeE,WAAWgmB,GAChD,IAAKM,EACH,MAAM,IAAI73B,OACR,yCAA2Cu3B,GAG/CnqC,KAAKkkB,SAAWumB,EAChBzqC,KAAKqkB,QAAU,IAAIomB,EAAcroB,IAGnCoC,QAAS,SAASjP,GAChB,OAAOvV,KAAKqkB,QAAQG,QAAQjP,EAAS,MAQzC0O,EAAeO,QAAU,SAASpC,EAAS7M,GACzC,OAAO,IAAI0O,EAAe7B,GAASoC,QAAQjP,IAG7C0O,EAAeE,YAIbI,MAAO,SAAStP,GACdjV,KAAKiV,SAAWA,EAChBjV,KAAKwkB,QAAU,SAASjP,GACtB,OAAOA,GAAUvV,KAAKiV,WAO1By1B,OAAQ,SAASC,GACf3qC,KAAK0qC,OAAS,IAAIL,OAAOM,GACzB3qC,KAAKwkB,QAAU,SAASjP,GACtB,OAAOvV,KAAK0qC,OAAOrmC,KAAKkR,KAI5Bq1B,MAAO,SAASD,GACd3qC,KAAK0qC,OAAS,IAAIL,OAAOM,GACzB3qC,KAAKwkB,QAAU,SAASjP,GACtB,OAAOvV,KAAK0qC,OAAOrmC,KAAKkR,KAI5Bs1B,QAAS,SAASF,GAChB3qC,KAAK0qC,OAAS,IAAIL,OAAOM,EAAc,KACvC3qC,KAAKwkB,QAAU,SAASjP,GACtB,OAAOvV,KAAK0qC,OAAOrmC,KAAKkR,KAI5Bu1B,OAAQ,SAASH,GACf3qC,KAAK0qC,OAAS,IAAIL,OAAOM,EAAc,KACvC3qC,KAAKwkB,QAAU,SAASjP,GACtB,OAAOvV,KAAK0qC,OAAOrmC,KAAKkR,KAe5B+O,aAAc,SAASymB,GACrB/qC,KAAK0qC,OAAS,IAAIL,OAAOpmB,EAAe+mB,uBAAuBD,IAC/D/qC,KAAKwkB,QAAU,SAASjP,GACtB,OAAOvV,KAAK0qC,OAAOrmC,KAAKkR,KAO5B6O,KAAM,SAAS2mB,GACb/qC,KAAK0qC,OAAS,IAAIL,OAAOpmB,EAAegnB,eAAeF,IACvD/qC,KAAKwkB,QAAU,SAASjP,GACtB,OAAOvV,KAAK0qC,OAAOrmC,KAAKkR,MAK9B0O,EAAeinB,sCAAwC,SAAS9mB,GAC9D,IAAI+mB,EAAK/mB,EAIT,OADA+mB,GADAA,GADAA,EAAKA,EAAGt+B,QAAQ,uBAAwB,SAChCA,QAAQ,MAAO,eACfA,QAAQ,MAAO,gBAIzBoX,EAAe+mB,uBAAyB,SAAS1mB,GAC/C,OAAOL,EAAeinB,sCAAsC5mB,IAG9DL,EAAegnB,eAAiB,SAAS7mB,GACvC,MAAO,IAAMH,EAAeinB,sCAAsC9mB,GAAQ,6ECgC7D5f,aA9IbsL,YAAYyC,EAAU64B,GACpBprC,KAAKuS,SAAWA,EAChBvS,KAAKorC,gBAAkBA,EAMvBprC,KAAKyE,IAAMtD,OACX,MAAMuW,EAAM1X,KAAKyE,IAAI5B,SACfwoC,EAAM3zB,EAAIgZ,cAAc,OAC9B2a,EAAItoC,aAAa,QAAS,kBAC1B2U,EAAI5U,KAAKwoC,aAAaD,EAAK3zB,EAAI5U,KAAKyoC,YACpCvrC,KAAKqrC,IAAMA,EACXrrC,KAAKuC,EAAI,KACTvC,KAAKwrC,EAAI,KACTxrC,KAAKyrC,OAAS/zB,EAAIgZ,cAAc,OAChC1wB,KAAKyrC,OAAO1oC,aACV,QACA,4FAEF,MAAM2oC,EAASh0B,EAAIgZ,cAAc,OACjCgb,EAAO3oC,aACL,QACA,ybAEF,MAAM4oC,EAAMj0B,EAAIgZ,cAAc,OAC9Bib,EAAIhP,IAAM/3B,QAAQC,QAAQ+uB,OAAO,4BACjC+X,EAAI5oC,aAAa,QAAS,+BAC1B2oC,EAAO/a,YAAYgb,GACnB,MAAMC,EAAOl0B,EAAIgZ,cAAc,QAC/Bkb,EAAK7oC,aACH,QACA,qDAEF6oC,EAAKC,UAAY,oBACjBH,EAAO/a,YAAYib,GACnBtX,WAAW,KAITt0B,KAAKyrC,OAAOpC,iBACV,YACA,KACE/U,WAAW,KACTt0B,KAAKyrC,OAAO5kC,MAAM+d,WAAa,UAC9B,OAEL,IAED,KACH5kB,KAAKyrC,OAAO9a,YAAY+a,GACxBh0B,EAAI5U,KAAKwoC,aAAatrC,KAAKyrC,OAAQJ,GACnC3zB,EAAI2xB,iBAAiB,YAAarpC,MAAM,GACxC0X,EAAI2xB,iBAAiB,QAASrpC,MAAM,GAGtCmF,UACE,IAaE,GAZInF,KAAKqrC,MACHrrC,KAAKqrC,IAAIhiC,YACXrJ,KAAKqrC,IAAIhiC,WAAWynB,YAAY9wB,KAAKqrC,KAEvCrrC,KAAKqrC,IAAM,MAETrrC,KAAK0rC,SACH1rC,KAAK0rC,OAAOriC,YACdrJ,KAAK0rC,OAAOriC,WAAWynB,YAAY9wB,KAAK0rC,QAE1C1rC,KAAK0rC,OAAS,MAEZ1rC,KAAKyE,IAAK,CACZ,MAAMiT,EAAM1X,KAAKyE,IAAI5B,SACrB6U,EAAIqyB,oBAAoB,YAAa/pC,MAAM,GAC3C0X,EAAIqyB,oBAAoB,QAAS/pC,MAAM,IAEzC,MAAOuC,GACP,GAAS,uCAALA,EACF,MAAMA,EAGVvC,KAAKyE,IAAM,KACPzE,KAAKorC,iBACPprC,KAAKorC,kBAITU,YAAYjT,GACV,OAAQA,EAAIllB,MACV,IAAK,YACH3T,KAAK+rC,UAAUlT,EAAIx2B,OAAO8D,cAAe0yB,EAAIjS,QAASiS,EAAIhS,SAC1D,MACF,IAAK,QACe,GAAdgS,EAAIL,QAAex4B,KAAKuC,GAAKvC,KAAKuS,UACpCvS,KAAKuS,SAASvS,KAAKuC,EAAGvC,KAAKyE,KAE7Bo0B,EAAImT,iBACJnT,EAAIoT,kBACJjsC,KAAKmF,WAKX4mC,UAAUr0B,EAAKpG,EAAGC,GAChB,GAAImG,EAAK,CACP,MAAMnV,EAAImV,EAAIw0B,iBAAiB56B,EAAGC,GAC9BhP,GAAKA,GAAKvC,KAAKuC,GACjBvC,KAAK6zB,iBAAiBtxB,IAK5BsxB,iBAAiBjwB,GACf,IAAIA,GAAWA,GAAW5D,KAAKuC,GAAKqB,IAAY5D,KAAKyrC,OAGnD,OAFAzrC,KAAKuC,EAAIqB,EAIX,MAAM4nC,EAAI5nC,EAAQyG,wBACZ8hC,EAAKnsC,KAAKwrC,EAChB,GAAIA,EAAEtkC,MAAQ,GAAKskC,EAAEvkC,KAAO,GAAKukC,EAAE/hC,MAAQ,GAAK+hC,EAAE5hC,OAAS,EAAG,CAC5D,GACEuiC,GACAX,EAAEvkC,KAAOklC,EAAGllC,KACZukC,EAAEtkC,MAAQilC,EAAGjlC,MACbskC,EAAE/hC,OAAS0iC,EAAG1iC,OACd+hC,EAAE5hC,QAAUuiC,EAAGviC,OAEf,OAEF5J,KAAKwrC,EAAIA,EACT,MAAM3kC,EACJ,4IACI+H,SAAa48B,EAAEvkC,IAAMjH,KAAKyE,IAAIyF,mBAAmBshC,EAAEtkC,KACvDlH,KAAKyE,IAAIsF,oBAAoByhC,EAAE/hC,mBAAmB+hC,EAAE5hC,YACtD5J,KAAKqrC,IAAItoC,aAAa,QAAS8D,EAAQ+H,QAC9Bu9B,GACTnsC,KAAKqrC,IAAItoC,aAAa,QAAS,sDC1KrC5C,EAAA,KAsCO,SAAoBqD,EAAM4oC,GAC/B,GAAIC,EACF,OAAOD,GAAG,GAEZ,MAAME,EAAYzpC,SAAS6tB,cAAc,OACzC4b,EAAUjhB,GAAK,qBACf,MAAMkhB,EAAS1pC,SAAS6tB,cAAc,OACtC6b,EAAOlhB,GAAK,kBACZ,MAAMnmB,EA6IR,WACE,MAAMA,EAASrC,SAAS6tB,cAAc,OACtCxrB,EAAOmmB,GAAK,kBAEZ,MAAMmhB,EAAa,GAEbC,EAAMC,EAAgBF,GAC5BC,EAAI5lC,MAAMI,IAAM,OAChBwlC,EAAI5lC,MAAMK,KAAO,OACjBulC,EAAI5lC,MAAMuC,OAAS,YAEnBqjC,EAAIpD,iBAAiB,YAAa,KAChC,MAAMkD,EAAS1pC,SAAS0tB,eAAe,mBACjCrrB,EAASrC,SAAS0tB,eAAe,mBACvCgc,EAAO1lC,MAAMuC,OAAS,YACtBlE,EAAO2B,MAAMuC,OAAS,YACtBujC,EACEngC,KAAKC,IAAI+E,EAAO2V,OAAQ3V,EAAOo7B,MAC/BpgC,KAAKC,IAAI+E,EAAO4V,OAAQ5V,EAAOq7B,MAC/BrgC,KAAKE,IAAI8E,EAAO2V,OAAQ3V,EAAOo7B,MAC/BpgC,KAAKE,IAAI8E,EAAO4V,OAAQ5V,EAAOq7B,SAInC3nC,EAAOyrB,YAAY8b,GAEnB,MAAMK,EAAMJ,EAAgBF,GAC5BM,EAAIjmC,MAAMI,IAAM,OAChB6lC,EAAIjmC,MAAM6D,MAAQ,OAClBoiC,EAAIjmC,MAAMuC,OAAS,YAEnB0jC,EAAIzD,iBAAiB,YAAa,KAChC,MAAMkD,EAAS1pC,SAAS0tB,eAAe,mBACjCrrB,EAASrC,SAAS0tB,eAAe,mBACvCgc,EAAO1lC,MAAMuC,OAAS,YACtBlE,EAAO2B,MAAMuC,OAAS,YACtBujC,EACEngC,KAAKE,IAAI8E,EAAO2V,OAAQ3V,EAAOo7B,MAC/BpgC,KAAKC,IAAI+E,EAAO4V,OAAQ5V,EAAOq7B,MAC/BrgC,KAAKC,IAAI+E,EAAO2V,OAAQ3V,EAAOo7B,MAC/BpgC,KAAKE,IAAI8E,EAAO4V,OAAQ5V,EAAOq7B,SAInC3nC,EAAOyrB,YAAYmc,GAEnB,MAAMC,EAAML,EAAgBF,GAC5BO,EAAIlmC,MAAM+D,OAAS,OACnBmiC,EAAIlmC,MAAMK,KAAO,OACjB6lC,EAAIlmC,MAAMuC,OAAS,YAEnB2jC,EAAI1D,iBAAiB,YAAa,KAChC,MAAMkD,EAAS1pC,SAAS0tB,eAAe,mBACjCrrB,EAASrC,SAAS0tB,eAAe,mBACvCgc,EAAO1lC,MAAMuC,OAAS,YACtBlE,EAAO2B,MAAMuC,OAAS,YACtBujC,EACEngC,KAAKC,IAAI+E,EAAO2V,OAAQ3V,EAAOo7B,MAC/BpgC,KAAKE,IAAI8E,EAAO4V,OAAQ5V,EAAOq7B,MAC/BrgC,KAAKE,IAAI8E,EAAO2V,OAAQ3V,EAAOo7B,MAC/BpgC,KAAKC,IAAI+E,EAAO4V,OAAQ5V,EAAOq7B,SAInC3nC,EAAOyrB,YAAYoc,GAEnB,MAAMC,EAAMN,EAAgBF,GAoB5B,OAnBAQ,EAAInmC,MAAM+D,OAAS,OACnBoiC,EAAInmC,MAAM6D,MAAQ,OAClBsiC,EAAInmC,MAAMuC,OAAS,YAEnB4jC,EAAI3D,iBAAiB,YAAa,KAChC,MAAMkD,EAAS1pC,SAAS0tB,eAAe,mBACjCrrB,EAASrC,SAAS0tB,eAAe,mBACvCgc,EAAO1lC,MAAMuC,OAAS,YACtBlE,EAAO2B,MAAMuC,OAAS,YACtBujC,EACEngC,KAAKE,IAAI8E,EAAO2V,OAAQ3V,EAAOo7B,MAC/BpgC,KAAKE,IAAI8E,EAAO4V,OAAQ5V,EAAOq7B,MAC/BrgC,KAAKC,IAAI+E,EAAO2V,OAAQ3V,EAAOo7B,MAC/BpgC,KAAKC,IAAI+E,EAAO4V,OAAQ5V,EAAOq7B,SAInC3nC,EAAOyrB,YAAYqc,GAEZ9nC,EAnOQ+nC,IAyBjB,SAAkBV,EAAQrnC,GACxBqnC,EAAO1lC,MAAM0hB,SAAW,QACxBgkB,EAAO1lC,MAAMI,IAAM,EACnBslC,EAAO1lC,MAAM+D,OAAS,EACtB2hC,EAAO1lC,MAAM6D,MAAQ,EACrB6hC,EAAO1lC,MAAMK,KAAO,EACpBqlC,EAAO1lC,MAAMmtB,OAAS,QACtBuY,EAAO1lC,MAAMuC,OAAS,YAEtBlE,EAAO2B,MAAM0hB,SAAW,WACxBrjB,EAAO2B,MAAMmtB,OAAS,QACtB9uB,EAAO2B,MAAMqmC,gBAAkB,oBAC/BhoC,EAAO2B,MAAMsmC,QAAU,MACvBjoC,EAAO2B,MAAMkjB,OAAS,qBArCtBqjB,CAASb,EAAQrnC,GAwCnB,SAAmBonC,GACjBA,EAAUjD,iBAAiB,YAAagE,GACxCf,EAAUjD,iBAAiB,UAAWiE,GAzCtCC,CAAUjB,GACV,MAAMkB,EAyQR,SAAuBpB,GACrB,MAAME,EAAYzpC,SAAS6tB,cAAc,OACzC4b,EAAUjhB,GAAK,uBACf,MAAMoiB,EAAU5qC,SAAS6tB,cAAc,OACjCoN,EAAUj7B,SAAS6tB,cAAc,UACvCoN,EAAQ+N,UAAY,UACpB/N,EAAQuL,iBAAiB,QAAS,KAChCqE,IACAtoC,IACA,MAAM5B,EAAOmqC,EAAwBn8B,GACrC46B,QACQ5oC,EAAK0D,YAAY1D,EAAKyD,eAAezD,EAAKiG,kBAC9CjG,EAAKoG,YAIX,MAAMgkC,EAAS/qC,SAAS6tB,cAAc,UAmBtC,OAlBAkd,EAAO/B,UAAY,SACnB+B,EAAOvE,iBAAiB,QAAS,KAC/BqE,IACAtoC,IACAgnC,GAAG,KAGLE,EAAUzlC,MAAM+d,WAAa,SAC7B6oB,EAAQ5mC,MAAMotB,QAAU,OACxBwZ,EAAQ5mC,MAAMgnC,WAAa,SAC3BJ,EAAQ5mC,MAAMinC,eAAiB,SAE/BC,EAAYjQ,GACZiQ,EAAYH,GAEZH,EAAQ9c,YAAYid,GACpBH,EAAQ9c,YAAYmN,GACpBwO,EAAU3b,YAAY8c,GACfnB,EA5SiB0B,CAAc5B,GACtCoB,EAAgB3mC,MAAMmtB,OAAS,QAC3BxwB,IACF0B,EAAO2B,MAAMK,QAAU1D,EAAK8N,MAC5BpM,EAAO2B,MAAMI,OAASzD,EAAK+N,MAC3BrM,EAAO2B,MAAM4C,SAAWjG,EAAKiG,UAC7BvE,EAAO2B,MAAM+C,UAAYpG,EAAKoG,YAEhC0iC,EAAU3b,YAAY6c,GACtBlB,EAAU3b,YAAY4b,GACtBD,EAAU3b,YAAYzrB,GACtBrC,SAASC,KAAK6tB,YAAY2b,GAC1BD,GAAe,GA7DjBlsC,EAAA,KAAAiF,EAiBA,MAAMoM,GACJ2V,OAAQ,EACRC,OAAQ,EACRwlB,KAAM,EACNC,KAAM,GAGFoB,GACJ38B,EAAG,EACHC,EAAG,GAGC28B,GACJC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,GAGV,IAAIC,EAAQJ,EAAOC,OACf9B,GAAe,EA4BZ,SAASjnC,IACVinC,GACFxpC,SAASC,KAAKguB,YAAYjuB,SAAS0tB,eAAe,uBAEpD8b,GAAe,EAwBjB,SAASgB,EAAU9qC,GACjB,MAAM+pC,EAAYzpC,SAAS0tB,eAAe,sBACpCgc,EAAS1pC,SAAS0tB,eAAe,mBACjCrrB,EAASrC,SAAS0tB,eAAe,mBACvChuB,EAAE0pC,kBACuB,WAArB1pC,EAAEF,OAAOqiB,UACTniB,EAAEF,SAAWkqC,GACfI,EAAapqC,EAAEgsC,MAAOhsC,EAAEisC,MAAOjsC,EAAEgsC,MAAOhsC,EAAEisC,OAC1CF,EAAQJ,EAAOC,OACfjpC,EAAO2B,MAAMuC,OAAS,aACb7G,EAAEF,SAAW6C,GACtBopC,EAAQJ,EAAOE,OACfH,EAAY38B,EAAI/O,EAAEgsC,MAClBN,EAAY18B,EAAIhP,EAAEisC,MAClBtpC,EAAO2B,MAAMuC,OAAS,QACb7G,EAAEF,OAAOk3B,gBAAkBr0B,IACpCopC,EAAQJ,EAAOG,QAEjB/B,EAAUjD,iBAAiB,YAAaoF,IAG1C,SAASA,EAAUlsC,GACjBA,EAAE0pC,kBACuB,WAArB1pC,EAAEF,OAAOqiB,UACT4pB,IAAUJ,EAAOC,QAAUG,IAAUJ,EAAOG,OAC9C1B,OAAa9wB,OAAWA,EAAWtZ,EAAEgsC,MAAOhsC,EAAEisC,OACrCF,IAAUJ,EAAOE,QAsD9B,SAAoBM,EAAQC,GAC1B,IAAIC,EAAKX,EAAY38B,EAAIo9B,EACrBG,EAAKZ,EAAY18B,EAAIo9B,EACzBV,EAAY38B,EAAIo9B,EAChBT,EAAY18B,EAAIo9B,GACZn9B,EAAO2V,OAASynB,EAAK,GAAKp9B,EAAOo7B,KAAOgC,EAAK,KAAGA,EAAK,IACrDp9B,EAAO4V,OAASynB,EAAK,GAAKr9B,EAAOq7B,KAAOgC,EAAK,KAAGA,EAAK,GACzDlC,EACEn7B,EAAO2V,OAASynB,EAChBp9B,EAAO4V,OAASynB,EAChBr9B,EAAOo7B,KAAOgC,EACdp9B,EAAOq7B,KAAOgC,GAhEdC,CAAWvsC,EAAEgsC,MAAOhsC,EAAEisC,QAI1B,SAASlB,EAAQ/qC,GACf,MAAM+pC,EAAYzpC,SAAS0tB,eAAe,sBACpCgc,EAAS1pC,SAAS0tB,eAAe,mBACjCrrB,EAASrC,SAAS0tB,eAAe,mBACvChuB,EAAE0pC,kBACF/mC,EAAO2B,MAAMuC,OAAS,OACtBmjC,EAAO1lC,MAAMuC,OAAS,YACtBkjC,EAAUvC,oBAAoB,YAAa0E,GA2J7C,WACE,MAAMM,EAAalsC,SAChB0tB,eAAe,mBACflmB,wBACGmjC,EAAkB3qC,SAAS0tB,eAAe,wBAChD,IAAItpB,EAAMuK,EAAO4V,OACbxc,EAAS4G,EAAOq7B,KAChB3lC,EAAOsK,EAAO2V,OACdzc,EAAQ8G,EAAOo7B,KACfnjC,EAAQiB,EAAQxD,EAChB6nC,EAAWnkC,OAASA,GAAU,MAAKA,EAAS3D,GAC5CwC,EAAQ,IAAGvC,EAAOsK,EAAOo7B,MAC7BliC,EAAQ8G,EAAO2V,QACf1d,EAAQ+C,KAAKma,IAAIld,IACL,MAAKA,EAAQ,KACzB+jC,EAAgB3mC,MAAM0hB,SAAW,WACjCilB,EAAgB3mC,MAAMI,IAAM2D,EAAS,KACrC4iC,EAAgB3mC,MAAMK,KAAOA,EAAO,KACpCsmC,EAAgB3mC,MAAM6D,MAAQA,EAAQ,KACtC8iC,EAAgB3mC,MAAM4C,MAAQA,EAAQ,KACtC+jC,EAAgB3mC,MAAMqmC,gBAAkB,sBACxCM,EAAgB3mC,MAAM+d,WAAa,UA/KnCoqB,GAGF,SAASrB,EAAwBn8B,GAC/B,OAMqBy9B,GALjB39B,EAAGE,EAAO2V,OAAQ5V,EAAGC,EAAO4V,QAKP8nB,GAJrB59B,EAAGE,EAAOo7B,KAAMr7B,EAAGC,EAAOq7B,OAM5B3lC,KAAMsF,KAAKE,IAAIuiC,EAAG39B,EAAG49B,EAAG59B,GACxBrK,IAAKuF,KAAKE,IAAIuiC,EAAG19B,EAAG29B,EAAG39B,GACvB9H,MAAO+C,KAAKma,IAAIsoB,EAAG39B,EAAI49B,EAAG59B,GAC1B1H,OAAQ4C,KAAKma,IAAIsoB,EAAG19B,EAAI29B,EAAG39B,IAL/B,IAAuB09B,EAAIC,EAS3B,SAASvC,EAAaxlB,EAAQC,EAAQwlB,EAAMC,GAC1Ca,IACA,MAAMxoC,EAASrC,SAAS0tB,eAAe,mBACnCpJ,IACF3V,EAAO2V,OAASA,GAEdC,IACF5V,EAAO4V,OAASA,GAEdwlB,IACFp7B,EAAOo7B,KAAOA,GAEZC,IACFr7B,EAAOq7B,KAAOA,GAEhB,MAAMrpC,EAAOmqC,EAAwBn8B,GACrCtM,EAAO2B,MAAMK,QAAU1D,EAAK0D,SAC5BhC,EAAO2B,MAAMI,OAASzD,EAAKyD,QAC3B/B,EAAO2B,MAAM4C,SAAWjG,EAAKiG,UAC7BvE,EAAO2B,MAAM+C,UAAYpG,EAAKoG,WA2GhC,SAAS8iC,EAAgByC,GACvB,MAAMpV,EAAIl3B,SAAS6tB,cAAc,OAKjC,OAJAqJ,EAAElzB,MAAM0hB,SAAW,WACnBwR,EAAElzB,MAAM+C,UAAYulC,MACpBpV,EAAElzB,MAAM4C,SAAW0lC,MAEZpV,EA2BT,SAAS2T,IACiB7qC,SAAS0tB,eAAe,wBAChC1pB,MAAM+d,WAAa,SAyCrC,SAASmpB,EAAYvV,GACnBA,EAAO3xB,MAAMuoC,MAAQ,UACrB5W,EAAO3xB,MAAMqmC,gBAAkB,UAC/B1U,EAAO3xB,MAAMwoC,QAAU,YACvB7W,EAAO3xB,MAAMyoC,OAAS,UACtB9W,EAAO3xB,MAAM0oC,aAAe,MAC5B/W,EAAO3xB,MAAM2oC,QAAU,IACvBhX,EAAO3xB,MAAM4oC,cAAgB,gDCvW/BtvC,EAAA,KAoBO,SAAgBY,IACrB2uC,EAA4B7sC,SAAS6tB,cAAc,WACzBiM,IAAM/3B,IAAQC,QAAQ+uB,OAAO,sBACrD/wB,SAAS4tB,MAAQ5tB,SAASuD,iBAAiBuqB,YAC3C+e,GAGEvuC,SAAWA,OAAO8F,MACpB0oC,EAAUptC,KAmBd,SAAuBqtC,EAAO7uC,GAC5B,GACE6uC,EAAMC,QACND,EAAMC,OAAO5oC,KAAO9F,QACpByuC,EAAMpmB,MACkB,oBAAxBomB,EAAMpmB,KAAKue,WAEP6H,EAAMpmB,KAAKsmB,SACb,OAAQF,EAAMpmB,KAAKsmB,UACjB,IAAK,SACH/uC,EAAS8C,WAAWgkC,gBAAiB,EACjC+H,EAAMpmB,KAAKppB,QACbW,EAAS8C,WAAWokC,cAAgB2H,EAAMpmB,KAAKppB,OACjD,MACF,IAAK,UACHW,EAAS8C,WAAWqkC,sBAAuB,EACvC0H,EAAMpmB,KAAKppB,QACbW,EAAS8C,WAAWskC,oBAAsByH,EAAMpmB,KAAKppB,OACvD,MACF,IAAK,QACHW,EAAS8C,WAAWukC,eAAgB,EAChCwH,EAAMpmB,KAAKppB,QACbW,EAAS8C,WAAWwkC,aAAeuH,EAAMpmB,KAAKppB,SAxC7C2vC,CAAcxtC,EAAGxB,IAE1BI,OAAOkoC,iBAAiB,UAAWsG,KA/BvC,IAAAtvC,EAAAC,EAAA,IAAAC,EAAAD,EAAAE,EAAAH,GAmBA,IAAIsvC,EAASD","file":"playback.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*\n * Copyright 2017 SideeX committers\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\nimport browser from 'webextension-polyfill'\nimport './closure-polyfill'\nimport TargetSelector from './targetSelector'\nimport Selenium from './selenium-api'\nimport BrowserBot from './selenium-browserbot'\nimport LocatorBuilders from './locatorBuilders'\nimport { editRegion, removeRegion } from './region'\nimport { attach } from './prompt-injector'\n\nexport const selenium = new Selenium(BrowserBot.createForWindow(window, true))\nconst locatorBuilders = new LocatorBuilders(window)\nlet contentSideexTabId = window.contentSideexTabId\nlet targetSelector\n\nattach(selenium)\n\nfunction doCommands(request, _sender, sendResponse) {\n  if (request.commands) {\n    if (request.commands == 'waitPreparation') {\n      selenium['doWaitPreparation']('', selenium.preprocessParameter(''))\n      sendResponse({})\n    } else if (request.commands == 'prePageWait') {\n      selenium['doPrePageWait']('', selenium.preprocessParameter(''))\n      sendResponse({ new_page: window.sideex_new_page })\n    } else if (request.commands == 'pageWait') {\n      selenium['doPageWait']('', selenium.preprocessParameter(''))\n      sendResponse({ page_done: window.sideex_page_done })\n    } else if (request.commands == 'ajaxWait') {\n      selenium['doAjaxWait']('', selenium.preprocessParameter(''))\n      sendResponse({ ajax_done: window.sideex_ajax_done })\n    } else if (request.commands == 'domWait') {\n      selenium['doDomWait']('', selenium.preprocessParameter(''))\n      sendResponse({ dom_time: window.sideex_new_page })\n    } else if (request.commands === 'evaluateConditional') {\n      try {\n        let value = selenium['doEvaluateConditional'](request.target)\n        sendResponse({ result: 'success', value: value })\n      } catch (e) {\n        sendResponse({ result: e.message })\n      }\n    } else {\n      const upperCase =\n        request.commands.charAt(0).toUpperCase() + request.commands.slice(1)\n      if (selenium['do' + upperCase] != null) {\n        try {\n          document.body.setAttribute('SideeXPlayingFlag', true)\n          let returnValue = selenium['do' + upperCase](\n            selenium.preprocessParameter(request.target),\n            selenium.preprocessParameter(request.value)\n          )\n          if (returnValue instanceof Promise) {\n            // The command is a asynchronous function\n            returnValue\n              .then(function() {\n                // Asynchronous command completed successfully\n                document.body.removeAttribute('SideeXPlayingFlag')\n                sendResponse({ result: 'success' })\n              })\n              .catch(function(reason) {\n                // Asynchronous command failed\n                document.body.removeAttribute('SideeXPlayingFlag')\n                sendResponse({ result: reason })\n              })\n          } else {\n            // Synchronous command completed successfully\n            document.body.removeAttribute('SideeXPlayingFlag')\n            sendResponse({ result: 'success' })\n          }\n        } catch (e) {\n          // Synchronous command failed\n          document.body.removeAttribute('SideeXPlayingFlag')\n          sendResponse({ result: e.message })\n        }\n      } else {\n        sendResponse({ result: 'Unknown command: ' + request.commands })\n      }\n    }\n\n    //do every command need giving sideex id\n    if (contentSideexTabId === -1) {\n      contentSideexTabId = request.mySideexTabId\n    }\n    return true\n  }\n  if (request.prepareToInteract) {\n    sendResponse({\n      result: 'success',\n      rect: selenium.prepareToInteract_(request.locator),\n    })\n  }\n  if (request.buildLocators) {\n    try {\n      const element = selenium.browserbot.findElement(request.locator)\n      const locators = locatorBuilders.buildAll(element)\n      sendResponse({ result: 'success', locators })\n    } catch (e) {\n      sendResponse({ result: e.message })\n    }\n  }\n  if (request.resolveLocator) {\n    try {\n      const element = selenium.browserbot.findElement(request.locator)\n      const locator = locatorBuilders\n        .buildAll(element)\n        .find(([loc, strat]) => /^xpath/.test(strat))[0] //eslint-disable-line no-unused-vars\n      sendResponse({ result: 'success', locator })\n    } catch (e) {\n      sendResponse({ result: e.message })\n    }\n  }\n  if (request.selectMode) {\n    sendResponse(true)\n    if (request.selecting && request.element) {\n      targetSelector = new TargetSelector(\n        function(element, win) {\n          if (element && win) {\n            const target = locatorBuilders.buildAll(element)\n            locatorBuilders.detach()\n            if (target != null && target instanceof Array) {\n              if (target) {\n                //self.editor.treeView.updateCurrentCommand('targetCandidates', target);\n                browser.runtime.sendMessage({\n                  selectTarget: true,\n                  target: target,\n                  selectNext: request.selectNext,\n                })\n              }\n            }\n          }\n          targetSelector = null\n        },\n        function() {\n          browser.runtime.sendMessage({\n            cancelSelectTarget: true,\n          })\n        }\n      )\n    } else if (request.selecting && request.region) {\n      editRegion(request.rect, target => {\n        if (target) {\n          browser.runtime.sendMessage({\n            selectTarget: true,\n            target: [[target]],\n            selectNext: request.selectNext,\n          })\n        } else {\n          browser.runtime.sendMessage({\n            cancelSelectTarget: true,\n            selectNext: request.selectNext,\n          })\n        }\n      })\n    } else {\n      if (targetSelector) {\n        targetSelector.cleanup()\n        targetSelector = null\n        return\n      } else {\n        removeRegion()\n        return\n      }\n    }\n  }\n}\n\n// show element\nfunction startShowElement(message) {\n  if (message.showElement) {\n    try {\n      const result = selenium['doShowElement'](message.targetValue)\n      return Promise.resolve({ result: result })\n    } catch (e) {\n      // If we didn't find the element, it means that another frame might have found it,\n      // so we don't resolve the promise. If no frame finds it, then the promise will\n      // get rejected.\n    }\n  }\n}\n\nif (!window._listener) {\n  window._listener = doCommands\n  browser.runtime.onMessage.addListener(startShowElement)\n  browser.runtime.onMessage.addListener(doCommands)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content/commands-api.js","import compute from 'compute-scroll-into-view';\n\nfunction isOptionsObject(options) {\n  return options === Object(options) && Object.keys(options).length !== 0;\n}\n\nfunction defaultBehavior(actions, behavior) {\n  if (behavior === void 0) {\n    behavior = 'auto';\n  }\n\n  var canSmoothScroll = 'scrollBehavior' in document.body.style;\n  actions.forEach(function (_ref) {\n    var el = _ref.el,\n        top = _ref.top,\n        left = _ref.left;\n\n    if (el.scroll && canSmoothScroll) {\n      el.scroll({\n        top: top,\n        left: left,\n        behavior: behavior\n      });\n    } else {\n      el.scrollTop = top;\n      el.scrollLeft = left;\n    }\n  });\n}\n\nfunction getOptions(options) {\n  if (options === false) {\n    return {\n      block: 'end',\n      inline: 'nearest'\n    };\n  }\n\n  if (isOptionsObject(options)) {\n    return options;\n  }\n\n  return {\n    block: 'start',\n    inline: 'nearest'\n  };\n}\n\nfunction scrollIntoView(target, options) {\n  var targetIsDetached = !target.ownerDocument.documentElement.contains(target);\n\n  if (isOptionsObject(options) && typeof options.behavior === 'function') {\n    return options.behavior(targetIsDetached ? [] : compute(target, options));\n  }\n\n  if (targetIsDetached) {\n    return;\n  }\n\n  var computeOptions = getOptions(options);\n  return defaultBehavior(compute(target, computeOptions), computeOptions.behavior);\n}\n\nexport default scrollIntoView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/toddtarsi/Code/selenium-ide/node_modules/scroll-into-view-if-needed/es/index.js\n// module id = 174\n// module chunks = 1 2","function isElement(el) {\n  return el != null && typeof el === 'object' && el.nodeType === 1;\n}\n\nfunction canOverflow(overflow, skipOverflowHiddenElements) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false;\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip';\n}\n\nfunction isScrollable(el, skipOverflowHiddenElements) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    var style = getComputedStyle(el, null);\n    return canOverflow(style.overflowY, skipOverflowHiddenElements) || canOverflow(style.overflowX, skipOverflowHiddenElements);\n  }\n\n  return false;\n}\n\nfunction alignNearest(scrollingEdgeStart, scrollingEdgeEnd, scrollingSize, scrollingBorderStart, scrollingBorderEnd, elementEdgeStart, elementEdgeEnd, elementSize) {\n  if (elementEdgeStart < scrollingEdgeStart && elementEdgeEnd > scrollingEdgeEnd || elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd) {\n    return 0;\n  }\n\n  if (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize || elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart;\n  }\n\n  if (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize || elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd;\n  }\n\n  return 0;\n}\n\nexport default (function (target, options) {\n  var scrollMode = options.scrollMode,\n      block = options.block,\n      inline = options.inline,\n      boundary = options.boundary,\n      skipOverflowHiddenElements = options.skipOverflowHiddenElements;\n  var checkBoundary = typeof boundary === 'function' ? boundary : function (node) {\n    return node !== boundary;\n  };\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target');\n  }\n\n  var scrollingElement = document.scrollingElement || document.documentElement;\n  var frames = [];\n  var cursor = target;\n\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    cursor = cursor.parentNode;\n\n    if (cursor === scrollingElement) {\n      frames.push(cursor);\n      break;\n    }\n\n    if (cursor === document.body && isScrollable(cursor) && !isScrollable(document.documentElement)) {\n      continue;\n    }\n\n    if (isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor);\n    }\n  }\n\n  var viewportWidth = window.visualViewport ? visualViewport.width : innerWidth;\n  var viewportHeight = window.visualViewport ? visualViewport.height : innerHeight;\n  var viewportX = window.scrollX || pageXOffset;\n  var viewportY = window.scrollY || pageYOffset;\n\n  var _target$getBoundingCl = target.getBoundingClientRect(),\n      targetHeight = _target$getBoundingCl.height,\n      targetWidth = _target$getBoundingCl.width,\n      targetTop = _target$getBoundingCl.top,\n      targetRight = _target$getBoundingCl.right,\n      targetBottom = _target$getBoundingCl.bottom,\n      targetLeft = _target$getBoundingCl.left;\n\n  var targetBlock = block === 'start' || block === 'nearest' ? targetTop : block === 'end' ? targetBottom : targetTop + targetHeight / 2;\n  var targetInline = inline === 'center' ? targetLeft + targetWidth / 2 : inline === 'end' ? targetRight : targetLeft;\n  var computations = [];\n\n  for (var index = 0; index < frames.length; index++) {\n    var frame = frames[index];\n\n    var _frame$getBoundingCli = frame.getBoundingClientRect(),\n        _height = _frame$getBoundingCli.height,\n        _width = _frame$getBoundingCli.width,\n        _top = _frame$getBoundingCli.top,\n        right = _frame$getBoundingCli.right,\n        bottom = _frame$getBoundingCli.bottom,\n        _left = _frame$getBoundingCli.left;\n\n    if (scrollMode === 'if-needed' && targetTop >= 0 && targetLeft >= 0 && targetBottom <= viewportHeight && targetRight <= viewportWidth && targetTop >= _top && targetBottom <= bottom && targetLeft >= _left && targetRight <= right) {\n      return computations;\n    }\n\n    var frameStyle = getComputedStyle(frame);\n    var borderLeft = parseInt(frameStyle.borderLeftWidth, 10);\n    var borderTop = parseInt(frameStyle.borderTopWidth, 10);\n    var borderRight = parseInt(frameStyle.borderRightWidth, 10);\n    var borderBottom = parseInt(frameStyle.borderBottomWidth, 10);\n    var blockScroll = 0;\n    var inlineScroll = 0;\n    var scrollbarWidth = 'offsetWidth' in frame ? frame.offsetWidth - frame.clientWidth - borderLeft - borderRight : 0;\n    var scrollbarHeight = 'offsetHeight' in frame ? frame.offsetHeight - frame.clientHeight - borderTop - borderBottom : 0;\n\n    if (scrollingElement === frame) {\n      if (block === 'start') {\n        blockScroll = targetBlock;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(viewportY, viewportY + viewportHeight, viewportHeight, borderTop, borderBottom, viewportY + targetBlock, viewportY + targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - viewportHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth;\n      } else {\n        inlineScroll = alignNearest(viewportX, viewportX + viewportWidth, viewportWidth, borderLeft, borderRight, viewportX + targetInline, viewportX + targetInline + targetWidth, targetWidth);\n      }\n\n      blockScroll = Math.max(0, blockScroll + viewportY);\n      inlineScroll = Math.max(0, inlineScroll + viewportX);\n    } else {\n      if (block === 'start') {\n        blockScroll = targetBlock - _top - borderTop;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(_top, bottom, _height, borderTop, borderBottom + scrollbarHeight, targetBlock, targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - (_top + _height / 2) + scrollbarHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - _left - borderLeft;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (_left + _width / 2) + scrollbarWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth;\n      } else {\n        inlineScroll = alignNearest(_left, right, _width, borderLeft, borderRight + scrollbarWidth, targetInline, targetInline + targetWidth, targetWidth);\n      }\n\n      var scrollLeft = frame.scrollLeft,\n          scrollTop = frame.scrollTop;\n      blockScroll = Math.max(0, Math.min(scrollTop + blockScroll, frame.scrollHeight - _height + scrollbarHeight));\n      inlineScroll = Math.max(0, Math.min(scrollLeft + inlineScroll, frame.scrollWidth - _width + scrollbarWidth));\n      targetBlock += scrollTop - blockScroll;\n      targetInline += scrollLeft - inlineScroll;\n    }\n\n    computations.push({\n      el: frame,\n      top: blockScroll,\n      left: inlineScroll\n    });\n  }\n\n  return computations;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/toddtarsi/Code/selenium-ide/node_modules/compute-scroll-into-view/es/index.js\n// module id = 175\n// module chunks = 1 2","/*\n * Copyright 2017 SideeX committers\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\n// change HTML entities to sign\nexport function unescapeHtml(str) {\n  return str\n    .replace(/&amp;/gi, '&')\n    .replace(/&quot;/gi, '\"')\n    .replace(/&lt;/gi, '<')\n    .replace(/&gt;/gi, '>')\n    .replace(/&#39;/gi, \"'\")\n}\n\nfunction escapeAttr(str) {\n  let spaceS = 0\n  let spaceE = -1\n  let tempStr = str\n  let tempAttr = ''\n  let tempValue = ''\n  let processedTag = ''\n  let flag = false\n  let finishedProcessing = false\n\n  do {\n    spaceS = str.indexOf(' ')\n    spaceE = str.indexOf(' ', spaceS + 1)\n\n    if (spaceE >= 0) {\n      while (str.charAt(spaceE - 1) != \"'\" && str.charAt(spaceE - 1) != '\"') {\n        spaceE = str.indexOf(' ', spaceE + 1)\n        if (spaceE < 0) break\n      }\n    }\n\n    //if there is space, then split string\n    if (spaceS >= 0 && spaceE >= 0) {\n      tempAttr = str.substring(spaceS + 1, spaceE)\n      tempStr = str.substring(0, spaceS + 1)\n      str = str.substring(spaceE)\n    } else if (spaceS >= 0 && spaceE < 0) {\n      tempAttr = str.substring(spaceS + 1, str.length - 1)\n      tempStr = str.substring(0, spaceS + 1)\n      str = ''\n    } else {\n      //flag is check that has string been processed\n      if (flag) processedTag += '>'\n      else processedTag = str\n      finishedProcessing = true\n      break\n    }\n\n    flag = true\n    let equal = tempAttr.indexOf('=')\n\n    if (tempAttr.charAt(equal + 1) == \"'\") {\n      //divide the single quote\n      if (tempAttr.indexOf(\"'\") != -1) {\n        let quotS = tempAttr.indexOf(\"'\")\n        let quotE = tempAttr.lastIndexOf(\"'\")\n        tempValue = tempAttr.substring(quotS + 1, quotE)\n        tempAttr = tempAttr.substring(0, quotS + 1)\n        tempValue = replaceChar(tempValue)\n        tempAttr += tempValue + \"'\"\n      }\n    }\n    if (tempAttr.charAt(equal + 1) == '\"') {\n      //divide the double quote\n      if (tempAttr.indexOf('\"') != -1) {\n        let dquotS = tempAttr.indexOf('\"')\n        let dquotE = tempAttr.lastIndexOf('\"')\n        tempValue = tempAttr.substring(dquotS + 1, dquotE)\n        tempAttr = tempAttr.substring(0, dquotS + 1)\n        tempValue = replaceChar(tempValue)\n        tempAttr += tempValue + '\"'\n      }\n    }\n    //merge the splited string\n    processedTag += tempStr + tempAttr\n  } while (!finishedProcessing)\n\n  return processedTag\n}\n\n//escape the character \"<\".\">\".\"&\".\"'\".'\"'\nfunction doEscape(str) {\n  return str.replace(\n    /[&\"'<>]/g,\n    m =>\n      ({ '&': '&amp;', '\"': '&quot;', \"'\": '&#39;', '<': '&lt;', '>': '&gt;' }[\n        m\n      ])\n  )\n}\n\n//append\nfunction checkType(cutStr, replaceStr, mode) {\n  switch (mode) {\n    case 1:\n      return (cutStr += replaceStr + '&amp;')\n    case 2:\n      return (cutStr += replaceStr + '&quot;')\n    case 3:\n      return (cutStr += replaceStr + '&#39;')\n    case 4:\n      return (cutStr += replaceStr + '&lt;')\n    case 5:\n      return (cutStr += replaceStr + '&gt;')\n    default:\n      return cutStr\n  }\n}\n\n//avoid &amp; to escape &amp;amp;\nfunction replaceChar(str) {\n  //escape the character\n  let pos = -1\n  let cutStr = ''\n  let replaceStr = ''\n  let doFlag = 0\n  let charType\n  let ampersandExists = true\n\n  while (ampersandExists) {\n    pos = str.indexOf('&', pos + 1)\n    charType = 0\n    if (pos != -1) {\n      if (str.substring(pos, pos + 5) == '&amp;') {\n        charType = 1\n        replaceStr = str.substring(0, pos)\n        str = str.substring(pos + 5)\n      } else if (str.substring(pos, pos + 6) == '&quot;') {\n        charType = 2\n        replaceStr = str.substring(0, pos)\n        str = str.substring(pos + 6)\n      } else if (str.substring(pos, pos + 5) == '&#39;') {\n        charType = 3\n        replaceStr = str.substring(0, pos)\n        str = str.substring(pos + 5)\n      } else if (str.substring(pos, pos + 4) == '&lt;') {\n        charType = 4\n        replaceStr = str.substring(0, pos)\n        str = str.substring(pos + 4)\n      } else if (str.substring(pos, pos + 4) == '&gt;') {\n        charType = 5\n        replaceStr = str.substring(0, pos)\n        str = str.substring(pos + 4)\n      }\n\n      if (charType != 0) {\n        pos = -1\n        replaceStr = doEscape(replaceStr)\n        cutStr = checkType(cutStr, replaceStr, charType)\n        doFlag = 1\n      }\n    } else {\n      cutStr += str\n      ampersandExists = false\n    }\n  }\n  if (doFlag == 0) return doEscape(str)\n  else return cutStr\n}\n\n//check the HTML value\nexport function escapeHTML(str) {\n  let smallIndex = str.indexOf('<')\n  let greatIndex = str.indexOf('>')\n  let tempStr = ''\n  let tempTag = ''\n  let processed = ''\n  let tempSmallIndex = 0\n  let tagsExists = true\n\n  while (tagsExists) {\n    //find the less target\n    if (smallIndex >= 0) {\n      //find the greater target\n      if (greatIndex >= 0) {\n        do {\n          //split foreward string\n          smallIndex += tempSmallIndex\n          tempStr = str.substring(0, smallIndex)\n          //split the tags\n          tempTag = str.substring(smallIndex, greatIndex + 1)\n          tempSmallIndex = tempTag.lastIndexOf('<')\n        } while (tempSmallIndex != 0)\n\n        //escape attributes in the tag\n        tempTag = escapeAttr(tempTag)\n\n        str = str.substring(greatIndex + 1)\n        //check if the tag is script\n        // if(tempTag.toLowerCase().indexOf(\"script\")>=0)\n        // tempTag = replaceChar(tempTag);\n\n        //merge them up\n        processed += replaceChar(tempStr) + tempTag\n      } else {\n        replaceChar(str)\n        tagsExists = false\n        break\n      }\n    } else {\n      replaceChar(str)\n      tagsExists = false\n      break\n    }\n    //going to do next tag\n    smallIndex = str.indexOf('<')\n    greatIndex = 0\n    do {\n      //avoid other >\n      greatIndex = str.indexOf('>', greatIndex + 1)\n    } while (greatIndex < smallIndex && greatIndex != -1)\n  }\n\n  if (str != '') processed += replaceChar(str)\n\n  return processed\n}\n\nwindow.unescapeHtml = unescapeHtml\nwindow.escapeHTML = escapeHTML\n\n\n\n// WEBPACK FOOTER //\n// ./content/escape.js","/*\n * Copyright 2011 Software Freedom Conservancy\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\nimport browser from 'webextension-polyfill'\nimport scrollIntoViewIfNeeded from 'scroll-into-view-if-needed'\nimport SeleniumError from './SeleniumError'\nimport { selenium } from './commands-api'\nimport { escapeHTML } from './escape'\nimport BrowserBot, { browserVersion } from './selenium-browserbot'\nimport goog, { bot, core } from './closure-polyfill'\nimport PatternMatcher from './PatternMatcher'\nimport {\n  getTagName,\n  getTimeoutTime,\n  extractExceptionMessage,\n  lowerFirstChar,\n} from './utils'\n\n// TODO: stop navigating this.browserbot.document() ... it breaks encapsulation\n\nexport default class Selenium {\n  /**\n   * Defines an object that runs Selenium commands.\n   *\n   * <h3><a name=\"locators\"></a>Element Locators</h3>\n   * <p>\n   * Element Locators tell Selenium which HTML element a command refers to.\n   * The format of a locator is:</p>\n   * <blockquote>\n   * <em>locatorType</em><strong>=</strong><em>argument</em>\n   * </blockquote>\n   *\n   * <p>\n   * We support the following strategies for locating elements:\n   * </p>\n   *\n   * <ul>\n   * <li><strong>identifier</strong>=<em>id</em>:\n   * Select the element with the specified &#064;id attribute. If no match is\n   * found, select the first element whose &#064;name attribute is <em>id</em>.\n   * (This is normally the default; see below.)</li>\n   * <li><strong>id</strong>=<em>id</em>:\n   * Select the element with the specified &#064;id attribute.</li>\n   *\n   * <li><strong>name</strong>=<em>name</em>:\n   * Select the first element with the specified &#064;name attribute.\n   * <ul class=\"first last simple\">\n   * <li>username</li>\n   * <li>name=username</li>\n   * </ul>\n   *\n   * <p>The name may optionally be followed by one or more <em>element-filters</em>, separated from the name by whitespace.  If the <em>filterType</em> is not specified, <strong>value</strong> is assumed.</p>\n   *\n   * <ul class=\"first last simple\">\n   * <li>name=flavour value=chocolate</li>\n   * </ul>\n   * </li>\n   * <li><strong>dom</strong>=<em>javascriptExpression</em>:\n   *\n   * Find an element by evaluating the specified string.  This allows you to traverse the HTML Document Object\n   * Model using JavaScript.  Note that you must not return a value in this string; simply make it the last expression in the block.\n   * <ul class=\"first last simple\">\n   * <li>dom=document.forms['myForm'].myDropdown</li>\n   * <li>dom=document.images[56]</li>\n   * <li>dom=function foo() { return document.links[1]; }; foo();</li>\n   * </ul>\n   *\n   * </li>\n   *\n   * <li><strong>xpath</strong>=<em>xpathExpression</em>:\n   * Locate an element using an XPath expression.\n   * <ul class=\"first last simple\">\n   * <li>xpath=//img[&#064;alt='The image alt text']</li>\n   * <li>xpath=//table[&#064;id='table1']//tr[4]/td[2]</li>\n   * <li>xpath=//a[contains(&#064;href,'#id1')]</li>\n   * <li>xpath=//a[contains(&#064;href,'#id1')]/&#064;class</li>\n   * <li>xpath=(//table[&#064;class='stylee'])//th[text()='theHeaderText']/../td</li>\n   * <li>xpath=//input[&#064;name='name2' and &#064;value='yes']</li>\n   * <li>xpath=//*[text()=\"right\"]</li>\n   *\n   * </ul>\n   * </li>\n   * <li><strong>link</strong>=<em>textPattern</em>:\n   * Select the link (anchor) element which contains text matching the\n   * specified <em>pattern</em>.\n   * <ul class=\"first last simple\">\n   * <li>link=The link text</li>\n   * </ul>\n   *\n   * </li>\n   *\n   * <li><strong>css</strong>=<em>cssSelectorSyntax</em>:\n   * Select the element using css selectors. Please refer to <a href=\"http://www.w3.org/TR/REC-CSS2/selector.html\">CSS2 selectors</a>, <a href=\"http://www.w3.org/TR/2001/CR-css3-selectors-20011113/\">CSS3 selectors</a> for more information. You can also check the TestCssLocators test in the selenium test suite for an example of usage, which is included in the downloaded selenium core package.\n   * <ul class=\"first last simple\">\n   * <li>css=a[href=\"#id3\"]</li>\n   * <li>css=span#firstChild + span</li>\n   * </ul>\n   * <p>Currently the css selector locator supports all css1, css2 and css3 selectors except namespace in css3, some pseudo classes(:nth-of-type, :nth-last-of-type, :first-of-type, :last-of-type, :only-of-type, :visited, :hover, :active, :focus, :indeterminate) and pseudo elements(::first-line, ::first-letter, ::selection, ::before, ::after). </p>\n   * </li>\n   *\n   * <li><strong>ui</strong>=<em>uiSpecifierString</em>:\n   * Locate an element by resolving the UI specifier string to another locator, and evaluating it. See the <a href=\"http://svn.openqa.org/fisheye/browse/~raw,r=trunk/selenium/trunk/src/main/resources/core/scripts/ui-doc.html\">Selenium UI-Element Reference</a> for more details.\n   * <ul class=\"first last simple\">\n   * <li>ui=loginPages::loginButton()</li>\n   * <li>ui=settingsPages::toggle(label=Hide Email)</li>\n   * <li>ui=forumPages::postBody(index=2)//a[2]</li>\n   * </ul>\n   * </li>\n   *\n   * </ul>\n   *\n   * <p>\n   * Without an explicit locator prefix, Selenium uses the following default\n   * strategies:\n   * </p>\n   *\n   * <ul class=\"simple\">\n   * <li><strong>dom</strong>, for locators starting with &quot;document.&quot;</li>\n   * <li><strong>xpath</strong>, for locators starting with &quot;//&quot;</li>\n   * <li><strong>identifier</strong>, otherwise</li>\n   * </ul>\n   *\n   * <h3><a name=\"element-filters\">Element Filters</a></h3>\n   * <blockquote>\n   * <p>Element filters can be used with a locator to refine a list of candidate elements.  They are currently used only in the 'name' element-locator.</p>\n   * <p>Filters look much like locators, ie.</p>\n   * <blockquote>\n   * <em>filterType</em><strong>=</strong><em>argument</em></blockquote>\n   *\n   * <p>Supported element-filters are:</p>\n   * <p><strong>value=</strong><em>valuePattern</em></p>\n   * <blockquote>\n   * Matches elements based on their values.  This is particularly useful for refining a list of similarly-named toggle-buttons.</blockquote>\n   * <p><strong>index=</strong><em>index</em></p>\n   * <blockquote>\n   * Selects a single element based on its position in the list (offset from zero).</blockquote>\n   * </blockquote>\n   *\n   * <h3><a name=\"patterns\"></a>String-match Patterns</h3>\n   *\n   * <p>\n   * Various Pattern syntaxes are available for matching string values:\n   * </p>\n   * <ul>\n   * <li><strong>glob:</strong><em>pattern</em>:\n   * Match a string against a \"glob\" (aka \"wildmat\") pattern. \"Glob\" is a\n   * kind of limited regular-expression syntax typically used in command-line\n   * shells. In a glob pattern, \"*\" represents any sequence of characters, and \"?\"\n   * represents any single character. Glob patterns match against the entire\n   * string.</li>\n   * <li><strong>regexp:</strong><em>regexp</em>:\n   * Match a string using a regular-expression. The full power of JavaScript\n   * regular-expressions is available.</li>\n   * <li><strong>regexpi:</strong><em>regexpi</em>:\n   * Match a string using a case-insensitive regular-expression.</li>\n   * <li><strong>exact:</strong><em>string</em>:\n   *\n   * Match a string exactly, verbatim, without any of that fancy wildcard\n   * stuff.</li>\n   * </ul>\n   * <p>\n   * If no pattern prefix is specified, Selenium assumes that it's a \"glob\"\n   * pattern.\n   * </p>\n   * <p>\n   * For commands that return multiple values (such as verifySelectOptions),\n   * the string being matched is a comma-separated list of the return values,\n   * where both commas and backslashes in the values are backslash-escaped.\n   * When providing a pattern, the optional matching syntax (i.e. glob,\n   * regexp, etc.) is specified once, as usual, at the beginning of the\n   * pattern.\n   * </p>\n   */\n  constructor(browserbot) {\n    this.browserbot = browserbot\n    this.optionLocatorFactory = new OptionLocatorFactory()\n    // DGF for backwards compatibility\n    this.page = function() {\n      return browserbot\n    }\n    this.defaultTimeout = Selenium.DEFAULT_TIMEOUT\n    this.mouseSpeed = Selenium.DEFAULT_MOUSE_SPEED\n  }\n}\n\nSelenium.DEFAULT_TIMEOUT = 30 * 1000\nSelenium.DEFAULT_MOUSE_SPEED = 10\nSelenium.RIGHT_MOUSE_CLICK = 2\n\nSelenium.decorateFunctionWithTimeout = function(f, timeout, callback) {\n  if (f == null) {\n    return null\n  }\n\n  let timeoutTime = getTimeoutTime(timeout)\n\n  return function() {\n    if (new Date().getTime() > timeoutTime) {\n      if (callback != null) {\n        callback()\n      }\n      throw new SeleniumError('Timed out after ' + timeout + 'ms')\n    }\n    return f()\n  }\n}\n\nSelenium.createForWindow = function(window, proxyInjectionMode) {\n  if (!window.location) {\n    throw 'error: not a window!'\n  }\n  return Selenium(BrowserBot.createForWindow(window, proxyInjectionMode))\n}\n\nSelenium.prototype.reset = function() {\n  this.defaultTimeout = Selenium.DEFAULT_TIMEOUT\n  // todo: this.browserbot.reset()\n  this.browserbot.selectWindow('null')\n  this.browserbot.resetPopups()\n}\n\nSelenium.prototype.eval = function(\n  script,\n  argv = [],\n  scoped = true,\n  isExpression = false\n) {\n  // we are still stringifying here, but we are not supporting passing HTMLElements anyway :)\n  // Single quotes are important! JSON.stringifies uses double quotes, to avoid syntax error we use single quotes!!\n  if (isExpression) {\n    return window.eval(\n      scoped\n        ? `((...arguments) => (${script}))(...JSON.parse('${JSON.stringify(\n            argv\n          )}'))`\n        : script\n    )\n  } else {\n    return window.eval(\n      scoped\n        ? `((...arguments) => {${script}})(...JSON.parse('${JSON.stringify(\n            argv\n          )}'))`\n        : script\n    )\n  }\n}\n\nSelenium.prototype.doEvaluateConditional = function(script) {\n  return !!this.eval(script.script, script.argv, true, true)\n}\n\nSelenium.prototype.doVerifyChecked = function(locator) {\n  let element = this.browserbot.findElement(locator)\n  if (element.type !== 'checkbox' && element.type !== 'radio') {\n    throw new Error(\n      `Element with locator ${locator} is not a checkbox nor a radio button`\n    )\n  } else if (!element.checked) {\n    throw new Error(`Element with locator ${locator} is not checked`)\n  }\n}\n\nSelenium.prototype.doVerifyNotChecked = function(locator) {\n  let element = this.browserbot.findElement(locator)\n  if (element.type !== 'checkbox' && element.type !== 'radio') {\n    throw new Error(\n      `Element with locator ${locator} is not a checkbox nor a radio button`\n    )\n  } else if (element.checked) {\n    throw new Error(`Element with locator ${locator} is checked`)\n  }\n}\n\nSelenium.prototype.doVerifyEditable = function(locator) {\n  if (!this.isEditable(locator)) {\n    throw new Error(`Element with locator ${locator} is not editable`)\n  }\n}\n\nSelenium.prototype.doVerifyNotEditable = function(locator) {\n  if (this.isEditable(locator)) {\n    throw new Error(`Element with locator ${locator} is editable`)\n  }\n}\n\nSelenium.prototype.doVerifySelectedValue = function(locator, value) {\n  let element = this.browserbot.findElement(locator)\n  if (element.type !== 'select-one') {\n    throw new Error(`Element with locator ${locator} is not a select`)\n  } else if (element.value !== value) {\n    throw new Error(\n      \"Actual value '\" + element.value + \"' did not match '\" + value + \"'\"\n    )\n  }\n}\n\nSelenium.prototype.doVerifyNotSelectedValue = function(locator, value) {\n  let element = this.browserbot.findElement(locator)\n  if (element.type !== 'select-one') {\n    throw new Error(`Element with locator ${locator} is not a select`)\n  } else if (element.value === value) {\n    throw new Error(\"Actual value '\" + element.value + \"' did match\")\n  }\n}\n\nSelenium.prototype.doVerifyText = function(locator, value) {\n  this.doAssertText(locator, value)\n}\n\nSelenium.prototype.doVerifyNotText = function(locator, value) {\n  this.doAssertNotText(locator, value)\n}\n\nSelenium.prototype.doVerifyValue = function(locator, value) {\n  let element = this.browserbot.findElement(locator)\n  if (element.value !== value) {\n    throw new Error(\n      \"Actual value '\" + element.value + \"' did not match '\" + value + \"'\"\n    )\n  }\n}\n\nSelenium.prototype.doVerifyTitle = function(value) {\n  if (goog.string.normalizeSpaces(this.getTitle()) !== value) {\n    throw new Error(\n      \"Actual value '\" +\n        goog.string.normalizeSpaces(this.getTitle()) +\n        \"' did not match '\" +\n        value +\n        \"'\"\n    )\n  }\n}\n\nSelenium.prototype.doVerifyElementPresent = function(locator) {\n  try {\n    this.browserbot.findElement(locator)\n  } catch (error) {\n    if (error.message.match(/Element[\\s\\S]*?not found/)) {\n      throw new Error(`Element with locator ${locator} could not be found`)\n    } else {\n      throw error\n    }\n  }\n}\n\nSelenium.prototype.doVerifyElementNotPresent = function(locator) {\n  try {\n    this.browserbot.findElement(locator)\n    throw new Error(`Element with locator ${locator} was found`)\n  } catch (error) {\n    if (!error.message.match(/Element[\\s\\S]*?not found/)) {\n      throw error\n    }\n  }\n}\n\nSelenium.prototype.doVerify = function(variableName, expected) {\n  return this.doAssert(variableName, expected)\n}\n\nSelenium.prototype.doAssert = function(variableName, expected) {\n  return new Promise((res, rej) => {\n    browser.runtime\n      .sendMessage({\n        getVar: true,\n        variable: variableName,\n      })\n      .then(actual => {\n        if (`${actual}` != expected) {\n          return rej(\n            \"Actual value '\" + actual + \"' did not match '\" + expected + \"'\"\n          )\n        }\n        return res()\n      })\n  })\n}\n\nSelenium.prototype.doAssertChecked = function(locator) {\n  let element = this.browserbot.findElement(locator)\n  if (element.type !== 'checkbox' && element.type !== 'radio') {\n    throw new Error(\n      `Element with locator ${locator} is not a checkbox nor a radio button`\n    )\n  } else if (!element.checked) {\n    throw new Error(`Element with locator ${locator} is not checked`)\n  }\n}\n\nSelenium.prototype.doAssertNotChecked = function(locator) {\n  let element = this.browserbot.findElement(locator)\n  if (element.type !== 'checkbox' && element.type !== 'radio') {\n    throw new Error(\n      `Element with locator ${locator} is not a checkbox nor a radio button`\n    )\n  } else if (element.checked) {\n    throw new Error(`Element with locator ${locator} is checked`)\n  }\n}\n\nSelenium.prototype.doAssertEditable = function(locator) {\n  if (!this.isEditable(locator)) {\n    throw new Error(`Element with locator ${locator} is not editable`)\n  }\n}\n\nSelenium.prototype.doAssertNotEditable = function(locator) {\n  if (this.isEditable(locator)) {\n    throw new Error(`Element with locator ${locator} is editable`)\n  }\n}\n\nSelenium.prototype.doAssertSelectedValue = function(locator, value) {\n  let element = this.browserbot.findElement(locator)\n  if (element.type !== 'select-one') {\n    throw new Error(`Element with locator ${locator} is not a select`)\n  } else if (element.value !== value) {\n    throw new Error(\n      \"Actual value '\" + element.value + \"' did not match '\" + value + \"'\"\n    )\n  }\n}\n\nSelenium.prototype.doVerifySelectedLabel = function(selectLocator, value) {\n  let selectedLabel = this.findSelectedOptionProperty(selectLocator, 'text')\n  if (selectedLabel !== value) {\n    throw new Error(\n      \"Actual label '\" + selectedLabel + \"' did not match '\" + value + \"'\"\n    )\n  }\n}\n\nSelenium.prototype.doAssertSelectedLabel = function(selectLocator, value) {\n  let selectedLabel = this.findSelectedOptionProperty(selectLocator, 'text')\n  if (selectedLabel !== value) {\n    throw new Error(\n      \"Actual label '\" + selectedLabel + \"' did not match '\" + value + \"'\"\n    )\n  }\n}\n\nSelenium.prototype.doAssertNotSelectedValue = function(locator, value) {\n  let element = this.browserbot.findElement(locator)\n  if (element.type !== 'select-one') {\n    throw new Error(`Element with locator ${locator} is not a select`)\n  } else if (element.value === value) {\n    throw new Error(\"Actual value '\" + element.value + \"' did match\")\n  }\n}\n\nSelenium.prototype.findElementVisible = function(locator) {\n  const element = this.browserbot.findElement(locator)\n  if (!bot.dom.isShown(element))\n    throw new Error(`Element ${locator} not visible`)\n  return element\n}\n\nSelenium.prototype.doAssertText = function(locator, value) {\n  const element = this.findElementVisible(locator)\n  const visibleText = bot.dom.getVisibleText(element).trim()\n  if (visibleText !== value) {\n    throw new Error(`Actual value \"${visibleText}\" did not match \"${value}\"`)\n  }\n}\n\nSelenium.prototype.doAssertNotText = function(locator, value) {\n  const element = this.findElementVisible(locator)\n  const visibleText = bot.dom.getVisibleText(element).trim()\n  if (visibleText === value) {\n    throw new Error(`Actual value \"${visibleText}\" did match \"${value}\"`)\n  }\n}\n\nSelenium.prototype.doAssertValue = function(locator, value) {\n  let element = this.browserbot.findElement(locator)\n  if (element.value !== value) {\n    throw new Error(\n      \"Actual value '\" + element.value + \"' did not match '\" + value + \"'\"\n    )\n  }\n}\n\nSelenium.prototype.doAssertTitle = function(value) {\n  if (goog.string.normalizeSpaces(this.getTitle()) !== value) {\n    throw new Error(\n      \"Actual value '\" +\n        goog.string.normalizeSpaces(this.getTitle()) +\n        \"' did not match '\" +\n        value +\n        \"'\"\n    )\n  }\n}\n\nSelenium.prototype.doAssertElementPresent = function(locator) {\n  try {\n    this.browserbot.findElement(locator)\n  } catch (error) {\n    if (error.message.match(/Element[\\s\\S]*?not found/)) {\n      throw new Error(`Element with locator ${locator} could not be found`)\n    } else {\n      throw error\n    }\n  }\n}\n\nSelenium.prototype.doAssertElementNotPresent = function(locator) {\n  try {\n    this.browserbot.findElement(locator)\n    throw new Error(`Element with locator ${locator} was found`)\n  } catch (error) {\n    if (!error.message.match(/Element[\\s\\S]*?not found/)) {\n      throw error\n    }\n  }\n}\n\nfunction throwIfNoVarNameProvided(varName) {\n  if (!varName) {\n    throw new Error('No variable name provided.')\n  }\n}\n\nSelenium.prototype.doStore = function(value, varName) {\n  throwIfNoVarNameProvided(varName)\n  return browser.runtime.sendMessage({ storeStr: value, storeVar: varName })\n}\n\nSelenium.prototype.doStoreEval = function() {\n  throw new Error('store eval is obsolete please migrate to execute script')\n}\n\nSelenium.prototype.doStoreJson = function(json, varName) {\n  throwIfNoVarNameProvided(varName)\n  const result = JSON.parse(json)\n  return browser.runtime.sendMessage({ storeStr: result, storeVar: varName })\n}\n\nSelenium.prototype.doStoreText = function(locator, varName) {\n  throwIfNoVarNameProvided(varName)\n  let text\n  try {\n    // Try to get the text if the element is visible\n    const element = this.findElementVisible(locator)\n    text = bot.dom.getVisibleText(element).trim()\n  } catch (e) {\n    // element is not visible, but it may be due to the fact that it has no text\n    const element = this.browserbot.findElement(locator)\n    if (element.innerHTML === '') {\n      // element is empty then return empty string\n      text = ''\n    } else {\n      // element has content this is indeed invisible\n      throw e\n    }\n  }\n  return browser.runtime.sendMessage({\n    storeStr: text,\n    storeVar: varName,\n  })\n}\n\nSelenium.prototype.doStoreValue = function(locator, varName) {\n  throwIfNoVarNameProvided(varName)\n  let element = this.browserbot.findElement(locator)\n  return browser.runtime.sendMessage({\n    storeStr: element.value.trim(),\n    storeVar: varName,\n  })\n}\n\nSelenium.prototype.doStoreTitle = function(value, varName) {\n  throwIfNoVarNameProvided(varName)\n  let doc = selenium.browserbot.getDocument()\n  return browser.runtime.sendMessage({\n    storeStr: value || doc.title,\n    storeVar: varName,\n  })\n}\n\nSelenium.prototype.doStoreXpathCount = function(xpath, varName) {\n  throwIfNoVarNameProvided(varName)\n  let count = this.browserbot.evaluateXPathCount(\n    xpath,\n    this.browserbot.getDocument()\n  )\n  return browser.runtime.sendMessage({\n    storeStr: `${count}` || '0',\n    storeVar: varName,\n  })\n}\n\nSelenium.prototype.doStoreAttribute = function(locator, varName) {\n  throwIfNoVarNameProvided(varName)\n  let attributeValue = this.browserbot.findAttribute(locator)\n  return browser.runtime.sendMessage({\n    storeStr: attributeValue,\n    storeVar: varName,\n  })\n}\n\nfunction waitUntil(condition, target, timeout, failureMessage) {\n  if (!timeout) {\n    throw new Error('Timeout not specified.')\n  }\n  return new Promise(function(resolve, reject) {\n    let count = 0\n    let retryInterval = 100\n    let result\n    let interval = setInterval(function() {\n      if (count > timeout) {\n        clearInterval(interval)\n        reject(failureMessage)\n      }\n      try {\n        result = condition(target)\n      } catch (error) {\n        clearInterval(interval)\n        reject(error.message)\n      }\n      if (!result) {\n        count += retryInterval\n      } else if (result) {\n        clearInterval(interval)\n        resolve()\n      }\n    }, retryInterval)\n  })\n}\n\nfunction waitUntilText(condition, target, text, timeout, failureMessage) {\n  if (!timeout) {\n    throw new Error('Timeout not specified.')\n  }\n  return new Promise(function(resolve, reject) {\n    let count = 0\n    let retryInterval = 100\n    let result\n    let interval = setInterval(function() {\n      if (count > timeout) {\n        clearInterval(interval)\n        reject(failureMessage)\n      }\n      try {\n        result = condition(target, text)\n      } catch (error) {\n        clearInterval(interval)\n        reject(error.message)\n      }\n      if (!result) {\n        count += retryInterval\n      } else if (result) {\n        clearInterval(interval)\n        resolve()\n      }\n    }, retryInterval)\n  })\n}\n\nSelenium.prototype.doWaitForElementPresent = function(locator, timeout) {\n  return waitUntil(\n    this.isElementPresent.bind(this),\n    locator,\n    timeout,\n    'Unable to find the target element within the timeout specified.'\n  )\n}\n\nSelenium.prototype.doWaitForElementNotPresent = function(locator, timeout) {\n  return waitUntil(\n    isElementNotPresent.bind(this),\n    locator,\n    timeout,\n    'Element still present on the page within the timeout specified.'\n  )\n}\n\nSelenium.prototype.doWaitForElementVisible = function(locator, timeout) {\n  return waitUntil(\n    isDisplayed.bind(this),\n    locator,\n    timeout,\n    'Element not visible on the page within the timeout specified.'\n  )\n}\n\nSelenium.prototype.doWaitForElementNotVisible = function(locator, timeout) {\n  return waitUntil(\n    isNotDisplayed.bind(this),\n    locator,\n    timeout,\n    'Element still visible on the page within the timeout specified.'\n  )\n}\n\nSelenium.prototype.doWaitForElementEditable = function(locator, timeout) {\n  return waitUntil(\n    isEditable.bind(this),\n    locator,\n    timeout,\n    'Element not editable within the timeout specified.'\n  )\n}\n\nSelenium.prototype.doWaitForElementNotEditable = function(locator, timeout) {\n  return waitUntil(\n    isNotEditable.bind(this),\n    locator,\n    timeout,\n    'Element still editable within the timeout specified.'\n  )\n}\n\nSelenium.prototype.doWaitForText = function(locator, text) {\n  return waitUntilText(\n    isText.bind(this),\n    locator,\n    text,\n    this.defaultTimeout,\n    'Element did not have text within the timeout specified.'\n  )\n}\n\n// xian\nSelenium.prototype.doWaitPreparation = function() {\n  // function setNewPageValue(e) {\n  //     window.new_page = true;\n  // };\n  // window.addEventListener(\"beforeunload\", setNewPageValue, false);\n\n  // if (window.XMLHttpRequest) {\n  //     // only override XMLHttpRequest once\n  //     if (!window.origXMLHttpRequest || !window.ajax_obj) {\n  //         // it's new page, so set the new window's XMLHttpRequest, and all of the obj in the ajax_obj\n  //         // are last window's instance, so clear it\n  //         window.ajax_obj = [];\n\n  //         window.origXMLHttpRequest = window.XMLHttpRequest;\n\n  //         window.XMLHttpRequest = function() {\n  //             var xhr = new window.origXMLHttpRequest();\n  //             window.ajax_obj.push(xhr);\n  //             return xhr;\n  //         }\n  //     }\n  // }\n\n  // function setDOMModifiedTime() {\n  //     window.domModifiedTime = Date.now();\n  // }\n  // var _win = window.document.body;\n  // _win.addEventListener(\"DOMNodeInserted\", setDOMModifiedTime, false);\n  // _win.addEventListener(\"DOMNodeInsertedIntoDocument\", setDOMModifiedTime, false);\n  // _win.addEventListener(\"DOMNodeRemoved\", setDOMModifiedTime, false);\n  // _win.addEventListener(\"DOMNodeRemovedFromDocument\", setDOMModifiedTime, false);\n  // _win.addEventListener(\"DOMSubtreeModified\", setDOMModifiedTime, false);\n\n  this.eval(\n    'function setNewPageValue(e) {window.new_page = true;};\\\n                window.addEventListener(\"beforeunload\", setNewPageValue, false);\\\n                if (window.XMLHttpRequest) {if (!window.origXMLHttpRequest || !window.ajax_obj) {\\\n                window.ajax_obj = []; window.origXMLHttpRequest = window.XMLHttpRequest;\\\n                window.XMLHttpRequest = function() { var xhr = new window.origXMLHttpRequest();\\\n                window.ajax_obj.push(xhr); return xhr;}}} function setDOMModifiedTime() {\\\n                window.domModifiedTime = Date.now();}var _win = window.document.body;\\\n                _win.addEventListener(\"DOMNodeInserted\", setDOMModifiedTime, false);\\\n                _win.addEventListener(\"DOMNodeInsertedIntoDocument\", setDOMModifiedTime, false);\\\n                _win.addEventListener(\"DOMNodeRemoved\", setDOMModifiedTime, false);\\\n                _win.addEventListener(\"DOMNodeRemovedFromDocument\", setDOMModifiedTime, false);\\\n                _win.addEventListener(\"DOMSubtreeModified\", setDOMModifiedTime, false);',\n    [],\n    false\n  )\n}\n\nSelenium.prototype.doPrePageWait = function() {\n  window.sideex_new_page = this.eval(\n    '(function() {return window.new_page;}())',\n    [],\n    false\n  )\n}\n\nSelenium.prototype.doPageWait = function() {\n  // if (window.document.readyState == \"complete\") {\n  //     return true;\n  // } else {\n  //     return false;\n  // }\n\n  let expression =\n    'if(window.document.readyState==\"complete\"){return true;}else{return false;}'\n  window.sideex_page_done = this.eval(\n    '(function() {' + expression + '}())',\n    [],\n    false\n  )\n}\n\nSelenium.prototype.doAjaxWait = function() {\n  // // check ajax wait\n  // if (window.ajax_obj) {\n  //     if (window.ajax_obj.length == 0) {\n  //         return true;\n  //     } else {\n  //         for (var index in window.ajax_obj) {\n  //         // if readyState is 1~3, then keep waiting\n  //             if (window.ajax_obj[index].readyState !== 4 &&\n  //                 window.ajax_obj[index].readyState !== undefined &&\n  //                 window.ajax_obj[index].readyState !== 0) {\n  //                     return false;\n  //             }\n  //         }\n  //         return true;\n  //     }\n  // } else {\n  //     if (window.origXMLHttpRequest) {\n  //         window.origXMLHttpRequest = \"\";\n  //     }\n  //     return true;\n  // }\n\n  let expression =\n    'if (window.ajax_obj) { if (window.ajax_obj.length == 0) {return true;} else {\\\n                      for (var index in window.ajax_obj) {\\\n                      if (window.ajax_obj[index].readyState !== 4 &&\\\n                      window.ajax_obj[index].readyState !== undefined &&\\\n                      window.ajax_obj[index].readyState !== 0) {return false;}}return true;}}\\\n                      else {if (window.origXMLHttpRequest) {window.origXMLHttpRequest = \"\";}return true;}'\n  window.sideex_ajax_done = this.eval(\n    '(function() {' + expression + '}())',\n    [],\n    false\n  )\n}\n\nSelenium.prototype.doDomWait = function() {\n  window.sideex_dom_time = this.eval(\n    '(function() {return window.domModifiedTime;}())',\n    [],\n    false\n  )\n}\n\nSelenium.prototype.doClick = function(locator) {\n  /**\n   * Clicks on a link, button, checkbox or radio button. If the click action\n   * causes a new page to load (like a link usually does), call\n   * waitForPageToLoad.\n   *\n   * @param locator an element locator\n   *\n   */\n  let element = this.browserbot.findElement(locator)\n  bot.action.click(element)\n}\n\nSelenium.prototype.doDoubleClick = function(locator) {\n  /**\n   * Double clicks on a link, button, checkbox or radio button. If the double click action\n   * causes a new page to load (like a link usually does), call\n   * waitForPageToLoad.\n   *\n   * @param locator an element locator\n   *\n   */\n  let element = this.browserbot.findElement(locator)\n  bot.action.doubleClick(element)\n}\n\nSelenium.prototype.doContextMenu = function(locator) {\n  /**\n   * Simulates opening the context menu for the specified element (as might happen if the user \"right-clicked\" on the element).\n   *\n   * @param locator an element locator\n   *\n   */\n  let element = this.browserbot.findElement(locator)\n  bot.action.rightClick(element)\n}\n\nSelenium.prototype.doClickAt = function(locator, coordString) {\n  /**\n   * Clicks on a link, button, checkbox or radio button. If the click action\n   * causes a new page to load (like a link usually does), call\n   * waitForPageToLoad.\n   *\n   * @param locator an element locator\n   * @param coordString specifies the x,y position (i.e. - 10,20) of the mouse\n   *      event relative to the element returned by the locator.\n   *\n   */\n  let element = this.browserbot.findElement(locator)\n  let coords = getCoords(element, coordString)\n  bot.action.click(element, coords)\n}\n\nSelenium.prototype.doDoubleClickAt = function(locator, coordString) {\n  /**\n   * Doubleclicks on a link, button, checkbox or radio button. If the action\n   * causes a new page to load (like a link usually does), call\n   * waitForPageToLoad.\n   *\n   * @param locator an element locator\n   * @param coordString specifies the x,y position (i.e. - 10,20) of the mouse\n   *      event relative to the element returned by the locator.\n   *\n   */\n  let element = this.browserbot.findElement(locator)\n  let coords = getCoords(element, coordString)\n  bot.action.doubleClick(element, coords)\n}\n\nSelenium.prototype.doContextMenuAt = function(locator, coordString) {\n  /**\n   * Simulates opening the context menu for the specified element (as might happen if the user \"right-clicked\" on the element).\n   *\n   * @param locator an element locator\n   * @param coordString specifies the x,y position (i.e. - 10,20) of the mouse\n   *      event relative to the element returned by the locator.\n   *\n   */\n  let element = this.browserbot.findElement(locator)\n  let coords = getCoords(element, coordString)\n  bot.action.rightClick(element, coords)\n}\n\nSelenium.prototype.doFocus = function(locator) {\n  /** Move the focus to the specified element; for example, if the element is an input field, move the cursor to that field.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  let element = this.browserbot.findElement(locator)\n  if (element.focus) {\n    element.focus()\n  } else {\n    bot.events.fire(element, bot.events.EventType.FOCUS)\n  }\n}\n\nSelenium.prototype.doShiftKeyDown = function() {\n  /**\n   * Press the shift key and hold it down until doShiftUp() is called or a new page is loaded.\n   *\n   */\n  this.browserbot.shiftKeyDown = true\n  core.events.shiftKeyDown_ = true\n}\n\nSelenium.prototype.doShiftKeyUp = function() {\n  /**\n   * Release the shift key.\n   *\n   */\n  this.browserbot.shiftKeyDown = false\n  core.events.shiftKeyDown_ = false\n}\n\nSelenium.prototype.doMetaKeyDown = function() {\n  /**\n   * Press the meta key and hold it down until doMetaUp() is called or a new page is loaded.\n   *\n   */\n  this.browserbot.metaKeyDown = true\n  core.events.metaKeyDown_ = true\n}\n\nSelenium.prototype.doMetaKeyUp = function() {\n  /**\n   * Release the meta key.\n   *\n   */\n  this.browserbot.metaKeyDown = false\n  core.events.metaKeyDown_ = false\n}\n\nSelenium.prototype.doAltKeyDown = function() {\n  /**\n   * Press the alt key and hold it down until doAltUp() is called or a new page is loaded.\n   *\n   */\n  this.browserbot.altKeyDown = true\n  core.events.altKeyDown_ = true\n}\n\nSelenium.prototype.doAltKeyUp = function() {\n  /**\n   * Release the alt key.\n   *\n   */\n  this.browserbot.altKeyDown = false\n  core.events.altKeyDown_ = false\n}\n\nSelenium.prototype.doControlKeyDown = function() {\n  /**\n   * Press the control key and hold it down until doControlUp() is called or a new page is loaded.\n   *\n   */\n  this.browserbot.controlKeyDown = true\n  core.events.controlKeyDown_ = true\n}\n\nSelenium.prototype.doControlKeyUp = function() {\n  /**\n   * Release the control key.\n   *\n   */\n  this.browserbot.controlKeyDown = false\n  core.events.controlKeyDown_ = false\n}\n\nfunction getClientXY(element, coordString) {\n  // Parse coordString\n  let coords = null\n  let x\n  let y\n  if (coordString) {\n    coords = coordString.split(/,/)\n    x = Number(coords[0])\n    y = Number(coords[1])\n  } else {\n    x = y = 0\n  }\n\n  // Get position of element,\n  // Return 2 item array with clientX and clientY\n  return [\n    Selenium.prototype.getElementPositionLeft(element) + x,\n    Selenium.prototype.getElementPositionTop(element) + y,\n  ]\n}\n\nfunction getCoords(_element, coordString) {\n  // Parse coordString\n  let coords = null\n  let x\n  let y\n  if (coordString) {\n    coords = coordString.split(/,/)\n    x = Number(coords[0])\n    y = Number(coords[1])\n  } else {\n    x = y = 0\n  }\n\n  return new goog.math.Coordinate(x, y)\n}\n\nSelenium.prototype.prepareToInteract_ = function(locator) {\n  let element = this.browserbot.findElement(locator)\n  let rect = element.getBoundingClientRect()\n  bot.action.prepareToInteractWith_(\n    element,\n    new goog.math.Coordinate(rect.width / 2, rect.height / 2)\n  )\n  return element.getBoundingClientRect()\n}\n\nSelenium.prototype.doMouseOver = function(locator) {\n  /**\n   * Simulates a user hovering a mouse over the specified element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n\n  let element = this.browserbot.findElement(locator)\n  let rect = element.getBoundingClientRect()\n  bot.action.moveMouse(\n    element,\n    new goog.math.Coordinate(rect.width / 2, rect.height / 2)\n  )\n}\n\nSelenium.prototype.doMouseOut = function(locator) {\n  /**\n   * Simulates a user moving the mouse pointer away from the specified element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  let element = this.browserbot.findElement(locator)\n  this.browserbot.triggerMouseEvent(element, 'mouseout', true)\n}\n\nSelenium.prototype.doMouseDown = function(locator) {\n  /**\n   * Simulates a user pressing the left mouse button (without releasing it yet) on\n   * the specified element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  let element = this.browserbot.findElement(locator)\n  this.browserbot.triggerMouseEvent(element, 'mousedown', true)\n}\n\nSelenium.prototype.doMouseDownRight = function(locator) {\n  /**\n   * Simulates a user pressing the right mouse button (without releasing it yet) on\n   * the specified element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  let element = this.browserbot.findElement(locator)\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mousedown',\n    true,\n    undefined,\n    undefined,\n    Selenium.RIGHT_MOUSE_CLICK\n  )\n}\n\nSelenium.prototype.doMouseDownAt = function(locator, coordString) {\n  /**\n   * Simulates a user pressing the left mouse button (without releasing it yet) at\n   * the specified location.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @param coordString specifies the x,y position (i.e. - 10,20) of the mouse\n   *      event relative to the element returned by the locator.\n   */\n  let element = this.browserbot.findElement(locator)\n  let clientXY = getClientXY(element, coordString)\n\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mousedown',\n    true,\n    clientXY[0],\n    clientXY[1]\n  )\n}\n\nSelenium.prototype.doMouseDownRightAt = function(locator, coordString) {\n  /**\n   * Simulates a user pressing the right mouse button (without releasing it yet) at\n   * the specified location.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @param coordString specifies the x,y position (i.e. - 10,20) of the mouse\n   *      event relative to the element returned by the locator.\n   */\n  let element = this.browserbot.findElement(locator)\n  let clientXY = getClientXY(element, coordString)\n\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mousedown',\n    true,\n    clientXY[0],\n    clientXY[1],\n    Selenium.RIGHT_MOUSE_CLICK\n  )\n}\n\nSelenium.prototype.doMouseUp = function(locator) {\n  /**\n   * Simulates the event that occurs when the user releases the mouse button (i.e., stops\n   * holding the button down) on the specified element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  let element = this.browserbot.findElement(locator)\n  this.browserbot.triggerMouseEvent(element, 'mouseup', true)\n}\n\nSelenium.prototype.doMouseUpRight = function(locator) {\n  /**\n   * Simulates the event that occurs when the user releases the right mouse button (i.e., stops\n   * holding the button down) on the specified element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  let element = this.browserbot.findElement(locator)\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mouseup',\n    true,\n    undefined,\n    undefined,\n    Selenium.RIGHT_MOUSE_CLICK\n  )\n}\n\nSelenium.prototype.doMouseUpAt = function(locator, coordString) {\n  /**\n   * Simulates the event that occurs when the user releases the mouse button (i.e., stops\n   * holding the button down) at the specified location.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @param coordString specifies the x,y position (i.e. - 10,20) of the mouse\n   *      event relative to the element returned by the locator.\n   */\n  let element = this.browserbot.findElement(locator)\n  let clientXY = getClientXY(element, coordString)\n\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mouseup',\n    true,\n    clientXY[0],\n    clientXY[1]\n  )\n}\n\nSelenium.prototype.doMouseUpRightAt = function(locator, coordString) {\n  /**\n   * Simulates the event that occurs when the user releases the right mouse button (i.e., stops\n   * holding the button down) at the specified location.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @param coordString specifies the x,y position (i.e. - 10,20) of the mouse\n   *      event relative to the element returned by the locator.\n   */\n  let element = this.browserbot.findElement(locator)\n  let clientXY = getClientXY(element, coordString)\n\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mouseup',\n    true,\n    clientXY[0],\n    clientXY[1],\n    Selenium.RIGHT_MOUSE_CLICK\n  )\n}\n\nSelenium.prototype.doMouseMove = function(locator) {\n  /**\n   * Simulates a user pressing the mouse button (without releasing it yet) on\n   * the specified element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  let element = this.browserbot.findElement(locator)\n  this.browserbot.triggerMouseEvent(element, 'mousemove', true)\n}\n\nSelenium.prototype.doMouseMoveAt = function(locator, coordString) {\n  /**\n   * Simulates a user pressing the mouse button (without releasing it yet) on\n   * the specified element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @param coordString specifies the x,y position (i.e. - 10,20) of the mouse\n   *      event relative to the element returned by the locator.\n   */\n\n  let element = this.browserbot.findElement(locator)\n  let clientXY = getClientXY(element, coordString)\n\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mousemove',\n    true,\n    clientXY[0],\n    clientXY[1]\n  )\n}\n\nSelenium.prototype.doType = function(locator, value) {\n  /**\n   * Sets the value of an input field, as though you typed it in.\n   *\n   * <p>Can also be used to set the value of combo boxes, check boxes, etc. In these cases,\n   * value should be the value of the option selected, not the visible text.</p>\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @param value the value to type\n   */\n  if (\n    this.browserbot.controlKeyDown ||\n    this.browserbot.altKeyDown ||\n    this.browserbot.metaKeyDown\n  ) {\n    throw new SeleniumError(\n      'type not supported immediately after call to controlKeyDown() or altKeyDown() or metaKeyDown()'\n    )\n  }\n\n  let element = this.browserbot.findElement(locator)\n\n  core.events.setValue(element, '')\n  const type = element.type\n  if (type === 'number' || type === 'date') {\n    core.events.setValue(element, value)\n  } else {\n    bot.action.type(element, value)\n    if (element.value !== value) {\n      core.events.setValue(element, value)\n    }\n  }\n  bot.events.fire(element, bot.events.EventType.CHANGE)\n}\n\nSelenium.prototype.doSendKeys = function(locator, value) {\n  /**\n   * *Experimental* Simulates keystroke events on the specified element, as though you typed the value key-by-key.\n   *\n   * <p>This simulates a real user typing every character in the specified string; it is also bound by the limitations of a\n   * real user, like not being able to type into a invisible or read only elements. This is useful for dynamic UI widgets\n   * (like auto-completing combo boxes) that require explicit key events.</p>\n   * <p>Unlike the simple \"type\" command, which forces the specified value into the page directly, this command will not\n   * replace the existing content. If you want to replace the existing contents, you need to use the simple \"type\" command to set the value of the\n   * field to empty string to clear the field and then the \"sendKeys\" command to send the keystroke for what you want\n   * to type.</p>\n   * <p>This command is experimental. It may replace the typeKeys command in the future.</p>\n   * <p>For those who are interested in the details, unlike the typeKeys command, which tries to\n   * fire the keyDown, the keyUp and the keyPress events, this command is backed by the atoms from Selenium 2 and provides a\n   * much more robust implementation that will be maintained in the future.</p>\n   *\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @param value the value to type\n   */\n  if (\n    this.browserbot.controlKeyDown ||\n    this.browserbot.altKeyDown ||\n    this.browserbot.metaKeyDown\n  ) {\n    throw new SeleniumError(\n      'type not supported immediately after call to controlKeyDown() or altKeyDown() or metaKeyDown()'\n    )\n  }\n\n  let element = this.browserbot.findElement(locator)\n  let keys = this.replaceKeys(value)\n  bot.action.type(element, keys)\n  bot.events.fire(element, bot.events.EventType.CHANGE)\n}\n\nSelenium.prototype.doSetSpeed = function() {\n  /**\n   * Set execution speed (i.e., set the millisecond length of a delay which will follow each selenium operation).  By default, there is no such delay, i.e.,\n   * the delay is 0 milliseconds.\n   *\n   * @param value the number of milliseconds to pause after operation\n   */\n  throw new SeleniumError(\n    'this operation is only implemented in selenium-rc, and should never result in a request making it across the wire'\n  )\n}\n\nSelenium.prototype.getSpeed = function() {\n  /**\n   * Get execution speed (i.e., get the millisecond length of the delay following each selenium operation).  By default, there is no such delay, i.e.,\n   * the delay is 0 milliseconds.\n   *\n   * See also setSpeed.\n   *\n   * @return string the execution speed in milliseconds.\n   */\n  throw new SeleniumError(\n    'this operation is only implemented in selenium-rc, and should never result in a request making it across the wire'\n  )\n}\n\nSelenium.prototype.findToggleButton = function(locator) {\n  let element = this.browserbot.findElement(locator)\n  if (element.checked == null) {\n    throw new Error('Element ' + locator + ' is not a toggle-button.') // eslint-disable-line no-undef\n  }\n  return element\n}\n\nSelenium.prototype.doCheck = function(locator) {\n  /**\n   * Check a toggle-button (checkbox/radio)\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  this.findToggleButton(locator).checked = true\n}\n\nSelenium.prototype.doUncheck = function(locator) {\n  /**\n   * Uncheck a toggle-button (checkbox/radio)\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   */\n  this.findToggleButton(locator).checked = false\n}\n\nSelenium.prototype.doSelect = function(selectLocator, optionLocator) {\n  /**\n   * Select an option from a drop-down using an option locator.\n   *\n   * <p>\n   * Option locators provide different ways of specifying options of an HTML\n   * Select element (e.g. for selecting a specific option, or for asserting\n   * that the selected option satisfies a specification). There are several\n   * forms of Select Option Locator.\n   * </p>\n   * <ul>\n   * <li><strong>label</strong>=<em>labelPattern</em>:\n   * matches options based on their labels, i.e. the visible text. (This\n   * is the default.)\n   * <ul class=\"first last simple\">\n   * <li>label=regexp:^[Oo]ther</li>\n   * </ul>\n   * </li>\n   * <li><strong>value</strong>=<em>valuePattern</em>:\n   * matches options based on their values.\n   * <ul class=\"first last simple\">\n   * <li>value=other</li>\n   * </ul>\n   *\n   *\n   * </li>\n   * <li><strong>id</strong>=<em>id</em>:\n   *\n   * matches options based on their ids.\n   * <ul class=\"first last simple\">\n   * <li>id=option1</li>\n   * </ul>\n   * </li>\n   * <li><strong>index</strong>=<em>index</em>:\n   * matches an option based on its index (offset from zero).\n   * <ul class=\"first last simple\">\n   *\n   * <li>index=2</li>\n   * </ul>\n   * </li>\n   * </ul>\n   * <p>\n   * If no option locator prefix is provided, the default behaviour is to match on <strong>label</strong>.\n   * </p>\n   *\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @param optionLocator an option locator (a label by default)\n   */\n  let element = this.browserbot.findElement(selectLocator)\n  if (!('options' in element)) {\n    throw new SeleniumError(\n      'Specified element is not a Select (has no options)'\n    )\n  }\n  let locator = this.optionLocatorFactory.fromLocatorString(optionLocator)\n  let option = locator.findOption(element)\n  this.browserbot.selectOption(element, option)\n}\n\nSelenium.prototype.doAddSelection = function(locator, optionLocator) {\n  /**\n   * Add a selection to the set of selected options in a multi-select element using an option locator.\n   *\n   * @see #doSelect for details of option locators\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> identifying a multi-select box\n   * @param optionLocator an option locator (a label by default)\n   */\n  let element = this.browserbot.findElement(locator)\n  if (!('options' in element)) {\n    throw new SeleniumError(\n      'Specified element is not a Select (has no options)'\n    )\n  }\n  let currLocator = this.optionLocatorFactory.fromLocatorString(optionLocator)\n  let option = currLocator.findOption(element)\n  this.browserbot.addSelection(element, option)\n}\n\nSelenium.prototype.doRemoveSelection = function(locator, optionLocator) {\n  /**\n   * Remove a selection from the set of selected options in a multi-select element using an option locator.\n   *\n   * @see #doSelect for details of option locators\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> identifying a multi-select box\n   * @param optionLocator an option locator (a label by default)\n   */\n\n  let element = this.browserbot.findElement(locator)\n  if (!('options' in element)) {\n    throw new SeleniumError(\n      'Specified element is not a Select (has no options)'\n    )\n  }\n  let currLocator = this.optionLocatorFactory.fromLocatorString(optionLocator)\n  let option = currLocator.findOption(element)\n  this.browserbot.removeSelection(element, option)\n}\n\nSelenium.prototype.doRemoveAllSelections = function(locator) {\n  /**\n   * Unselects all of the selected options in a multi-select element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> identifying a multi-select box\n   */\n  let element = this.browserbot.findElement(locator)\n  if (!('options' in element)) {\n    throw new SeleniumError(\n      'Specified element is not a Select (has no options)'\n    )\n  }\n  for (let i = 0; i < element.options.length; i++) {\n    this.browserbot.removeSelection(element, element.options[i])\n  }\n}\n\nSelenium.prototype.doSubmit = function(formLocator) {\n  /**\n   * Submit the specified form. This is particularly useful for forms without\n   * submit buttons, e.g. single-input \"Search\" forms.\n   *\n   * @param formLocator an <a href=\"#locators\">element locator</a> for the form you want to submit\n   */\n  browser.runtime.sendMessage({\n    log: {\n      type: 'warn',\n      message:\n        'submit is deprecated and will be removed from later versions of Selenium IDE, please re-record the step.',\n    },\n  })\n  let form = this.browserbot.findElement(formLocator)\n  return bot.action.submit(form)\n}\n\nSelenium.prototype.makePageLoadCondition = function(timeout) {\n  if (timeout == null) {\n    timeout = this.defaultTimeout\n  }\n  // if the timeout is zero, we won't wait for the page to load before returning\n  if (timeout == 0) {\n    // abort XHR request\n    this._abortXhrRequest()\n    return\n  }\n  return Selenium.decorateFunctionWithTimeout(\n    this._isNewPageLoaded.bind(this),\n    timeout,\n    this._abortXhrRequest.bind(this)\n  )\n}\n\nSelenium.prototype.doOpen = function(url, ignoreResponseCode) {\n  /**\n   * Opens an URL in the test frame. This accepts both relative and absolute\n   * URLs.\n   *\n   * The &quot;open&quot; command waits for the page to load before proceeding,\n   * ie. the &quot;AndWait&quot; suffix is implicit.\n   *\n   * <em>Note</em>: The URL must be on the same domain as the runner HTML\n   * due to security restrictions in the browser (Same Origin Policy). If you\n   * need to open an URL on another domain, use the Selenium Server to start a\n   * new browser session on that domain.\n   *\n   * @param url the URL to open; may be relative or absolute\n   * @param ignoreResponseCode (optional) turn off ajax head request functionality\n   *\n   */\n  if (ignoreResponseCode == null || ignoreResponseCode.length == 0) {\n    this.browserbot.ignoreResponseCode = true\n  } else if (ignoreResponseCode.toLowerCase() == 'true') {\n    this.browserbot.ignoreResponseCode = true\n  } else {\n    this.browserbot.ignoreResponseCode = false\n  }\n  this.browserbot.openLocation(url)\n  if (window['proxyInjectionMode'] == null || !window['proxyInjectionMode']) {\n    return this.makePageLoadCondition()\n  } // in PI mode, just return \"OK\"; the server will waitForLoad\n}\n\nSelenium.prototype.doOpenWindow = function(url, windowID) {\n  /**\n   * Opens a popup window (if a window with that ID isn't already open).\n   * After opening the window, you'll need to select it using the selectWindow\n   * command.\n   *\n   * <p>This command can also be a useful workaround for bug SEL-339.  In some cases, Selenium will be unable to intercept a call to window.open (if the call occurs during or before the \"onLoad\" event, for example).\n   * In those cases, you can force Selenium to notice the open window's name by using the Selenium openWindow command, using\n   * an empty (blank) url, like this: openWindow(\"\", \"myFunnyWindow\").</p>\n   *\n   * @param url the URL to open, which can be blank\n   * @param windowID the JavaScript window ID of the window to select\n   */\n  this.browserbot.openWindow(url, windowID)\n}\n\nSelenium.prototype.doSelectWindow = function(windowID) {\n  /**\n   * Selects a popup window using a window locator; once a popup window has been selected, all\n   * commands go to that window. To select the main window again, use null\n   * as the target.\n   *\n   * <p>\n   *\n   * Window locators provide different ways of specifying the window object:\n   * by title, by internal JavaScript \"name,\" or by JavaScript variable.\n   * </p>\n   * <ul>\n   * <li><strong>title</strong>=<em>My Special Window</em>:\n   * Finds the window using the text that appears in the title bar.  Be careful;\n   * two windows can share the same title.  If that happens, this locator will\n   * just pick one.\n   * </li>\n   * <li><strong>name</strong>=<em>myWindow</em>:\n   * Finds the window using its internal JavaScript \"name\" property.  This is the second\n   * parameter \"windowName\" passed to the JavaScript method window.open(url, windowName, windowFeatures, replaceFlag)\n   * (which Selenium intercepts).\n   * </li>\n   * <li><strong>var</strong>=<em>variableName</em>:\n   * Some pop-up windows are unnamed (anonymous), but are associated with a JavaScript variable name in the current\n   * application window, e.g. \"window.foo = window.open(url);\".  In those cases, you can open the window using\n   * \"var=foo\".\n   * </li>\n   * </ul>\n   * <p>\n   * If no window locator prefix is provided, we'll try to guess what you mean like this:</p>\n   * <p>1.) if windowID is null, (or the string \"null\") then it is assumed the user is referring to the original window instantiated by the browser).</p>\n   * <p>2.) if the value of the \"windowID\" parameter is a JavaScript variable name in the current application window, then it is assumed\n   * that this variable contains the return value from a call to the JavaScript window.open() method.</p>\n   * <p>3.) Otherwise, selenium looks in a hash it maintains that maps string names to window \"names\".</p>\n   * <p>4.) If <em>that</em> fails, we'll try looping over all of the known windows to try to find the appropriate \"title\".\n   * Since \"title\" is not necessarily unique, this may have unexpected behavior.</p>\n   *\n   * <p>If you're having trouble figuring out the name of a window that you want to manipulate, look at the Selenium log messages\n   * which identify the names of windows created via window.open (and therefore intercepted by Selenium).  You will see messages\n   * like the following for each window as it is opened:</p>\n   *\n   * <p><code>debug: window.open call intercepted; window ID (which you can use with selectWindow()) is \"myNewWindow\"</code></p>\n   *\n   * <p>In some cases, Selenium will be unable to intercept a call to window.open (if the call occurs during or before the \"onLoad\" event, for example).\n   * (This is bug SEL-339.)  In those cases, you can force Selenium to notice the open window's name by using the Selenium openWindow command, using\n   * an empty (blank) url, like this: openWindow(\"\", \"myFunnyWindow\").</p>\n   *\n   * @param windowID the JavaScript window ID of the window to select\n   */\n  this.browserbot.selectWindow(windowID)\n}\n\nSelenium.prototype.doSelectPopUp = function(windowID) {\n  /**\n   * Simplifies the process of selecting a popup window (and does not offer\n   * functionality beyond what <code>selectWindow()</code> already provides).\n   * <ul>\n   * <li>If <code>windowID</code> is either not specified, or specified as\n   * \"null\", the first non-top window is selected. The top window is the one\n   * that would be selected by <code>selectWindow()</code> without providing a\n   * <code>windowID</code> . This should not be used when more than one popup\n   * window is in play.</li>\n   * <li>Otherwise, the window will be looked up considering\n   * <code>windowID</code> as the following in order: 1) the \"name\" of the\n   * window, as specified to <code>window.open()</code>; 2) a javascript\n   * variable which is a reference to a window; and 3) the title of the\n   * window. This is the same ordered lookup performed by\n   * <code>selectWindow</code> .</li>\n   * </ul>\n   *\n   * @param windowID  an identifier for the popup window, which can take on a\n   *                  number of different meanings\n   */\n  this.browserbot.selectPopUp(windowID)\n}\n\nSelenium.prototype.doDeselectPopUp = function() {\n  /**\n   * Selects the main window. Functionally equivalent to using\n   * <code>selectWindow()</code> and specifying no value for\n   * <code>windowID</code>.\n   */\n  this.browserbot.selectWindow()\n}\n\nSelenium.prototype.doSelectFrame = function(locator) {\n  /**\n   * Selects a frame within the current window.  (You may invoke this command\n   * multiple times to select nested frames.)  To select the parent frame, use\n   * \"relative=parent\" as a locator; to select the top frame, use \"relative=top\".\n   * You can also select a frame by its 0-based index number; select the first frame with\n   * \"index=0\", or the third frame with \"index=2\".\n   *\n   * <p>You may also use a DOM expression to identify the frame you want directly,\n   * like this: <code>dom=frames[\"main\"].frames[\"subframe\"]</code></p>\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> identifying a frame or iframe\n   */\n  this.browserbot.selectFrame(locator)\n}\n\nSelenium.prototype.getWhetherThisFrameMatchFrameExpression = function(\n  currentFrameString,\n  target\n) {\n  /**\n   * Determine whether current/locator identify the frame containing this running code.\n   *\n   * <p>This is useful in proxy injection mode, where this code runs in every\n   * browser frame and window, and sometimes the selenium server needs to identify\n   * the \"current\" frame.  In this case, when the test calls selectFrame, this\n   * routine is called for each frame to figure out which one has been selected.\n   * The selected frame will return true, while all others will return false.</p>\n   *\n   * @param currentFrameString starting frame\n   * @param target new frame (which might be relative to the current one)\n   * @return boolean true if the new frame is this code's window\n   */\n  return this.browserbot.doesThisFrameMatchFrameExpression(\n    currentFrameString,\n    target\n  )\n}\n\nSelenium.prototype.getWhetherThisWindowMatchWindowExpression = function(\n  _currentWindowString,\n  target\n) {\n  /**\n   * Determine whether currentWindowString plus target identify the window containing this running code.\n   *\n   * <p>This is useful in proxy injection mode, where this code runs in every\n   * browser frame and window, and sometimes the selenium server needs to identify\n   * the \"current\" window.  In this case, when the test calls selectWindow, this\n   * routine is called for each window to figure out which one has been selected.\n   * The selected window will return true, while all others will return false.</p>\n   *\n   * @param currentWindowString starting window\n   * @param target new window (which might be relative to the current one, e.g., \"_parent\")\n   * @return boolean true if the new window is this code's window\n   */\n  if (\n    window.opener != null &&\n    window.opener[target] != null &&\n    window.opener[target] == window\n  ) {\n    return true\n  }\n  return false\n}\n\nSelenium.prototype.doWaitForPopUp = function(windowID, timeout) {\n  /**\n   * Waits for a popup window to appear and load up.\n   *\n   * @param windowID the JavaScript window \"name\" of the window that will appear (not the text of the title bar)\n   *                 If unspecified, or specified as \"null\", this command will\n   *                 wait for the first non-top window to appear (don't rely\n   *                 on this if you are working with multiple popups\n   *                 simultaneously).\n   * @param timeout a timeout in milliseconds, after which the action will return with an error.\n   *                If this value is not specified, the default Selenium\n   *                timeout will be used. See the setTimeout() command.\n   */\n  if (!timeout) {\n    timeout = this.defaultTimeout\n  }\n  let timeoutTime = getTimeoutTime(timeout)\n\n  let popupLoadedPredicate = function() {\n    let targetWindow\n    try {\n      if (windowID && windowID != 'null') {\n        targetWindow = selenium.browserbot.getWindowByName(windowID, true)\n      } else {\n        let names = selenium.browserbot.getNonTopWindowNames()\n        targetWindow = selenium.browserbot.getWindowByName(names[0], true)\n      }\n    } catch (e) {\n      if (new Date().getTime() > timeoutTime) {\n        throw e\n      }\n    }\n\n    if (!targetWindow) return false\n    try {\n      if (!targetWindow.location) return false\n      if ('about:blank' == targetWindow.location) return false\n    } catch (e) {\n      //LOG.debug(\"Location exception (\" + e.message + \")!\");\n      return false\n    }\n    if (browserVersion.isKonqueror) {\n      if ('/' == targetWindow.location.href) {\n        // apparently Konqueror uses this as the temporary location, instead of about:blank\n        return false\n      }\n    }\n    if (browserVersion.isSafari) {\n      if (\n        targetWindow.location.href ==\n        selenium.browserbot.buttonWindow.location.href\n      ) {\n        // Apparently Safari uses this as the temporary location, instead of about:blank\n        // what a world!\n        //LOG.debug(\"DGF what a world!\");\n        return false\n      }\n    }\n    if (!targetWindow.document) return false\n    if (!selenium.browserbot.getCurrentWindow().document.readyState) {\n      // This is Firefox, with no readyState extension\n      return true\n    }\n    if ('complete' != targetWindow.document.readyState) return false\n    return true\n  }\n\n  return Selenium.decorateFunctionWithTimeout(popupLoadedPredicate, timeout)\n}\n\nSelenium.prototype.doWaitForPopUp.dontCheckAlertsAndConfirms = true\n\n//Selenium.prototype.doChooseCancelOnNextConfirmation = function() {\n/**\n * <p>\n * By default, Selenium's overridden window.confirm() function will\n * return true, as if the user had manually clicked OK; after running\n * this command, the next call to confirm() will return false, as if\n * the user had clicked Cancel.  Selenium will then resume using the\n * default behavior for future confirmations, automatically returning\n * true (OK) unless/until you explicitly call this command for each\n * confirmation.\n * </p>\n * <p>\n * Take note - every time a confirmation comes up, you must\n * consume it with a corresponding getConfirmation, or else\n * the next selenium operation will fail.\n * </p>\n */\n//this.browserbot.cancelNextConfirmation(false);\n//};\n\n//Selenium.prototype.doChooseOkOnNextConfirmation = function() {\n/**\n * <p>\n * Undo the effect of calling chooseCancelOnNextConfirmation.  Note\n * that Selenium's overridden window.confirm() function will normally automatically\n * return true, as if the user had manually clicked OK, so you shouldn't\n * need to use this command unless for some reason you need to change\n * your mind prior to the next confirmation.  After any confirmation, Selenium will resume using the\n * default behavior for future confirmations, automatically returning\n * true (OK) unless/until you explicitly call chooseCancelOnNextConfirmation for each\n * confirmation.\n * </p>\n * <p>\n * Take note - every time a confirmation comes up, you must\n * consume it with a corresponding getConfirmation, or else\n * the next selenium operation will fail.\n * </p>\n *\n */\n//this.browserbot.cancelNextConfirmation(true);\n//};\n\n//Selenium.prototype.doAnswerOnNextPrompt = function(answer) {\n/**\n * Instructs Selenium to return the specified answer string in response to\n * the next JavaScript prompt [window.prompt()].\n *\n *\n * @param answer the answer to give in response to the prompt pop-up\n */\n//this.browserbot.setNextPromptResult(answer);\n//};\n\nSelenium.prototype.doGoBack = function() {\n  /**\n   * Simulates the user clicking the \"back\" button on their browser.\n   *\n   */\n  this.browserbot.goBack()\n}\n\nSelenium.prototype.doRefresh = function() {\n  /**\n   * Simulates the user clicking the \"Refresh\" button on their browser.\n   *\n   */\n  this.browserbot.refresh()\n}\n\nSelenium.prototype.doClose = function() {\n  /**\n   * Simulates the user clicking the \"close\" button in the titlebar of a popup\n   * window or tab.\n   */\n  this.browserbot.close()\n}\n\nSelenium.prototype.ensureNoUnhandledPopups = function() {\n  if (this.browserbot.hasAlerts()) {\n    throw new SeleniumError(\n      'There was an unexpected Alert! [' + this.browserbot.getNextAlert() + ']'\n    )\n  }\n  if (this.browserbot.hasConfirmations()) {\n    throw new SeleniumError(\n      'There was an unexpected Confirmation! [' +\n        this.browserbot.getNextConfirmation() +\n        ']'\n    )\n  }\n}\n\nSelenium.prototype.isAlertPresent = function() {\n  /**\n   * Has an alert occurred?\n   *\n   * <p>\n   * This function never throws an exception\n   * </p>\n   * @return boolean true if there is an alert\n   */\n  return this.browserbot.hasAlerts()\n}\n\nSelenium.prototype.isPromptPresent = function() {\n  /**\n   * Has a prompt occurred?\n   *\n   * <p>\n   * This function never throws an exception\n   * </p>\n   * @return boolean true if there is a pending prompt\n   */\n  return this.browserbot.hasPrompts()\n}\n\nSelenium.prototype.isConfirmationPresent = function() {\n  /**\n   * Has confirm() been called?\n   *\n   * <p>\n   * This function never throws an exception\n   * </p>\n   * @return boolean true if there is a pending confirmation\n   */\n  return this.browserbot.hasConfirmations()\n}\nSelenium.prototype.getAlert = function() {\n  /**\n     * Retrieves the message of a JavaScript alert generated during the previous action, or fail if there were no alerts.\n     *\n     * <p>Getting an alert has the same effect as manually clicking OK. If an\n     * alert is generated but you do not consume it with getAlert, the next Selenium action\n     * will fail.</p>\n     *\n     * <p>Under Selenium, JavaScript alerts will NOT pop up a visible alert\n     * dialog.</p>\n     *\n     * <p>Selenium does NOT support JavaScript alerts that are generated in a\n     * page's onload() event handler. In this case a visible dialog WILL be\n     * generated and Selenium will hang until someone manually clicks OK.</p>\n     * @return string The message of the most recent JavaScript alert\n\n     */\n  if (!this.browserbot.hasAlerts()) {\n    Assert.fail('There were no alerts') // eslint-disable-line no-undef\n  }\n  return this.browserbot.getNextAlert()\n}\nSelenium.prototype.getAlert.dontCheckAlertsAndConfirms = true\n\nSelenium.prototype.getConfirmation = function() {\n  /**\n   * Retrieves the message of a JavaScript confirmation dialog generated during\n   * the previous action.\n   *\n   * <p>\n   * By default, the confirm function will return true, having the same effect\n   * as manually clicking OK. This can be changed by prior execution of the\n   * chooseCancelOnNextConfirmation command.\n   * </p>\n   * <p>\n   * If an confirmation is generated but you do not consume it with getConfirmation,\n   * the next Selenium action will fail.\n   * </p>\n   *\n   * <p>\n   * NOTE: under Selenium, JavaScript confirmations will NOT pop up a visible\n   * dialog.\n   * </p>\n   *\n   * <p>\n   * NOTE: Selenium does NOT support JavaScript confirmations that are\n   * generated in a page's onload() event handler. In this case a visible\n   * dialog WILL be generated and Selenium will hang until you manually click\n   * OK.\n   * </p>\n   *\n   * @return string the message of the most recent JavaScript confirmation dialog\n   */\n  if (!this.browserbot.hasConfirmations()) {\n    Assert.fail('There were no confirmations') // eslint-disable-line no-undef\n  }\n  return this.browserbot.getNextConfirmation()\n}\nSelenium.prototype.getConfirmation.dontCheckAlertsAndConfirms = true\n\nSelenium.prototype.getPrompt = function() {\n  /**\n   * Retrieves the message of a JavaScript question prompt dialog generated during\n   * the previous action.\n   *\n   * <p>Successful handling of the prompt requires prior execution of the\n   * answerOnNextPrompt command. If a prompt is generated but you\n   * do not get/verify it, the next Selenium action will fail.</p>\n   *\n   * <p>NOTE: under Selenium, JavaScript prompts will NOT pop up a visible\n   * dialog.</p>\n   *\n   * <p>NOTE: Selenium does NOT support JavaScript prompts that are generated in a\n   * page's onload() event handler. In this case a visible dialog WILL be\n   * generated and Selenium will hang until someone manually clicks OK.</p>\n   * @return string the message of the most recent JavaScript question prompt\n   */\n  if (!this.browserbot.hasPrompts()) {\n    Assert.fail('There were no prompts') // eslint-disable-line no-undef\n  }\n  return this.browserbot.getNextPrompt()\n}\n\nSelenium.prototype.getLocation = function() {\n  /** Gets the absolute URL of the current page.\n   *\n   * @return string the absolute URL of the current page\n   */\n  return this.browserbot.getCurrentWindow().location.href\n}\n\nSelenium.prototype.getTitle = function() {\n  /** Gets the title of the current page.\n   *\n   * @return string the title of the current page\n   */\n  return this.browserbot.getTitle()\n}\n\nSelenium.prototype.getBodyText = function() {\n  /**\n   * Gets the entire text of the page.\n   * @return string the entire text of the page\n   */\n  return this.browserbot.bodyText()\n}\n\nSelenium.prototype.getValue = function(locator) {\n  /**\n   * Gets the (whitespace-trimmed) value of an input field (or anything else with a value parameter).\n   * For checkbox/radio elements, the value will be \"on\" or \"off\" depending on\n   * whether the element is checked or not.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @return string the element value, or \"on/off\" for checkbox/radio elements\n   */\n  let element = this.browserbot.findElement(locator)\n  return element.value.trim()\n}\n\nSelenium.prototype.getText = function(locator) {\n  /**\n   * Gets the text of an element. This works for any element that contains\n   * text. This command uses either the textContent (Mozilla-like browsers) or\n   * the innerText (IE-like browsers) of the element, which is the rendered\n   * text shown to the user.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @return string the text of the element\n   */\n  let element = this.browserbot.findElement(locator)\n  return bot.dom.getVisibleText(element).trim()\n}\n\nSelenium.prototype.getEval = function(script) {\n  /** Gets the result of evaluating the specified JavaScript snippet.  The snippet may\n   * have multiple lines, but only the result of the last line will be returned.\n   *\n   * <p>Note that, by default, the snippet will run in the context of the \"selenium\"\n   * object itself, so <code>this</code> will refer to the Selenium object.  Use <code>window</code> to\n   * refer to the window of your application, e.g. <code>window.document.getElementById('foo')</code></p>\n   *\n   * <p>If you need to use\n   * a locator to refer to a single element in your application page, you can\n   * use <code>this.browserbot.findElement(\"id=foo\")</code> where \"id=foo\" is your locator.</p>\n   *\n   * @param script the JavaScript snippet to run\n   * @return string the results of evaluating the snippet\n   */\n  try {\n    //LOG.info('script is: ' + script);\n    let result = this.eval(script)\n    // Selenium RC doesn't allow returning null\n    if (null == result) return 'null'\n    return result\n  } catch (e) {\n    throw new SeleniumError('Threw an exception: ' + extractExceptionMessage(e))\n  }\n}\n\nSelenium.prototype.isChecked = function(locator) {\n  /**\n   * Gets whether a toggle-button (checkbox/radio) is checked.  Fails if the specified element doesn't exist or isn't a toggle-button.\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to a checkbox or radio button\n   * @return boolean true if the checkbox is checked, false otherwise\n   */\n  let element = this.browserbot.findElement(locator)\n  if (element.checked == null) {\n    throw new SeleniumError('Element ' + locator + ' is not a toggle-button.')\n  }\n  return element.checked\n}\n\nSelenium.prototype.getTable = function(tableCellAddress) {\n  /**\n   * Gets the text from a cell of a table. The cellAddress syntax\n   * tableLocator.row.column, where row and column start at 0.\n   *\n   * @param tableCellAddress a cell address, e.g. \"foo.1.4\"\n   * @return string the text from the specified cell\n   */\n  // This regular expression matches \"tableName.row.column\"\n  // For example, \"mytable.3.4\"\n  let pattern = /(.*)\\.(\\d+)\\.(\\d+)/\n\n  if (!pattern.test(tableCellAddress)) {\n    throw new SeleniumError(\n      'Invalid target format. Correct format is tableName.rowNum.columnNum'\n    )\n  }\n\n  let pieces = tableCellAddress.match(pattern)\n\n  let tableName = pieces[1]\n  let row = pieces[2]\n  let col = pieces[3]\n\n  let table = this.browserbot.findElement(tableName)\n  if (row > table.rows.length) {\n    // eslint-disable-next-line no-undef\n    Assert.fail(\n      'Cannot access row ' + row + ' - table has ' + table.rows.length + ' rows'\n    )\n  } else if (col > table.rows[row].cells.length) {\n    // eslint-disable-next-line no-undef\n    Assert.fail(\n      'Cannot access column ' +\n        col +\n        ' - table row has ' +\n        table.rows[row].cells.length +\n        ' columns'\n    )\n  } else {\n    let actualContent = bot.dom.getVisibleText(table.rows[row].cells[col])\n    return actualContent.trim()\n  }\n  return null\n}\n\nSelenium.prototype.getSelectedLabels = function(selectLocator) {\n  /** Gets all option labels (visible text) for selected options in the specified select or multi-select element.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string[] an array of all selected option labels in the specified select drop-down\n   */\n  return this.findSelectedOptionProperties(selectLocator, 'text')\n}\n\nSelenium.prototype.getSelectedLabel = function(selectLocator) {\n  /** Gets option label (visible text) for selected option in the specified select element.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string the selected option label in the specified select drop-down\n   */\n  return this.findSelectedOptionProperty(selectLocator, 'text')\n}\n\nSelenium.prototype.getSelectedValues = function(selectLocator) {\n  /** Gets all option values (value attributes) for selected options in the specified select or multi-select element.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string[] an array of all selected option values in the specified select drop-down\n   */\n  return this.findSelectedOptionProperties(selectLocator, 'value')\n}\n\nSelenium.prototype.getSelectedValue = function(selectLocator) {\n  /** Gets option value (value attribute) for selected option in the specified select element.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string the selected option value in the specified select drop-down\n   */\n  return this.findSelectedOptionProperty(selectLocator, 'value')\n}\n\nSelenium.prototype.getSelectedIndexes = function(selectLocator) {\n  /** Gets all option indexes (option number, starting at 0) for selected options in the specified select or multi-select element.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string[] an array of all selected option indexes in the specified select drop-down\n   */\n  return this.findSelectedOptionProperties(selectLocator, 'index')\n}\n\nSelenium.prototype.getSelectedIndex = function(selectLocator) {\n  /** Gets option index (option number, starting at 0) for selected option in the specified select element.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string the selected option index in the specified select drop-down\n   */\n  return this.findSelectedOptionProperty(selectLocator, 'index')\n}\n\nSelenium.prototype.getSelectedIds = function(selectLocator) {\n  /** Gets all option element IDs for selected options in the specified select or multi-select element.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string[] an array of all selected option IDs in the specified select drop-down\n   */\n  return this.findSelectedOptionProperties(selectLocator, 'id')\n}\n\nSelenium.prototype.getSelectedId = function(selectLocator) {\n  /** Gets option element ID for selected option in the specified select element.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string the selected option ID in the specified select drop-down\n   */\n  return this.findSelectedOptionProperty(selectLocator, 'id')\n}\n\nSelenium.prototype.isSomethingSelected = function(selectLocator) {\n  /** Determines whether some option in a drop-down menu is selected.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return boolean true if some option has been selected, false otherwise\n   */\n  let element = this.browserbot.findElement(selectLocator)\n  if (!('options' in element)) {\n    throw new SeleniumError(\n      'Specified element is not a Select (has no options)'\n    )\n  }\n\n  for (let i = 0; i < element.options.length; i++) {\n    if (element.options[i].selected) {\n      return true\n    }\n  }\n  return false\n}\n\nSelenium.prototype.findSelectedOptionProperties = function(locator, property) {\n  let element = this.browserbot.findElement(locator)\n  if (!('options' in element)) {\n    throw new SeleniumError(\n      'Specified element is not a Select (has no options)'\n    )\n  }\n\n  let selectedOptions = []\n\n  for (let i = 0; i < element.options.length; i++) {\n    if (element.options[i].selected) {\n      let propVal = element.options[i][property]\n      selectedOptions.push(propVal)\n    }\n  }\n  if (selectedOptions.length == 0) Assert.fail('No option selected') // eslint-disable-line no-undef\n  return selectedOptions\n}\n\nSelenium.prototype.findSelectedOptionProperty = function(locator, property) {\n  let selectedOptions = this.findSelectedOptionProperties(locator, property)\n  if (selectedOptions.length > 1) {\n    Assert.fail('More than one selected option!') // eslint-disable-line no-undef\n  }\n  return selectedOptions[0]\n}\n\nSelenium.prototype.getSelectOptions = function(selectLocator) {\n  /** Gets all option labels in the specified select drop-down.\n   *\n   * @param selectLocator an <a href=\"#locators\">element locator</a> identifying a drop-down menu\n   * @return string[] an array of all option labels in the specified select drop-down\n   */\n  let element = this.browserbot.findElement(selectLocator)\n\n  let selectOptions = []\n\n  for (let i = 0; i < element.options.length; i++) {\n    let option = element.options[i].text\n    selectOptions.push(option)\n  }\n\n  return selectOptions\n}\n\nSelenium.prototype.getAttribute = function(attributeLocator) {\n  /**\n   * Gets the value of an element attribute. The value of the attribute may\n   * differ across browsers (this is the case for the \"style\" attribute, for\n   * example).\n   *\n   * @param attributeLocator an element locator followed by an &#064; sign and then the name of the attribute, e.g. \"foo&#064;bar\"\n   * @return string the value of the specified attribute\n   */\n  let result = this.browserbot.findAttribute(attributeLocator)\n  if (result == null) {\n    throw new SeleniumError(\n      'Could not find element attribute: ' + attributeLocator\n    )\n  }\n  return result\n}\n\nSelenium.prototype.isTextPresent = function(pattern) {\n  /**\n   * Verifies that the specified text pattern appears somewhere on the rendered page shown to the user.\n   * @param pattern a <a href=\"#patterns\">pattern</a> to match with the text of the page\n   * @return boolean true if the pattern matches the text, false otherwise\n   */\n  let allText = this.browserbot.bodyText()\n\n  let patternMatcher = new PatternMatcher(pattern)\n  if (patternMatcher.strategy == PatternMatcher.strategies.glob) {\n    if (pattern.indexOf('glob:') == 0) {\n      pattern = pattern.substring('glob:'.length) // strip off \"glob:\"\n    }\n    patternMatcher.matcher = new PatternMatcher.strategies.globContains(pattern)\n  } else if (patternMatcher.strategy == PatternMatcher.strategies.exact) {\n    pattern = pattern.substring('exact:'.length) // strip off \"exact:\"\n    return allText.indexOf(pattern) != -1\n  }\n  return patternMatcher.matches(allText)\n}\n\nfunction isElementNotPresent(locator) {\n  return !this.isElementPresent(locator)\n}\n\nSelenium.prototype.isElementPresent = function(locator) {\n  /**\n   * Verifies that the specified element is somewhere on the page.\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @return boolean true if the element is present, false otherwise\n   */\n  let element = this.browserbot.findElementOrNull(locator)\n  if (element == null) {\n    return false\n  }\n  return true\n}\n\nfunction unableToLocateTargetElementError() {\n  throw new Error('Unable to locate target element.')\n}\n\nfunction isNotDisplayed(locator) {\n  try {\n    return !this.isVisible(locator)\n  } catch (error) {\n    unableToLocateTargetElementError()\n  }\n}\n\nfunction isDisplayed(locator) {\n  try {\n    return this.isVisible(locator)\n  } catch (error) {\n    return false\n  }\n}\n\nSelenium.prototype.isVisible = function(locator) {\n  /**\n   * Determines if the specified element is visible. An\n   * element can be rendered invisible by setting the CSS \"visibility\"\n   * property to \"hidden\", or the \"display\" property to \"none\", either for the\n   * element itself or one if its ancestors.  This method will fail if\n   * the element is not present.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @return boolean true if the specified element is visible, false otherwise\n   */\n  let element\n  element = this.browserbot.findElement(locator)\n  // DGF if it's an input tag of type \"hidden\" then it's not visible\n  if (element.tagName) {\n    let tagName = new String(element.tagName).toLowerCase()\n    if (tagName == 'input') {\n      if (element.type) {\n        let elementType = new String(element.type).toLowerCase()\n        if (elementType == 'hidden') {\n          return false\n        }\n      }\n    }\n  }\n  let visibility = this.findEffectiveStyleProperty(element, 'visibility')\n  let _isDisplayed = this._isDisplayed(element)\n  return visibility != 'hidden' && _isDisplayed\n}\n\nSelenium.prototype.findEffectiveStyleProperty = function(element, property) {\n  let effectiveStyle = this.findEffectiveStyle(element)\n  let propertyValue = effectiveStyle[property]\n  if (propertyValue == 'inherit' && element.parentNode.style) {\n    return this.findEffectiveStyleProperty(element.parentNode, property)\n  }\n  return propertyValue\n}\n\nSelenium.prototype._isDisplayed = function(element) {\n  let display = this.findEffectiveStyleProperty(element, 'display')\n  if (display == 'none') return false\n  if (element.parentNode.style) {\n    return this._isDisplayed(element.parentNode)\n  }\n  return true\n}\n\nSelenium.prototype.findEffectiveStyle = function(element) {\n  if (element.style == undefined) {\n    return undefined // not a styled element\n  }\n  let window = this.browserbot.getCurrentWindow()\n  if (window.getComputedStyle) {\n    // DOM-Level-2-CSS\n    return window.getComputedStyle(element, null)\n  }\n  if (element.currentStyle) {\n    // non-standard IE alternative\n    return element.currentStyle\n    // TODO: this won't really work in a general sense, as\n    //   currentStyle is not identical to getComputedStyle()\n    //   ... but it's good enough for \"visibility\"\n  }\n\n  if (\n    window.document.defaultView &&\n    window.document.defaultView.getComputedStyle\n  ) {\n    return window.document.defaultView.getComputedStyle(element, null)\n  }\n\n  throw new SeleniumError(\n    'cannot determine effective stylesheet in this browser'\n  )\n}\n\nfunction isEditable(locator) {\n  try {\n    return this.isEditable(locator)\n  } catch (error) {\n    unableToLocateTargetElementError()\n  }\n}\n\nfunction isNotEditable(locator) {\n  try {\n    return !this.isEditable(locator)\n  } catch (error) {\n    unableToLocateTargetElementError()\n  }\n}\n\nSelenium.prototype.isEditable = function(locator) {\n  /**\n   * Determines whether the specified input element is editable, ie hasn't been disabled.\n   * This method will fail if the specified element isn't an input element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @return boolean true if the input element is editable, false otherwise\n   */\n  let element = this.browserbot.findElement(locator)\n  if (element.value == undefined) {\n    Assert.fail('Element ' + locator + ' is not an input.') // eslint-disable-line no-undef\n  }\n  if (element.disabled) {\n    return false\n  }\n  // DGF \"readonly\" is a bit goofy... it doesn't necessarily have a value\n  // You can write <input readonly value=\"black\">\n  let readOnlyNode = element.getAttributeNode('readonly')\n  if (readOnlyNode) {\n    // DGF on IE, every input element has a readOnly node, but it may be false\n    if (typeof readOnlyNode.nodeValue == 'boolean') {\n      let readOnly = readOnlyNode.nodeValue\n      if (readOnly) {\n        return false\n      }\n    } else {\n      return false\n    }\n  }\n  return true\n}\n\nfunction isText(locator, text) {\n  try {\n    return this.isText(locator, text)\n  } catch (error) {\n    return false\n  }\n}\n\nSelenium.prototype.isText = function(locator, text) {\n  /**\n   * Determines whether the specified element text value matches the parameter\n   *\n   * @param locator an <a href=\"#locators\">element locator</a>\n   * @param text a string\n   * @return boolean true if the element text matches, false otherwise\n   */\n  let element = this.browserbot.findElement(locator)\n  let elementText = bot.dom.getVisibleText(element).trim()\n  return elementText === text\n}\n\nSelenium.prototype.getAllButtons = function() {\n  /** Returns the IDs of all buttons on the page.\n   *\n   * <p>If a given button has no ID, it will appear as \"\" in this array.</p>\n   *\n   * @return string[] the IDs of all buttons on the page\n   */\n  return this.browserbot.getAllButtons()\n}\n\nSelenium.prototype.getAllLinks = function() {\n  /** Returns the IDs of all links on the page.\n   *\n   * <p>If a given link has no ID, it will appear as \"\" in this array.</p>\n   *\n   * @return string[] the IDs of all links on the page\n   */\n  return this.browserbot.getAllLinks()\n}\n\nSelenium.prototype.getAllFields = function() {\n  /** Returns the IDs of all input fields on the page.\n   *\n   * <p>If a given field has no ID, it will appear as \"\" in this array.</p>\n   *\n   * @return string[] the IDs of all field on the page\n   */\n  return this.browserbot.getAllFields()\n}\n\nSelenium.prototype.doSetMouseSpeed = function(pixels) {\n  /** Configure the number of pixels between \"mousemove\" events during dragAndDrop commands (default=10).\n   * <p>Setting this value to 0 means that we'll send a \"mousemove\" event to every single pixel\n   * in between the start location and the end location; that can be very slow, and may\n   * cause some browsers to force the JavaScript to timeout.</p>\n   *\n   * <p>If the mouse speed is greater than the distance between the two dragged objects, we'll\n   * just send one \"mousemove\" at the start location and then one final one at the end location.</p>\n   * @param pixels the number of pixels between \"mousemove\" events\n   */\n  let intValue = new Number(pixels)\n  if (intValue.constructor != Number || intValue < 0) {\n    this.mouseSpeed = Selenium.DEFAULT_MOUSE_SPEED\n  } else {\n    this.mouseSpeed = pixels\n  }\n}\n\nSelenium.prototype.getMouseSpeed = function() {\n  /** Returns the number of pixels between \"mousemove\" events during dragAndDrop commands (default=10).\n   *\n   * @return number the number of pixels between \"mousemove\" events during dragAndDrop commands (default=10)\n   */\n  return this.mouseSpeed\n}\n\nSelenium.prototype.doDragAndDrop = function(locator, movementsString) {\n  /** Drags an element a certain distance and then drops it\n   * @param locator an element locator\n   * @param movementsString offset in pixels from the current location to which the element should be moved, e.g., \"+70,-300\"\n   */\n  let element = this.browserbot.findElement(locator)\n  let clientStartXY = getClientXY(element)\n  let clientStartX = clientStartXY[0]\n  let clientStartY = clientStartXY[1]\n\n  let movements = movementsString.split(/,/)\n  let movementX = Number(movements[0])\n  let movementY = Number(movements[1])\n\n  let clientFinishX =\n    clientStartX + movementX < 0 ? 0 : clientStartX + movementX\n  let clientFinishY =\n    clientStartY + movementY < 0 ? 0 : clientStartY + movementY\n\n  let mouseSpeed = this.mouseSpeed\n  let move = function(current, dest) {\n    if (current == dest) return current\n    if (Math.abs(current - dest) < mouseSpeed) return dest\n    return current < dest ? current + mouseSpeed : current - mouseSpeed\n  }\n\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mousedown',\n    true,\n    clientStartX,\n    clientStartY\n  )\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mousemove',\n    true,\n    clientStartX,\n    clientStartY\n  )\n  let clientX = clientStartX\n  let clientY = clientStartY\n\n  while (clientX != clientFinishX || clientY != clientFinishY) {\n    clientX = move(clientX, clientFinishX)\n    clientY = move(clientY, clientFinishY)\n    this.browserbot.triggerMouseEvent(\n      element,\n      'mousemove',\n      true,\n      clientX,\n      clientY\n    )\n  }\n\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mousemove',\n    true,\n    clientFinishX,\n    clientFinishY\n  )\n  this.browserbot.triggerMouseEvent(\n    element,\n    'mouseup',\n    true,\n    clientFinishX,\n    clientFinishY\n  )\n}\n\nSelenium.prototype.doDragAndDropToObject = function(\n  locatorOfObjectToBeDragged,\n  locatorOfDragDestinationObject\n) {\n  /** Drags an element and drops it on another element\n   *\n   * @param locatorOfObjectToBeDragged an element to be dragged\n   * @param locatorOfDragDestinationObject an element whose location (i.e., whose center-most pixel) will be the point where locatorOfObjectToBeDragged  is dropped\n   */\n  if (!this.browserbot.findElement(locatorOfObjectToBeDragged).draggable) {\n    //origin code\n    let startX = this.getElementPositionLeft(locatorOfObjectToBeDragged)\n    let startY = this.getElementPositionTop(locatorOfObjectToBeDragged)\n\n    let destinationLeftX = this.getElementPositionLeft(\n      locatorOfDragDestinationObject\n    )\n    let destinationTopY = this.getElementPositionTop(\n      locatorOfDragDestinationObject\n    )\n    let destinationWidth = this.getElementWidth(locatorOfDragDestinationObject)\n    let destinationHeight = this.getElementHeight(\n      locatorOfDragDestinationObject\n    )\n\n    let endX = Math.round(destinationLeftX + destinationWidth / 2)\n    let endY = Math.round(destinationTopY + destinationHeight / 2)\n\n    let deltaX = endX - startX\n    let deltaY = endY - startY\n\n    let movementsString = '' + deltaX + ',' + deltaY\n    this.doDragAndDrop(locatorOfObjectToBeDragged, movementsString)\n  } else {\n    //DragAndDropExt, Shuo-Heng Shih, SELAB, CSIE, NCKU, 2016/09/29\n    let element = this.browserbot.findElement(locatorOfObjectToBeDragged)\n    let target = this.browserbot.findElement(locatorOfDragDestinationObject)\n    this.browserbot.triggerDragEvent(element, target)\n  }\n}\n\nSelenium.prototype.doWindowFocus = function() {\n  /** Gives focus to the currently selected window\n   *\n   */\n  this.browserbot.getCurrentWindow().focus()\n}\n\nSelenium.prototype.doWindowMaximize = function() {\n  /** Resize currently selected window to take up the entire screen\n   *\n   */\n  let window = this.browserbot.getCurrentWindow()\n  if (window != null && window.screen) {\n    window.moveTo(0, 0)\n\n    // It appears Firefox on Mac won't move a window to (0,0).  But, you can move it to (0,1), which\n    // seems to do basically the same thing.  In my (KJM - 6/20/10) tests, anything less than (0, 22)\n    // pushed the browser to (0,0), so it seems it's improperly accounting for something in the browser chrome.\n    if (window.screenX != 0) {\n      window.moveTo(0, 1)\n    }\n\n    window.resizeTo(screen.availWidth, screen.availHeight)\n  }\n}\n\nSelenium.prototype.getHtmlSource = function() {\n  /** Returns the entire HTML source between the opening and\n   * closing \"html\" tags.\n   *\n   * @return string the entire HTML source\n   */\n  return this.browserbot.getDocument().getElementsByTagName('html')[0].innerHTML\n}\n\nSelenium.prototype.doSetCursorPosition = function(locator, position) {\n  /**\n   * Moves the text cursor to the specified position in the given input element or textarea.\n   * This method will fail if the specified element isn't an input element or textarea.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to an input element or textarea\n   * @param position the numerical position of the cursor in the field; position should be 0 to move the position to the beginning of the field.  You can also set the cursor to -1 to move it to the end of the field.\n   */\n  let element = this.browserbot.findElement(locator)\n  if (element.value == undefined) {\n    Assert.fail('Element ' + locator + ' is not an input.') // eslint-disable-line no-undef\n  }\n  if (position == -1) {\n    position = element.value.length\n  }\n\n  if (element.setSelectionRange && !browserVersion.isOpera) {\n    element.focus()\n    element.setSelectionRange(/*start*/ position, /*end*/ position)\n  } else if (element.createTextRange) {\n    bot.events.fire(element, bot.events.EventType.FOCUS)\n    let range = element.createTextRange()\n    range.collapse(true)\n    range.moveEnd('character', position)\n    range.moveStart('character', position)\n    range.select()\n  }\n}\n\nSelenium.prototype.getElementIndex = function(locator) {\n  /**\n   * Get the relative index of an element to its parent (starting from 0). The comment node and empty text node\n   * will be ignored.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to an element\n   * @return number of relative index of the element to its parent (starting from 0)\n   */\n  let element = this.browserbot.findElement(locator)\n  let previousSibling\n  let index = 0\n  while ((previousSibling = element.previousSibling) != null) {\n    if (!this._isCommentOrEmptyTextNode(previousSibling)) {\n      index++\n    }\n    element = previousSibling\n  }\n  return index\n}\n\nSelenium.prototype.isOrdered = function(locator1, locator2) {\n  /**\n   * Check if these two elements have same parent and are ordered siblings in the DOM. Two same elements will\n   * not be considered ordered.\n   *\n   * @param locator1 an <a href=\"#locators\">element locator</a> pointing to the first element\n   * @param locator2 an <a href=\"#locators\">element locator</a> pointing to the second element\n   * @return boolean true if element1 is the previous sibling of element2, false otherwise\n   */\n  let element1 = this.browserbot.findElement(locator1)\n  let element2 = this.browserbot.findElement(locator2)\n  if (element1 === element2) return false\n\n  let previousSibling\n  while ((previousSibling = element2.previousSibling) != null) {\n    if (previousSibling === element1) {\n      return true\n    }\n    element2 = previousSibling\n  }\n  return false\n}\n\nSelenium.prototype._isCommentOrEmptyTextNode = function(node) {\n  return (\n    node.nodeType == 8 || (node.nodeType == 3 && !/[^\\t\\n\\r ]/.test(node.data))\n  )\n}\n\nSelenium.prototype.getElementPositionLeft = function(locator) {\n  /**\n   * Retrieves the horizontal position of an element\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to an element OR an element itself\n   * @return number of pixels from the edge of the frame.\n   */\n  let element\n  if ('string' == typeof locator) {\n    element = this.browserbot.findElement(locator)\n  } else {\n    element = locator\n  }\n  let x = element.offsetLeft\n  let elementParent = element.offsetParent\n\n  while (elementParent != null) {\n    if (document.all) {\n      if (elementParent.tagName != 'TABLE' && elementParent.tagName != 'BODY') {\n        x += elementParent.clientLeft\n      }\n    } // Netscape/DOM\n    else {\n      if (elementParent.tagName == 'TABLE') {\n        let parentBorder = parseInt(elementParent.border)\n        if (isNaN(parentBorder)) {\n          let parentFrame = elementParent.getAttribute('frame')\n          if (parentFrame != null) {\n            x += 1\n          }\n        } else if (parentBorder > 0) {\n          x += parentBorder\n        }\n      }\n    }\n    x += elementParent.offsetLeft\n    elementParent = elementParent.offsetParent\n  }\n  return x\n}\n\nSelenium.prototype.getElementPositionTop = function(locator) {\n  /**\n   * Retrieves the vertical position of an element\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to an element OR an element itself\n   * @return number of pixels from the edge of the frame.\n   */\n  let element\n  if ('string' == typeof locator) {\n    element = this.browserbot.findElement(locator)\n  } else {\n    element = locator\n  }\n\n  let y = 0\n\n  while (element != null) {\n    if (document.all) {\n      if (element.tagName != 'TABLE' && element.tagName != 'BODY') {\n        y += element.clientTop\n      }\n    } // Netscape/DOM\n    else {\n      if (element.tagName == 'TABLE') {\n        let parentBorder = parseInt(element.border)\n        if (isNaN(parentBorder)) {\n          let parentFrame = element.getAttribute('frame')\n          if (parentFrame != null) {\n            y += 1\n          }\n        } else if (parentBorder > 0) {\n          y += parentBorder\n        }\n      }\n    }\n    y += element.offsetTop\n\n    // Netscape can get confused in some cases, such that the height of the parent is smaller\n    // than that of the element (which it shouldn't really be). If this is the case, we need to\n    // exclude this element, since it will result in too large a 'top' return value.\n    if (\n      element.offsetParent &&\n      element.offsetParent.offsetHeight &&\n      element.offsetParent.offsetHeight < element.offsetHeight\n    ) {\n      // skip the parent that's too small\n      element = element.offsetParent.offsetParent\n    } else {\n      // Next up...\n      element = element.offsetParent\n    }\n  }\n  return y\n}\n\nSelenium.prototype.getElementWidth = function(locator) {\n  /**\n   * Retrieves the width of an element\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to an element\n   * @return number width of an element in pixels\n   */\n  let element = this.browserbot.findElement(locator)\n  return element.offsetWidth\n}\n\nSelenium.prototype.getElementHeight = function(locator) {\n  /**\n   * Retrieves the height of an element\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to an element\n   * @return number height of an element in pixels\n   */\n  let element = this.browserbot.findElement(locator)\n  return element.offsetHeight\n}\n\nSelenium.prototype.getCursorPosition = function(locator) {\n  /**\n   * Retrieves the text cursor position in the given input element or textarea; beware, this may not work perfectly on all browsers.\n   *\n   * <p>Specifically, if the cursor/selection has been cleared by JavaScript, this command will tend to\n   * return the position of the last location of the cursor, even though the cursor is now gone from the page.  This is filed as <a href=\"http://jira.openqa.org/browse/SEL-243\">SEL-243</a>.</p>\n   * This method will fail if the specified element isn't an input element or textarea, or there is no cursor in the element.\n   *\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to an input element or textarea\n   * @return number the numerical position of the cursor in the field\n   */\n  let element = this.browserbot.findElement(locator)\n  let doc = this.browserbot.getDocument()\n  let win = this.browserbot.getCurrentWindow()\n  let elementRange\n  if (doc.selection && !browserVersion.isOpera) {\n    try {\n      let selectRange = doc.selection.createRange().duplicate()\n      elementRange = element.createTextRange()\n      selectRange.move('character', 0)\n      elementRange.move('character', 0)\n      elementRange.setEndPoint('EndToEnd', selectRange)\n    } catch (e) {\n      Assert.fail('There is no cursor on this page!') // eslint-disable-line no-undef\n    }\n    let answer = String(elementRange.text).replace(/\\r/g, '').length\n    return answer\n  } else {\n    if (typeof element.selectionStart != 'undefined') {\n      if (\n        win.getSelection &&\n        typeof win.getSelection().rangeCount != undefined &&\n        win.getSelection().rangeCount == 0\n      ) {\n        Assert.fail('There is no cursor on this page!') // eslint-disable-line no-undef\n      }\n      return element.selectionStart\n    }\n  }\n  throw new Error(\"Couldn't detect cursor position on this browser!\")\n}\n\nSelenium.prototype.getExpression = function(expression) {\n  /**\n   * Returns the specified expression.\n   *\n   * <p>This is useful because of JavaScript preprocessing.\n   * It is used to generate commands like assertExpression and waitForExpression.</p>\n   *\n   * @param expression the value to return\n   * @return string the value passed in\n   */\n  return expression\n}\n\nSelenium.prototype.getXpathCount = function(xpath) {\n  /**\n   * Returns the number of nodes that match the specified xpath, eg. \"//table\" would give\n   * the number of tables.\n   *\n   * @param xpath the xpath expression to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you.\n   * @return number the number of nodes that match the specified xpath\n   */\n  let result = this.browserbot.evaluateXPathCount(\n    xpath,\n    this.browserbot.getDocument()\n  )\n  return result\n}\n\nSelenium.prototype.getCssCount = function(css) {\n  /**\n   * Returns the number of nodes that match the specified css selector, eg. \"css=table\" would give\n   * the number of tables.\n   *\n   * @param css the css selector to evaluate. do NOT wrap this expression in a 'count()' function; we will do that for you.\n   * @return the number of nodes that match the specified selector\n   */\n  let result = this.browserbot.evaluateCssCount(\n    css,\n    this.browserbot.getDocument()\n  )\n  return result\n}\n\nSelenium.prototype.doAssignId = function(locator, identifier) {\n  /**\n   * Temporarily sets the \"id\" attribute of the specified element, so you can locate it in the future\n   * using its ID rather than a slow/complicated XPath.  This ID will disappear once the page is\n   * reloaded.\n   * @param locator an <a href=\"#locators\">element locator</a> pointing to an element\n   * @param identifier a string to be used as the ID of the specified element\n   */\n  let element = this.browserbot.findElement(locator)\n  element.id = identifier\n}\n\nSelenium.prototype.doAllowNativeXpath = function(allow) {\n  /**\n   * Specifies whether Selenium should use the native in-browser implementation\n   * of XPath (if any native version is available); if you pass \"false\" to\n   * this function, we will always use our pure-JavaScript xpath library.\n   * Using the pure-JS xpath library can improve the consistency of xpath\n   * element locators between different browser vendors, but the pure-JS\n   * version is much slower than the native implementations.\n   * @param allow boolean, true means we'll prefer to use native XPath; false means we'll only use JS XPath\n   */\n  if ('false' == allow || '0' == allow) {\n    // The strings \"false\" and \"0\" are true values in JS\n    allow = false\n  }\n  this.browserbot.setAllowNativeXPath(allow)\n}\n\nSelenium.prototype.doIgnoreAttributesWithoutValue = function(ignore) {\n  /**\n   * Specifies whether Selenium will ignore xpath attributes that have no\n   * value, i.e. are the empty string, when using the non-native xpath\n   * evaluation engine. You'd want to do this for performance reasons in IE.\n   * However, this could break certain xpaths, for example an xpath that looks\n   * for an attribute whose value is NOT the empty string.\n   *\n   * The hope is that such xpaths are relatively rare, but the user should\n   * have the option of using them. Note that this only influences xpath\n   * evaluation when using the ajaxslt engine (i.e. not \"javascript-xpath\").\n   *\n   * @param ignore boolean, true means we'll ignore attributes without value\n   *                        at the expense of xpath \"correctness\"; false means\n   *                        we'll sacrifice speed for correctness.\n   */\n  if ('false' == ignore || '0' == ignore) {\n    ignore = false\n  }\n  this.browserbot.setIgnoreAttributesWithoutValue(ignore)\n}\n\nSelenium.prototype.doWaitForCondition = function(script, timeout) {\n  /**\n   * Runs the specified JavaScript snippet repeatedly until it evaluates to \"true\".\n   * The snippet may have multiple lines, but only the result of the last line\n   * will be considered.\n   *\n   * <p>Note that, by default, the snippet will be run in the runner's test window, not in the window\n   * of your application.  To get the window of your application, you can use\n   * the JavaScript snippet <code>selenium.browserbot.getCurrentWindow()</code>, and then\n   * run your JavaScript in there</p>\n   * @param script the JavaScript snippet to run\n   * @param timeout a timeout in milliseconds, after which this command will return with an error\n   */\n\n  return Selenium.decorateFunctionWithTimeout(function() {\n    return this.eval(script)\n  }, timeout)\n}\n\nSelenium.prototype.doWaitForCondition.dontCheckAlertsAndConfirms = true\n\nSelenium.prototype.doSetTimeout = function(timeout) {\n  /**\n   * Specifies the amount of time that Selenium will wait for actions to complete.\n   *\n   * <p>Actions that require waiting include \"open\" and the \"waitFor*\" actions.</p>\n   * The default timeout is 30 seconds.\n   * @param timeout a timeout in milliseconds, after which the action will return with an error\n   */\n  if (!timeout) {\n    timeout = Selenium.DEFAULT_TIMEOUT\n  }\n  this.defaultTimeout = timeout\n}\n\nSelenium.prototype.doWaitForPageToLoad = function(timeout) {\n  /**\n   * Waits for a new page to load.\n   *\n   * <p>You can use this command instead of the \"AndWait\" suffixes, \"clickAndWait\", \"selectAndWait\", \"typeAndWait\" etc.\n   * (which are only available in the JS API).</p>\n   *\n   * <p>Selenium constantly keeps track of new pages loading, and sets a \"newPageLoaded\"\n   * flag when it first notices a page load.  Running any other Selenium command after\n   * turns the flag to false.  Hence, if you want to wait for a page to load, you must\n   * wait immediately after a Selenium command that caused a page-load.</p>\n   * @param timeout a timeout in milliseconds, after which this command will return with an error\n   */\n  // in pi-mode, the test and the harness share the window; thus if we are executing this code, then we have loaded\n  if (window['proxyInjectionMode'] == null || !window['proxyInjectionMode']) {\n    return this.makePageLoadCondition(timeout)\n  }\n}\n\nSelenium.prototype.doWaitForFrameToLoad = function(_frameAddress, timeout) {\n  /**\n   * Waits for a new frame to load.\n   *\n   * <p>Selenium constantly keeps track of new pages and frames loading,\n   * and sets a \"newPageLoaded\" flag when it first notices a page load.</p>\n   *\n   * See waitForPageToLoad for more information.\n   *\n   * @param frameAddress FrameAddress from the server side\n   * @param timeout a timeout in milliseconds, after which this command will return with an error\n   */\n  // in pi-mode, the test and the harness share the window; thus if we are executing this code, then we have loaded\n  if (window['proxyInjectionMode'] == null || !window['proxyInjectionMode']) {\n    return this.makePageLoadCondition(timeout)\n  }\n}\n\nSelenium.prototype._isNewPageLoaded = function() {\n  return this.browserbot.isNewPageLoaded()\n}\n\nSelenium.prototype._abortXhrRequest = function() {\n  return this.browserbot.abortXhrRequest()\n}\n\nSelenium.prototype.doWaitForPageToLoad.dontCheckAlertsAndConfirms = true\n\n/**\n * Evaluate a parameter, performing JavaScript evaluation and variable substitution.\n * If the string matches the pattern \"javascript{ ... }\", evaluate the string between the braces.\n */\nSelenium.prototype.preprocessParameter = function(value) {\n  if (!value.script) {\n    // only for non-scripts\n    let match = value.match(/^javascript\\{((.|\\r?\\n)+)\\}$/)\n    if (match && match[1]) {\n      browser.runtime.sendMessage({\n        log: {\n          type: 'warn',\n          message:\n            'parameter preprocessing using javascript{} tag is deprecated, please use execute script',\n        },\n      })\n      let result = this.eval(match[1])\n      return result == null ? null : result.toString()\n    }\n  }\n  return value\n}\n\nSelenium.prototype.replaceKeys = function(str) {\n  let keys = []\n  let match = str.match(/\\$\\{\\w+\\}/g)\n  if (!match) {\n    keys.push(str)\n  } else {\n    let i = 0\n    while (i < str.length) {\n      let currentKey = match.shift(),\n        currentKeyIndex = str.indexOf(currentKey, i)\n      if (currentKeyIndex > i) {\n        // push the string before the current key\n        keys.push(str.substr(i, currentKeyIndex - i))\n        i = currentKeyIndex\n      }\n      if (currentKey) {\n        if (/^\\$\\{KEY_\\w+\\}/.test(currentKey)) {\n          // is a key\n          let keyName = currentKey.match(/\\$\\{KEY_(\\w+)\\}/)[1]\n          let key = bot.Keyboard.Keys[keyName]\n          if (key) {\n            keys.push(key)\n          } else {\n            throw new Error(`Unrecognised key ${keyName}`)\n          }\n        } else {\n          // not a key, and not a stored variable, push it as-is\n          keys.push(currentKey)\n        }\n        i += currentKey.length\n      } else if (i < str.length) {\n        // push the rest of the string\n        keys.push(str.substr(i, str.length))\n        i = str.length\n      }\n    }\n  }\n  return keys\n}\n\nSelenium.prototype.getCookie = function() {\n  /**\n   * Return all cookies of the current page under test.\n   *\n   * @return string all cookies of the current page under test\n   */\n  let doc = this.browserbot.getDocument()\n  return doc.cookie\n}\n\nSelenium.prototype.getCookieByName = function(name) {\n  /**\n   * Returns the value of the cookie with the specified name, or throws an error if the cookie is not present.\n   * @param name the name of the cookie\n   * @return string the value of the cookie\n   */\n  let v = this.browserbot.getCookieByName(name)\n  if (v === null) {\n    throw new SeleniumError(\"Cookie '\" + name + \"' was not found\")\n  }\n  return v\n}\n\nSelenium.prototype.isCookiePresent = function(name) {\n  /**\n   * Returns true if a cookie with the specified name is present, or false otherwise.\n   * @param name the name of the cookie\n   * @return boolean true if a cookie with the specified name is present, or false otherwise.\n   */\n  let v = this.browserbot.getCookieByName(name)\n  let absent = v === null\n  return !absent\n}\n\nSelenium.prototype.doCreateCookie = function(nameValuePair, optionsString) {\n  /**\n   * Create a new cookie whose path and domain are same with those of current page\n   * under test, unless you specified a path for this cookie explicitly.\n   *\n   * @param nameValuePair name and value of the cookie in a format \"name=value\"\n   * @param optionsString options for the cookie. Currently supported options include 'path', 'max_age' and 'domain'.\n   *      the optionsString's format is \"path=/path/, max_age=60, domain=.foo.com\". The order of options are irrelevant, the unit\n   *      of the value of 'max_age' is second.  Note that specifying a domain that isn't a subset of the current domain will\n   *      usually fail.\n   */\n  // eslint-disable-next-line no-useless-escape\n  let results = /[^\\s=\\[\\]\\(\\),\"\\/\\?@:;]+=[^\\s=\\[\\]\\(\\),\"\\/\\?@:;]*/.test(\n    nameValuePair\n  )\n  if (!results) {\n    throw new SeleniumError('Invalid parameter.')\n  }\n  let cookie = nameValuePair.trim()\n  results = /max_age=(\\d+)/.exec(optionsString)\n  if (results) {\n    let expireDateInMilliseconds = new Date().getTime() + results[1] * 1000\n    cookie += '; expires=' + new Date(expireDateInMilliseconds).toGMTString()\n  }\n  results = /path=([^\\s,]+)[,]?/.exec(optionsString)\n  if (results) {\n    let path = results[1]\n    if (browserVersion.khtml) {\n      // Safari and conquerer don't like paths with / at the end\n      if ('/' != path) {\n        path = path.replace(/\\/$/, '')\n      }\n    }\n    cookie += '; path=' + path\n  }\n  results = /domain=([^\\s,]+)[,]?/.exec(optionsString)\n  if (results) {\n    let domain = results[1]\n    cookie += '; domain=' + domain\n  }\n  //LOG.debug(\"Setting cookie to: \" + cookie);\n  this.browserbot.getDocument().cookie = cookie\n}\n\nSelenium.prototype.doDeleteCookie = function(name, optionsString) {\n  /**\n   * Delete a named cookie with specified path and domain.  Be careful; to delete a cookie, you\n   * need to delete it using the exact same path and domain that were used to create the cookie.\n   * If the path is wrong, or the domain is wrong, the cookie simply won't be deleted.  Also\n   * note that specifying a domain that isn't a subset of the current domain will usually fail.\n   *\n   * Since there's no way to discover at runtime the original path and domain of a given cookie,\n   * we've added an option called 'recurse' to try all sub-domains of the current domain with\n   * all paths that are a subset of the current path.  Beware; this option can be slow.  In\n   * big-O notation, it operates in O(n*m) time, where n is the number of dots in the domain\n   * name and m is the number of slashes in the path.\n   *\n   * @param name the name of the cookie to be deleted\n   * @param optionsString options for the cookie. Currently supported options include 'path', 'domain'\n   *      and 'recurse.' The optionsString's format is \"path=/path/, domain=.foo.com, recurse=true\".\n   *      The order of options are irrelevant. Note that specifying a domain that isn't a subset of\n   *      the current domain will usually fail.\n   */\n  // set the expire time of the cookie to be deleted to one minute before now.\n  let path = ''\n  let domain = ''\n  let recurse = false\n  let matched = false\n  let results = /path=([^\\s,]+)[,]?/.exec(optionsString)\n  if (results) {\n    matched = true\n    path = results[1]\n  }\n  results = /domain=([^\\s,]+)[,]?/.exec(optionsString)\n  if (results) {\n    matched = true\n    domain = results[1]\n  }\n  results = /recurse=([^\\s,]+)[,]?/.exec(optionsString)\n  if (results) {\n    matched = true\n    recurse = results[1]\n    if ('false' == recurse) {\n      recurse = false\n    }\n  }\n  // Treat the entire optionsString as a path (for backwards compatibility)\n  if (optionsString && !matched) {\n    //LOG.warn(\"Using entire optionsString as a path; please change the argument to deleteCookie to use path=\" + optionsString);\n    path = optionsString\n  }\n  if (browserVersion.khtml) {\n    // Safari and conquerer don't like paths with / at the end\n    if ('/' != path) {\n      path = path.replace(/\\/$/, '')\n    }\n  }\n  path = path.trim()\n  domain = domain.trim()\n  let cookieName = name.trim()\n  if (recurse) {\n    this.browserbot.recursivelyDeleteCookie(cookieName, domain, path)\n  } else {\n    this.browserbot.deleteCookie(cookieName, domain, path)\n  }\n}\n\nSelenium.prototype.doDeleteAllVisibleCookies = function() {\n  /** Calls deleteCookie with recurse=true on all cookies visible to the current page.\n   * As noted on the documentation for deleteCookie, recurse=true can be much slower\n   * than simply deleting the cookies using a known domain/path.\n   */\n  let win = this.browserbot.getCurrentWindow()\n  let doc = win.document\n  let cookieNames = this.browserbot.getAllCookieNames(doc)\n  let domain = doc.domain\n  let path = win.location.pathname\n  for (let i = 0; i < cookieNames.length; i++) {\n    this.browserbot.recursivelyDeleteCookie(cookieNames[i], domain, path, win)\n  }\n}\n\n//Selenium.prototype.doSetBrowserLogLevel = function(logLevel) {\n/**\n * Sets the threshold for browser-side logging messages; log messages beneath this threshold will be discarded.\n * Valid logLevel strings are: \"debug\", \"info\", \"warn\", \"error\" or \"off\".\n * To see the browser logs, you need to\n * either show the log window in GUI mode, or enable browser-side logging in Selenium RC.\n *\n * @param logLevel one of the following: \"debug\", \"info\", \"warn\", \"error\" or \"off\"\n */\n/*    if (logLevel == null || logLevel == \"\") {\n        throw new SeleniumError(\"You must specify a log level\");\n    }\n    logLevel = logLevel.toLowerCase();\n    if (//LOG.logLevels[logLevel] == null) {\n        throw new SeleniumError(\"Invalid log level: \" + logLevel);\n    }\n    //LOG.setLogLevelThreshold(logLevel);\n}*/\n\nSelenium.prototype.doExecuteScript = function(script, varName) {\n  const value = this.eval(script.script, script.argv)\n  if (value && value.constructor.name === 'Promise') {\n    throw new Error('Expected sync operation, instead received Promise')\n  }\n  if (varName) {\n    return browser.runtime.sendMessage({ storeStr: value, storeVar: varName })\n  }\n}\n\nSelenium.prototype.doExecuteAsyncScript = function(script, varName) {\n  const value = this.eval(script.script, script.argv)\n  if (value && value.constructor.name !== 'Promise') {\n    throw new Error(\n      `Expected async operation, instead received ${\n        value ? value.constructor.name : value\n      }`\n    )\n  }\n  return Promise.resolve(value).then(v => {\n    if (varName) {\n      return browser.runtime.sendMessage({ storeStr: v, storeVar: varName })\n    }\n  })\n}\n\nSelenium.prototype.doRunScript = function(script) {\n  /**\n   * Creates a new \"script\" tag in the body of the current test window, and\n   * adds the specified text into the body of the command.  Scripts run in\n   * this way can often be debugged more easily than scripts executed using\n   * Selenium's \"getEval\" command.  Beware that JS exceptions thrown in these script\n   * tags aren't managed by Selenium, so you should probably wrap your script\n   * in try/catch blocks if there is any chance that the script will throw\n   * an exception.\n   * @param script the JavaScript snippet to run\n   */\n  this.eval(script.script, script.argv)\n}\n\nSelenium.prototype.doRollup = function(rollupName, kwargs) {\n  /**\n   * Executes a command rollup, which is a series of commands with a unique\n   * name, and optionally arguments that control the generation of the set of\n   * commands. If any one of the rolled-up commands fails, the rollup is\n   * considered to have failed. Rollups may also contain nested rollups.\n   *\n   * @param rollupName  the name of the rollup command\n   * @param kwargs      keyword arguments string that influences how the\n   *                    rollup expands into commands\n   */\n  // we have to temporarily hijack the commandStarted, nextCommand(),\n  // commandComplete(), and commandError() methods of the TestLoop object.\n  // When the expanded rollup commands are done executing (or an error has\n  // occurred), we'll restore them to their original values.\n  let loop = currentTest || htmlTestRunner.currentTest // eslint-disable-line no-undef\n  let backupManager = {\n    backup: function() {\n      for (let item in this.data) {\n        this.data[item] = loop[item]\n      }\n    },\n    restore: function() {\n      for (let item in this.data) {\n        loop[item] = this.data[item]\n      }\n    },\n    data: {\n      requiresCallBack: null,\n      commandStarted: null,\n      nextCommand: null,\n      commandComplete: null,\n      commandError: null,\n      pendingRollupCommands: null,\n      rollupFailed: null,\n      rollupFailedMessage: null,\n    },\n  }\n\n  // eslint-disable-next-line no-undef\n  let rule = RollupManager.getInstance().getRollupRule(rollupName)\n  let expandedCommands = rule.getExpandedCommands(kwargs)\n\n  // hold your breath ...\n  try {\n    backupManager.backup()\n    loop.requiresCallBack = false\n    loop.commandStarted = function() {}\n    loop.nextCommand = function() {\n      if (this.pendingRollupCommands.length == 0) {\n        return null\n      }\n      let command = this.pendingRollupCommands.shift()\n      return command\n    }\n    loop.commandComplete = function(result) {\n      if (result.failed) {\n        this.rollupFailed = true\n        this.rollupFailureMessages.push(result.failureMessage)\n      }\n\n      if (this.pendingRollupCommands.length == 0) {\n        result = {\n          failed: this.rollupFailed,\n          failureMessage: this.rollupFailureMessages.join('; '),\n        }\n        //LOG.info('Rollup execution complete: ' + (result.failed ? 'failed! (see error messages below)' : 'ok'));\n        backupManager.restore()\n        this.commandComplete(result)\n      }\n    }\n    loop.commandError = function(errorMessage) {\n      //LOG.info('Rollup execution complete: bombed!');\n      backupManager.restore()\n      this.commandError(errorMessage)\n    }\n\n    loop.pendingRollupCommands = expandedCommands\n    loop.rollupFailed = false\n    loop.rollupFailureMessages = []\n  } catch (e) {\n    //LOG.error('Rollup error: ' + e);\n    backupManager.restore()\n  }\n}\n\nSelenium.prototype.doAddScript = function(scriptContent, scriptTagId) {\n  /**\n   * Loads script content into a new script tag in the Selenium document. This\n   * differs from the runScript command in that runScript adds the script tag\n   * to the document of the AUT, not the Selenium document. The following\n   * entities in the script content are replaced by the characters they\n   * represent:\n   *\n   *     &lt;\n   *     &gt;\n   *     &amp;\n   *\n   * The corresponding remove command is removeScript.\n   *\n   * @param scriptContent  the Javascript content of the script to add\n   * @param scriptTagId    (optional) the id of the new script tag. If\n   *                       specified, and an element with this id already\n   *                       exists, this operation will fail.\n   */\n  if (scriptTagId && document.getElementById(scriptTagId)) {\n    let msg = \"Element with id '\" + scriptTagId + \"' already exists!\"\n    throw new SeleniumError(msg)\n  }\n\n  let head = document.getElementsByTagName('head')[0]\n  let script = document.createElement('script')\n\n  script.type = 'text/javascript'\n\n  if (scriptTagId) {\n    script.id = scriptTagId\n  }\n\n  // replace some entities\n  scriptContent = scriptContent\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&amp;/g, '&')\n\n  script.text = scriptContent\n  head.appendChild(script)\n}\n\nSelenium.prototype.doRemoveScript = function(scriptTagId) {\n  /**\n   * Removes a script tag from the Selenium document identified by the given\n   * id. Does nothing if the referenced tag doesn't exist.\n   *\n   * @param scriptTagId  the id of the script element to remove.\n   */\n  let script = document.getElementById(scriptTagId)\n\n  if (script && getTagName(script) == 'script') {\n    script.parentNode.removeChild(script)\n  }\n}\n\nSelenium.prototype.doUseXpathLibrary = function(libraryName) {\n  /**\n   * Allows choice of one of the available libraries.\n   * @param libraryName name of the desired library\n   * Only the following can be chosen:\n   * <ul>\n   *   <li>\"ajaxslt\" - Google's library</li>\n   *   <li>\"javascript-xpath\" - Cybozu Labs' faster library</li>\n   *   <li>\"rpc-optimizing-ajaxslt\" - the RPC optimizing strategy, delegating to ajaxslt</li>\n   *   <li>\"rpc-optimizing-jsxpath\" - the RPC optimizing strategy, delegating to javascript-xpath</li>\n   *   <li>\"default\" - The default library.  Currently the default library is \"ajaxslt\" .</li>\n   * </ul>\n   * If libraryName isn't one of these, it may be the name of another engine\n   * registered to the browserbot's XPathEvaluator, for example by overriding\n   * XPathEvaluator.prototype.init() . If it is not a registered engine\n   * either, then no change will be made.\n   */\n\n  if (!this.browserbot.getXPathEngine(libraryName)) {\n    return\n  }\n\n  this.browserbot.setXPathEngine(libraryName)\n}\n\n/**\n *  Factory for creating \"Option Locators\".\n *  An OptionLocator is an object for dealing with Select options (e.g. for\n *  finding a specified option, or asserting that the selected option of\n *  Select element matches some condition.\n *  The type of locator returned by the factory depends on the locator string:\n *     label=<exp>  (OptionLocatorByLabel)\n *     value=<exp>  (OptionLocatorByValue)\n *     index=<exp>  (OptionLocatorByIndex)\n *     id=<exp>     (OptionLocatorById)\n *     <exp> (default is OptionLocatorByLabel).\n */\nfunction OptionLocatorFactory() {}\n\nOptionLocatorFactory.prototype.fromLocatorString = function(locatorString) {\n  let locatorType = 'label'\n  let locatorValue = locatorString\n  // If there is a locator prefix, use the specified strategy\n  let result = locatorString.match(/^([a-zA-Z]+)=(.*)/)\n  if (result) {\n    locatorType = result[1]\n    locatorValue = result[2]\n  }\n  if (this.optionLocators == undefined) {\n    this.registerOptionLocators()\n  }\n  if (this.optionLocators[locatorType]) {\n    return new this.optionLocators[locatorType](locatorValue)\n  }\n  throw new SeleniumError('Unknown option locator type: ' + locatorType)\n}\n\n/**\n * To allow for easy extension, all of the option locators are found by\n * searching for all methods of OptionLocatorFactory.prototype that start\n * with \"OptionLocatorBy\".\n * TODO: Consider using the term \"Option Specifier\" instead of \"Option Locator\".\n */\nOptionLocatorFactory.prototype.registerOptionLocators = function() {\n  this.optionLocators = {}\n  for (let functionName in this) {\n    let result = /OptionLocatorBy([A-Z].+)$/.exec(functionName)\n    if (result != null) {\n      let locatorName = lowerFirstChar(result[1])\n      this.optionLocators[locatorName] = this[functionName]\n    }\n  }\n}\n\n/**\n *  OptionLocator for options identified by their labels.\n */\nOptionLocatorFactory.prototype.OptionLocatorByLabel = function(label) {\n  this.label = label\n  this.labelMatcher = new PatternMatcher(this.label)\n  this.findOption = function(element) {\n    for (let i = 0; i < element.options.length; i++) {\n      if (this.labelMatcher.matches(element.options[i].text)) {\n        return element.options[i]\n      }\n    }\n    throw new SeleniumError(\"Option with label '\" + this.label + \"' not found\")\n  }\n\n  this.assertSelected = function(element) {\n    let selectedLabel = element.options[element.selectedIndex].text\n    Assert.matches(this.label, selectedLabel) // eslint-disable-line no-undef\n  }\n}\n\n/**\n *  OptionLocator for options identified by their values.\n */\nOptionLocatorFactory.prototype.OptionLocatorByValue = function(value) {\n  this.value = value\n  this.valueMatcher = new PatternMatcher(this.value)\n  this.findOption = function(element) {\n    for (let i = 0; i < element.options.length; i++) {\n      if (this.valueMatcher.matches(element.options[i].value)) {\n        return element.options[i]\n      }\n    }\n    throw new SeleniumError(\"Option with value '\" + this.value + \"' not found\")\n  }\n\n  this.assertSelected = function(element) {\n    let selectedValue = element.options[element.selectedIndex].value\n    Assert.matches(this.value, selectedValue) // eslint-disable-line no-undef\n  }\n}\n\n/**\n *  OptionLocator for options identified by their index.\n */\nOptionLocatorFactory.prototype.OptionLocatorByIndex = function(index) {\n  this.index = Number(index)\n  if (isNaN(this.index) || this.index < 0) {\n    throw new SeleniumError('Illegal Index: ' + index)\n  }\n\n  this.findOption = function(element) {\n    if (element.options.length <= this.index) {\n      throw new SeleniumError(\n        'Index out of range.  Only ' +\n          element.options.length +\n          ' options available'\n      )\n    }\n    return element.options[this.index]\n  }\n\n  this.assertSelected = function(element) {\n    Assert.equals(this.index, element.selectedIndex) // eslint-disable-line no-undef\n  }\n}\n\n/**\n *  OptionLocator for options identified by their id.\n */\nOptionLocatorFactory.prototype.OptionLocatorById = function(id) {\n  this.id = id\n  this.idMatcher = new PatternMatcher(this.id)\n  this.findOption = function(element) {\n    for (let i = 0; i < element.options.length; i++) {\n      if (this.idMatcher.matches(element.options[i].id)) {\n        return element.options[i]\n      }\n    }\n    throw new SeleniumError(\"Option with id '\" + this.id + \"' not found\")\n  }\n\n  this.assertSelected = function(element) {\n    let selectedId = element.options[element.selectedIndex].id\n    Assert.matches(this.id, selectedId) // eslint-disable-line no-undef\n  }\n}\n\n//EditContentExt, Lin Yun Wen, SELAB, CSIE, NCKU, 2016/11/17\nSelenium.prototype.doEditContent = function(locator, value) {\n  /**\n   *to set text in the element which's conentEditable attribute is true\n   *@param locator an element locator\n   *@param value the context of the element in html\n   */\n  let element = this.browserbot.findElement(locator)\n  let editable = element.contentEditable\n\n  if (editable == 'true') {\n    element.innerHTML = escapeHTML(value)\n  } else {\n    throw new SeleniumError(\n      'The value of contentEditable attribute of this element is not true.'\n    )\n  }\n}\n\n// Modified prompt by SideeX comitters (Copyright 2017)\nSelenium.prototype.doChooseCancelOnNextPrompt = function() {\n  return this.browserbot.cancelNextPrompt()\n}\n\nSelenium.prototype.doAnswerOnNextPrompt = function(answer) {\n  return this.browserbot.setNextPromptResult(answer)\n}\n\nSelenium.prototype.doAssertPrompt = function(message) {\n  return this.browserbot.getPromptMessage().then(function(actualMessage) {\n    if (message != actualMessage)\n      return Promise.reject(\"Prompt message doesn't match actual message\")\n    else return Promise.resolve(true)\n  })\n}\n\n// Modified alert by SideeX comitters (Copyright 2017)\nSelenium.prototype.doAssertAlert = function(message) {\n  return this.browserbot.getAlertMessage().then(function(actualMessage) {\n    if (message != actualMessage)\n      return Promise.reject(\"Alert message doesn't match actual message\")\n    else return Promise.resolve(true)\n  })\n}\n\n// Modified confirm by SideeX comitters (Copyright 2017)\nSelenium.prototype.doChooseCancelOnNextConfirmation = function() {\n  return this.browserbot.setNextConfirmationResult(false)\n}\n\nSelenium.prototype.doChooseOkOnNextConfirmation = function() {\n  return this.browserbot.setNextConfirmationResult(true)\n}\n\nSelenium.prototype.doAssertConfirmation = function(value) {\n  return this.browserbot.getConfirmationMessage().then(function(actualMessage) {\n    if (value != actualMessage)\n      return Promise.reject(\"Confirmation message doesn't match actual message\")\n    else return Promise.resolve(true)\n  })\n}\n\nSelenium.prototype.doShowElement = function(locator) {\n  const elementForInjectingStyle = document.createElement('link')\n  elementForInjectingStyle.rel = 'stylesheet'\n  elementForInjectingStyle.href = browser.runtime.getURL(\n    '/assets/highlight.css'\n  )\n  ;(document.head || document.documentElement).appendChild(\n    elementForInjectingStyle\n  )\n  const highlightElement = document.createElement('div')\n  highlightElement.id = 'selenium-highlight'\n  document.body.appendChild(highlightElement)\n  if (locator.x) {\n    highlightElement.style.left = parseInt(locator.x) + 'px'\n    highlightElement.style.top = parseInt(locator.y) + 'px'\n    highlightElement.style.width = parseInt(locator.width) + 'px'\n    highlightElement.style.height = parseInt(locator.height) + 'px'\n  } else {\n    const bodyRects = document.documentElement.getBoundingClientRect()\n    const element = this.browserbot.findElement(locator)\n    const elementRects = element.getBoundingClientRect()\n    highlightElement.style.left =\n      parseInt(elementRects.left - bodyRects.left) + 'px'\n    highlightElement.style.top =\n      parseInt(elementRects.top - bodyRects.top) + 'px'\n    highlightElement.style.width = parseInt(elementRects.width) + 'px'\n    highlightElement.style.height = parseInt(elementRects.height) + 'px'\n  }\n  highlightElement.style.position = 'absolute'\n  highlightElement.style.zIndex = '100'\n  highlightElement.style.display = 'block'\n  highlightElement.style.pointerEvents = 'none'\n  scrollIntoViewIfNeeded(highlightElement, { centerIfNeeded: true })\n  highlightElement.className = 'active-selenium-highlight'\n  setTimeout(() => {\n    document.body.removeChild(highlightElement)\n    elementForInjectingStyle.parentNode.removeChild(elementForInjectingStyle)\n  }, 500)\n  return 'element found'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content/selenium-api.js","/*\n * Copyright 2011 Software Freedom Conservancy\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\n/*\n * This script provides the Javascript API to drive the test application contained within\n * a Browser Window.\n * TODO:\n *    Add support for more events (keyboard and mouse)\n *    Allow to switch \"user-entry\" mode from mouse-based to keyboard-based, firing different\n *          events in different modes.\n */\n\nimport _Selenium from './selenium-api'\nimport SeleniumError from './SeleniumError'\nimport { selenium } from './commands-api'\nimport goog, { bot, core } from './closure-polyfill'\nimport { getTagName, parse_locator } from './utils'\nimport PatternMatcher from './PatternMatcher'\n\nexport const browserVersion = new window.global.BrowserVersion()\nwindow.global.browserVersion = browserVersion\n\n// The window to which the commands will be sent.  For example, to click on a\n// popup window, first select that window, and then do a normal click command.\nexport default class BrowserBot {\n  constructor(topLevelApplicationWindow) {\n    this.topWindow = topLevelApplicationWindow\n    this.topFrame = this.topWindow\n    this.baseUrl = window.location.href\n    bot.setWindow(window)\n\n    //UnnamedWinIFrameExt, Jie-Lin You, SELAB, CSIE, NCKU, 2016/05/26\n    this.count = 1\n\n    // the buttonWindow is the Selenium window\n    // it contains the Run/Pause buttons... this should *not* be the AUT window\n    this.buttonWindow = window\n    this.currentWindow = this.topWindow\n    this.currentWindowName = null\n    this.allowNativeXpath = true\n    this.xpathEvaluator = new XPathEvaluator('ajaxslt') // change to \"javascript-xpath\" for the newer, faster engine\n\n    // We need to know this in advance, in case the frame closes unexpectedly\n    this.isSubFrameSelected = false\n\n    this.altKeyDown = false\n    this.controlKeyDown = false\n    this.shiftKeyDown = false\n    this.metaKeyDown = false\n\n    this.modalDialogTest = null\n    this.recordedAlerts = new Array()\n    this.recordedConfirmations = new Array()\n    this.recordedPrompts = new Array()\n    this.openedWindows = {}\n    //UnnamedWinIFrameExt, Jie-Lin You, SELAB, CSIE, NCKU, 2016/05/26\n    this.openedWindows['win_ser_local'] = this.topWindow\n\n    this.nextConfirmResult = true\n    this.nextPromptResult = ''\n    this.newPageLoaded = false\n    this.pageLoadError = null\n\n    this.ignoreResponseCode = false\n    this.xhr = null\n    this.abortXhr = false\n    this.isXhrSent = false\n    this.isXhrDone = false\n    this.xhrOpenLocation = null\n    this.xhrResponseCode = null\n    this.xhrStatusText = null\n\n    this.shouldHighlightLocatedElement = false\n\n    this.uniqueId = 'seleniumMarker' + new Date().getTime()\n    this.pollingForLoad = new Object()\n    this.permDeniedCount = new Object()\n    this.windowPollers = new Array()\n    // DGF for backwards compatibility\n    this.browserbot = this\n\n    let self = this\n\n    Object.assign(this, PageBot.prototype)\n    this._registerAllLocatorFunctions()\n\n    this.recordPageLoad = function() {\n      self.newPageLoaded = true\n    }\n\n    this.isNewPageLoaded = function() {\n      let e\n\n      if (this.pageLoadError) {\n        e = this.pageLoadError\n        this.pageLoadError = null\n        throw e\n      }\n\n      if (self.ignoreResponseCode) {\n        return self.newPageLoaded\n      } else {\n        if (self.isXhrSent && self.isXhrDone) {\n          if (\n            !(\n              (self.xhrResponseCode >= 200 && self.xhrResponseCode <= 399) ||\n              self.xhrResponseCode == 0\n            )\n          ) {\n            // TODO: for IE status like: 12002, 12007, ... provide corresponding statusText messages also.\n            e =\n              'XHR ERROR: URL = ' +\n              self.xhrOpenLocation +\n              ' Response_Code = ' +\n              self.xhrResponseCode +\n              ' Error_Message = ' +\n              self.xhrStatusText\n            self.abortXhr = false\n            self.isXhrSent = false\n            self.isXhrDone = false\n            self.xhrResponseCode = null\n            self.xhrStatusText = null\n            throw new SeleniumError(e)\n          }\n        }\n        return (\n          self.newPageLoaded &&\n          (self.isXhrSent ? self.abortXhr || self.isXhrDone : true)\n        )\n      }\n    }\n\n    this.setAllowNativeXPath = function(allow) {\n      this.xpathEvaluator.setAllowNativeXPath(allow)\n    }\n\n    this.setIgnoreAttributesWithoutValue = function(ignore) {\n      this.xpathEvaluator.setIgnoreAttributesWithoutValue(ignore)\n    }\n\n    this.setXPathEngine = function(engineName) {\n      this.xpathEvaluator.setCurrentEngine(engineName)\n    }\n\n    this.getXPathEngine = function() {\n      return this.xpathEvaluator.getCurrentEngine()\n    }\n  }\n}\n\n// DGF PageBot exists for backwards compatibility with old user-extensions\nconst PageBot = function() {}\n\nBrowserBot.createForWindow = function(window, proxyInjectionMode) {\n  let browserbot\n  if (browserVersion.isIE) {\n    browserbot = new IEBrowserBot(window)\n  } else if (browserVersion.isKonqueror) {\n    browserbot = new KonquerorBrowserBot(window)\n  } else if (browserVersion.isOpera) {\n    browserbot = new OperaBrowserBot(window)\n  } else if (browserVersion.isSafari) {\n    browserbot = new SafariBrowserBot(window)\n  } else {\n    // Use mozilla by default\n    browserbot = new MozillaBrowserBot(window)\n  }\n  // getCurrentWindow has the side effect of modifying it to handle page loads etc\n  browserbot.proxyInjectionMode = proxyInjectionMode\n  browserbot.getCurrentWindow() // for modifyWindow side effect.  This is not a transparent style\n  return browserbot\n}\n\n// todo: rename?  This doesn't actually \"do\" anything.\nBrowserBot.prototype.doModalDialogTest = function(test) {\n  this.modalDialogTest = test\n}\n\nBrowserBot.prototype.cancelNextConfirmation = function(result) {\n  this.nextConfirmResult = result\n}\n\n//BrowserBot.prototype.setNextPromptResult = function(result) {\n//this.nextResult = result;\n//};\n\nBrowserBot.prototype.hasAlerts = function() {\n  return this.recordedAlerts.length > 0\n}\n\nBrowserBot.prototype.relayBotToRC = function(s) {\n  // DGF need to do this funny trick to see if we're in PI mode, because\n  // \"this\" might be the window, rather than the browserbot (e.g. during window.alert)\n  let piMode = this.proxyInjectionMode\n  if (!piMode) {\n    if (typeof selenium != 'undefined') {\n      piMode = selenium.browserbot && selenium.browserbot.proxyInjectionMode\n    }\n  }\n  if (piMode) {\n    this.relayToRC('selenium.' + s)\n  }\n}\n\nBrowserBot.prototype.relayToRC = function() {\n  return null\n}\n\nBrowserBot.prototype.resetPopups = function() {\n  this.recordedAlerts = []\n  this.recordedConfirmations = []\n  this.recordedPrompts = []\n}\n\nBrowserBot.prototype.getNextAlert = function() {\n  let t = this.recordedAlerts.shift()\n  if (t) {\n    t = t.replace(/\\n/g, ' ') // because Selenese loses \\n's when retrieving text from HTML table\n  }\n  this.relayBotToRC('browserbot.recordedAlerts')\n  return t\n}\n\nBrowserBot.prototype.hasConfirmations = function() {\n  return this.recordedConfirmations.length > 0\n}\n\nBrowserBot.prototype.getNextConfirmation = function() {\n  let t = this.recordedConfirmations.shift()\n  this.relayBotToRC('browserbot.recordedConfirmations')\n  return t\n}\n\nBrowserBot.prototype.hasPrompts = function() {\n  return this.recordedPrompts.length > 0\n}\n\nBrowserBot.prototype.getNextPrompt = function() {\n  let t = this.recordedPrompts.shift()\n  this.relayBotToRC('browserbot.recordedPrompts')\n  return t\n}\n\n/* Fire a mouse event in a browser-compatible manner */\n\nBrowserBot.prototype.triggerMouseEvent = function(\n  element,\n  eventType,\n  canBubble,\n  clientX,\n  clientY,\n  button\n) {\n  clientX = clientX ? clientX : 0\n  clientY = clientY ? clientY : 0\n\n  //LOG.debug(\"triggerMouseEvent assumes setting screenX and screenY to 0 is ok\");\n  let screenX = 0\n  let screenY = 0\n\n  canBubble = typeof canBubble == undefined ? true : canBubble\n  let doc = goog.dom.getOwnerDocument(element)\n  let view = goog.dom.getWindow(doc)\n\n  let evt = doc.createEvent('MouseEvents')\n  if (evt.initMouseEvent) {\n    // see http://developer.mozilla.org/en/docs/DOM:event.button and\n    // http://developer.mozilla.org/en/docs/DOM:event.initMouseEvent for button ternary logic logic\n    //Safari\n    evt.initMouseEvent(\n      eventType,\n      canBubble,\n      true,\n      view,\n      1,\n      screenX,\n      screenY,\n      clientX,\n      clientY,\n      this.controlKeyDown,\n      this.altKeyDown,\n      this.shiftKeyDown,\n      this.metaKeyDown,\n      button ? button : 0,\n      null\n    )\n  } else {\n    //LOG.warn(\"element doesn't have initMouseEvent; firing an event which should -- but doesn't -- have other mouse-event related attributes here, as well as controlKeyDown, altKeyDown, shiftKeyDown, metaKeyDown\");\n    evt.initEvent(eventType, canBubble, true)\n\n    evt.shiftKey = this.shiftKeyDown\n    evt.metaKey = this.metaKeyDown\n    evt.altKey = this.altKeyDown\n    evt.ctrlKey = this.controlKeyDown\n    if (button) {\n      evt.button = button\n    }\n  }\n  element.dispatchEvent(evt)\n}\n\n//DragAndDropExt, Shuo-Heng Shih, SELAB, CSIE, NCKU, 2016/10/17\nBrowserBot.prototype.triggerDragEvent = function(element, target) {\n  const getXpathOfElement = function(element) {\n    if (element == null) {\n      return 'null'\n    }\n    if (element.parentElement == null) {\n      return '/' + element.tagName\n    }\n\n    let siblingElement = element.parentElement.children\n    let tagCount = 0\n    let totalTagCount = 0\n    let isFound = false\n\n    for (let i = 0; i < siblingElement.length; i++) {\n      if (siblingElement[i].tagName == element.tagName && !isFound) {\n        tagCount++\n        totalTagCount++\n      } else if (siblingElement[i].tagName == element.tagName) {\n        totalTagCount++\n      }\n      if (siblingElement[i] == element) {\n        isFound = true\n      }\n    }\n\n    if (totalTagCount > 1) {\n      return (\n        getXpathOfElement(element.parentElement) +\n        '/' +\n        element.tagName +\n        '[' +\n        tagCount +\n        ']'\n      )\n    }\n\n    return getXpathOfElement(element.parentElement) + '/' + element.tagName\n  }\n  let script =\n    \"                                              \\\n        function simulateDragDrop(sourceNode, destinationNode){\\\n        function createCustomEvent(type) {                     \\\n            var event = new CustomEvent('CustomEvent');        \\\n            event.initCustomEvent(type, true, true, null);     \\\n            event.dataTransfer = {                             \\\n                data: {                                        \\\n                },                                             \\\n                setData: function(type, val) {                 \\\n                    this.data[type] = val;                     \\\n                },                                             \\\n                getData: function(type) {                      \\\n                    return this.data[type];                    \\\n                }                                              \\\n            };                                                 \\\n            return event;                                      \\\n        }                                                      \\\n        function dispatchEvent(node, type, event) {            \\\n            if (node.dispatchEvent) {                          \\\n                return node.dispatchEvent(event);              \\\n            }                                                  \\\n            if (node.fireEvent) {                              \\\n                return node.fireEvent('on' + type, event);     \\\n            }                                                  \\\n        }                                                      \\\n        var event = createCustomEvent('dragstart');            \\\n        dispatchEvent(sourceNode, 'dragstart', event);         \\\n                                                               \\\n        var dropEvent = createCustomEvent('drop');             \\\n        dropEvent.dataTransfer = event.dataTransfer;           \\\n        dispatchEvent(destinationNode, 'drop', dropEvent);     \\\n                                                               \\\n        var dragEndEvent = createCustomEvent('dragend');       \\\n        dragEndEvent.dataTransfer = event.dataTransfer;        \\\n        dispatchEvent(sourceNode, 'dragend', dragEndEvent);    \\\n    }                                                          \\\n    simulateDragDrop(document.evaluate('\" +\n    getXpathOfElement(element) +\n    \"', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue, document.evaluate('\" +\n    getXpathOfElement(target) +\n    \"', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue);\\\n    \"\n  let win = this.browserbot.getCurrentWindow()\n  let doc = win.document\n  let scriptTag = doc.createElement('script')\n  scriptTag.type = 'text/javascript'\n  scriptTag.text = script\n  doc.body.appendChild(scriptTag)\n}\n\nBrowserBot.prototype._windowClosed = function(win) {\n  try {\n    let c = win.closed\n    if (c == null) return true\n    return c\n  } catch (ignored) {\n    // Firefox 15+ may already have marked the win dead. Accessing it\n    // causes an exception to be thrown. That exception tells us the window\n    // is closed.\n    return true\n  }\n}\n\nBrowserBot.uniqueKey = 1\n\nBrowserBot.prototype._modifyWindow = function(win) {\n  // In proxyInjectionMode, have to suppress //LOG calls in _modifyWindow to avoid an infinite loop\n  if (this._windowClosed(win)) {\n    if (!this.proxyInjectionMode) {\n      //LOG.error(\"modifyWindow: Window was closed!\");\n    }\n    return null\n  }\n  if (!this.proxyInjectionMode) {\n    //LOG.debug('modifyWindow ' + this.uniqueId + \":\" + win[this.uniqueId]);\n  }\n\n  // Assign a unique label for this window. We set this on a known attribute so we can reliably\n  // find it later. This is slightly different from uniqueId.\n  win.seleniumKey = BrowserBot.uniqueKey++\n\n  try {\n    this.modifyWindowToRecordPopUpDialogs(win, this)\n  } catch (ex) {\n    console.error(ex) // eslint-disable-line no-console\n  }\n\n  //Commenting out for issue 1854\n  //win[this.uniqueId] = 1;\n\n  // In proxyInjection mode, we have our own mechanism for detecting page loads\n  if (!this.proxyInjectionMode) {\n    this.modifySeparateTestWindowToDetectPageLoads(win)\n  }\n  if (win.frames && win.frames.length && win.frames.length > 0) {\n    for (let i = 0; i < win.frames.length; i++) {\n      try {\n        this._modifyWindow(win.frames[i])\n      } catch (e) {} // eslint-disable-line no-empty\n      // we're just trying to be opportunistic; don't worry if this doesn't work out\n    }\n  }\n  return win\n}\n\nBrowserBot.prototype.selectWindow = function(target) {\n  if (!target || target == 'null') {\n    this._selectTopWindow()\n    return\n  }\n  let result = target.match(/^([a-zA-Z]+)=(.*)/)\n  if (!result) {\n    this._selectWindowByWindowId(target)\n    return\n  }\n  let locatorType = result[1]\n  let locatorValue = result[2]\n  if (locatorType == 'title') {\n    this._selectWindowByTitle(locatorValue)\n  }\n  // TODO separate name and var into separate functions\n  else if (locatorType == 'name') {\n    this._selectWindowByName(locatorValue)\n  } else if (locatorType == 'var') {\n    let win = this.getCurrentWindow().eval(locatorValue)\n    if (win) {\n      this._selectWindowByName(win.name)\n    } else {\n      throw new SeleniumError('Window not found by var: ' + locatorValue)\n    }\n  } else {\n    throw new SeleniumError('Window locator not recognized: ' + locatorType)\n  }\n}\n\nBrowserBot.prototype.selectPopUp = function(windowId) {\n  if (!windowId || windowId == 'null') {\n    this._selectFirstNonTopWindow()\n  } else {\n    this._selectWindowByWindowId(windowId)\n  }\n}\n\nBrowserBot.prototype._selectTopWindow = function() {\n  this.currentWindowName = null\n  this.currentWindow = this.topWindow\n  this.topFrame = this.topWindow\n  this.isSubFrameSelected = false\n}\n\nBrowserBot.prototype._selectWindowByWindowId = function(windowId) {\n  try {\n    this._selectWindowByName(windowId)\n  } catch (e) {\n    this._selectWindowByTitle(windowId)\n  }\n}\n\nBrowserBot.prototype._selectWindowByName = function(target) {\n  this.currentWindow = this.getWindowByName(target, false)\n  this.topFrame = this.currentWindow\n  this.currentWindowName = target\n  this.isSubFrameSelected = false\n}\n\nBrowserBot.prototype._selectWindowByTitle = function(target) {\n  let windowName = this.getWindowNameByTitle(target)\n  if (!windowName) {\n    this._selectTopWindow()\n  } else {\n    this._selectWindowByName(windowName)\n  }\n}\n\nBrowserBot.prototype._selectFirstNonTopWindow = function() {\n  let names = this.getNonTopWindowNames()\n  if (names.length) {\n    this._selectWindowByName(names[0])\n  }\n}\n\nBrowserBot.prototype.selectFrame = function(target) {\n  let frame\n\n  if (target.indexOf('index=') == 0) {\n    target = target.substr(6)\n    frame = this.getCurrentWindow().frames[target]\n    if (frame == null) {\n      throw new SeleniumError('Not found: frames[' + target + ']')\n    }\n    if (!frame.document) {\n      throw new SeleniumError('frames[' + target + '] is not a frame')\n    }\n    this.currentWindow = frame\n    this.isSubFrameSelected = true\n  } else if (target == 'relative=up' || target == 'relative=parent') {\n    this.currentWindow = this.getCurrentWindow().parent\n    this.isSubFrameSelected = this._getFrameElement(this.currentWindow) != null\n  } else if (target == 'relative=top') {\n    this.currentWindow = this.topFrame\n    this.isSubFrameSelected = false\n  } else {\n    frame = this.findElement(target)\n    if (frame == null) {\n      throw new SeleniumError('Not found: ' + target)\n    }\n    // now, did they give us a frame or a frame ELEMENT?\n    let match = false\n    if (frame.contentWindow) {\n      // this must be a frame element\n      if (browserVersion.isHTA) {\n        // stupid HTA bug; can't get in the front door\n        target = frame.contentWindow.name\n      } else {\n        this.currentWindow = frame.contentWindow\n        this.isSubFrameSelected = true\n        match = true\n      }\n    } else if (frame.document && frame.location) {\n      // must be an actual window frame\n      this.currentWindow = frame\n      this.isSubFrameSelected = true\n      match = true\n    }\n\n    if (!match) {\n      // neither, let's loop through the frame names\n      let win = this.getCurrentWindow()\n\n      if (win && win.frames && win.frames.length) {\n        for (let i = 0; i < win.frames.length; i++) {\n          if (win.frames[i].name == target) {\n            this.currentWindow = win.frames[i]\n            this.isSubFrameSelected = true\n            match = true\n            break\n          }\n        }\n      }\n      if (!match) {\n        throw new SeleniumError('Not a frame: ' + target)\n      }\n    }\n  }\n  // modifies the window\n  this.getCurrentWindow()\n}\n\nBrowserBot.prototype.doesThisFrameMatchFrameExpression = function(\n  currentFrameString,\n  target\n) {\n  let isDom = false\n  if (target.indexOf('dom=') == 0) {\n    target = target.substr(4)\n    isDom = true\n  } else if (target.indexOf('index=') == 0) {\n    target = 'frames[' + target.substr(6) + ']'\n    isDom = true\n  }\n  let t\n  //Evalinsandbox\n  // eslint-disable-next-line no-undef\n  let mySandbox = new Components.utils.Sandbox(this.currentWindow.location.href)\n  mySandbox.currentFrameString = currentFrameString\n  mySandbox.target = target\n  try {\n    // eslint-disable-next-line no-undef\n    t = Components.utils.evalInSandbox(\n      currentFrameString + '.' + target,\n      mySandbox\n    )\n    //eval(\"t=\" + currentFrameString + \".\" + target);\n  } catch (e) {} // eslint-disable-line no-empty\n  let autWindow = this.browserbot.getCurrentWindow()\n  if (t != null) {\n    try {\n      if (t.window == autWindow) {\n        return true\n      }\n      if (t.window.uniqueId == autWindow.uniqueId) {\n        return true\n      }\n      return false\n    } catch (permDenied) {\n      // DGF if the windows are incomparable, they're probably not the same...\n    }\n  }\n  if (isDom) {\n    return false\n  }\n  // eslint-disable-next-line no-undef\n  let currentFrame = Components.utils.evalInSandbox(\n    currentFrameString,\n    mySandbox\n  )\n  //var currentFrame;\n  //eval(\"currentFrame=\" + currentFrameString);\n  if (target == 'relative=up') {\n    if (currentFrame.window.parent == autWindow) {\n      return true\n    }\n    return false\n  }\n  if (target == 'relative=top') {\n    if (currentFrame.window.top == autWindow) {\n      return true\n    }\n    return false\n  }\n  if (currentFrame.window == autWindow.parent) {\n    if (autWindow.name == target) {\n      return true\n    }\n    try {\n      let element = this.findElement(target, currentFrame.window)\n      if (element.contentWindow == autWindow) {\n        return true\n      }\n    } catch (e) {} // eslint-disable-line no-empty\n  }\n  return false\n}\n\nBrowserBot.prototype.abortXhrRequest = function() {\n  if (this.ignoreResponseCode) {\n    //LOG.debug(\"XHR response code being ignored. Nothing to abort.\");\n  } else {\n    if (this.abortXhr == false && this.isXhrSent && !this.isXhrDone) {\n      //LOG.info(\"abortXhrRequest(): aborting request\");\n      this.abortXhr = true\n      this.xhr.abort()\n    }\n  }\n}\n\nBrowserBot.prototype.onXhrStateChange = function(method) {\n  //LOG.info(\"onXhrStateChange(): xhr.readyState = \" + this.xhr.readyState + \" method = \" + method + \" time = \" + new Date().getTime());\n  if (this.xhr.readyState == 4) {\n    // check if the request got aborted.\n    if (this.abortXhr == true) {\n      this.xhrResponseCode = 0\n      this.xhrStatusText = 'Request Aborted'\n      this.isXhrDone = true\n      return\n    }\n\n    try {\n      if (\n        method == 'HEAD' &&\n        (this.xhr.status == 501 || this.xhr.status == 405)\n      ) {\n        //LOG.info(\"onXhrStateChange(): HEAD ajax returned 501 or 405, retrying with GET\");\n        // handle 501 response code from servers that do not support 'HEAD' method.\n        // send GET ajax request with range 0-1.\n        this.xhr = new XMLHttpRequest()\n        this.xhr.onreadystatechange = this.onXhrStateChange.bind(this, 'GET')\n        this.xhr.open('GET', this.xhrOpenLocation, true)\n        this.xhr.setRequestHeader('Range', 'bytes:0-1')\n        this.xhr.send('')\n        this.isXhrSent = true\n        return\n      }\n      this.xhrResponseCode = this.xhr.status\n      this.xhrStatusText = this.xhr.statusText\n    } catch (ex) {\n      //LOG.info(\"encountered exception while reading xhrResponseCode.\" + ex.message);\n      this.xhrResponseCode = -1\n      this.xhrStatusText = 'Request Error'\n    }\n\n    this.isXhrDone = true\n  }\n}\n\nBrowserBot.prototype.openWindow = function(url, windowID) {\n  if (url != '') {\n    url = 'https://www.google.com'\n  }\n  if (browserVersion.isHTA) {\n    // in HTA mode, calling .open on the window interprets the url relative to that window\n    // we need to absolute-ize the URL to make it consistent\n    let child = this.getCurrentWindow().open(url, windowID, 'resizable=yes')\n    selenium.browserbot.openedWindows[windowID] = child\n  } else {\n    this.getCurrentWindow().open(url, windowID, 'resizable=yes')\n  }\n}\n\nBrowserBot.prototype.setIFrameLocation = function(iframe, location) {\n  iframe.src = location\n}\n\nBrowserBot.prototype.getCurrentPage = function() {\n  return this\n}\n\nBrowserBot.prototype.windowNeedsModifying = function(win, uniqueId) {\n  // On anything but Firefox, checking the unique id is enough.\n  // Firefox 4 introduces a race condition which selenium regularly loses.\n\n  try {\n    // eslint-disable-next-line no-undef\n    let appInfo = Components.classes['@mozilla.org/xre/app-info;1'].getService(\n      // eslint-disable-next-line no-undef\n      Components.interfaces.nsIXULAppInfo\n    )\n    // eslint-disable-next-line no-undef\n    let versionChecker = Components.classes[\n      '@mozilla.org/xpcom/version-comparator;1'\n      // eslint-disable-next-line no-undef\n    ].getService(Components.interfaces.nsIVersionComparator)\n\n    if (versionChecker.compare(appInfo.version, '4.0b1') >= 0) {\n      return win.alert.toString().indexOf('native code') != -1\n    }\n  } catch (ignored) {} // eslint-disable-line no-empty\n  return !win[uniqueId]\n}\n\nBrowserBot.prototype.modifyWindowToRecordPopUpDialogs = function(\n  originalWindow,\n  browserBot\n) {\n  let self = this\n\n  // Apparently, Firefox 4 makes it possible to unwrap an object to find that\n  // there's nothing in it.\n  let windowToModify = core.firefox.unwrap(originalWindow)\n  if (!windowToModify) {\n    windowToModify = originalWindow\n  }\n\n  windowToModify.seleniumAlert = windowToModify.alert\n\n  if (!self.windowNeedsModifying(windowToModify, browserBot.uniqueId)) {\n    return\n  }\n\n  windowToModify.alert = function(alert) {\n    browserBot.recordedAlerts.push(alert)\n    self.relayBotToRC.call(self, 'browserbot.recordedAlerts')\n  }\n\n  windowToModify.confirm = function(message) {\n    browserBot.recordedConfirmations.push(message)\n    let result = browserBot.nextConfirmResult\n    browserBot.nextConfirmResult = true\n    self.relayBotToRC.call(self, 'browserbot.recordedConfirmations')\n    return result\n  }\n\n  windowToModify.prompt = function(message) {\n    browserBot.recordedPrompts.push(message)\n    let result = !browserBot.nextConfirmResult\n      ? null\n      : browserBot.nextPromptResult\n    browserBot.nextConfirmResult = true\n    browserBot.nextPromptResult = ''\n    self.relayBotToRC.call(self, 'browserbot.recordedPrompts')\n    return result\n  }\n\n  // Keep a reference to all popup windows by name\n  // note that in IE the \"windowName\" argument must be a valid javascript identifier, it seems.\n  let originalOpen = windowToModify.open\n  let originalOpenReference\n  if (browserVersion.isHTA) {\n    originalOpenReference = 'selenium_originalOpen' + new Date().getTime()\n    windowToModify[originalOpenReference] = windowToModify.open\n  }\n\n  let isHTA = browserVersion.isHTA\n\n  let newOpen = function(url, windowName, windowFeatures, replaceFlag) {\n    let myOriginalOpen = originalOpen\n    if (isHTA) {\n      myOriginalOpen = this[originalOpenReference]\n    }\n\n    //UnnamedWinIFrameExt, Jie-Lin You, SELAB, CSIE, NCKU, 2016/05/26\n    if (\n      windowName == '' ||\n      windowName == '_blank' ||\n      typeof windowName === 'undefined'\n    ) {\n      windowName = 'win_ser_' + self.count\n      self.count += 1\n    }\n\n    let openedWindow = myOriginalOpen(\n      url,\n      windowName,\n      windowFeatures,\n      replaceFlag\n    )\n    //LOG.debug(\"window.open call intercepted; window ID (which you can use with selectWindow()) is \\\"\" +  windowName + \"\\\"\");\n    if (windowName != null) {\n      openedWindow['seleniumWindowName'] = windowName\n    }\n    selenium.browserbot.openedWindows[windowName] = openedWindow\n    return openedWindow\n  }\n\n  if (browserVersion.isHTA) {\n    originalOpenReference = 'selenium_originalOpen' + new Date().getTime()\n    const newOpenReference = 'selenium_newOpen' + new Date().getTime()\n    let setOriginalRef = \"this['\" + originalOpenReference + \"'] = this.open;\"\n\n    if (windowToModify.eval) {\n      windowToModify.eval(setOriginalRef)\n      windowToModify.open = newOpen\n    } else {\n      // DGF why can't I eval here?  Seems like I'm querying the window at a bad time, maybe?\n      setOriginalRef += \"this.open = this['\" + newOpenReference + \"'];\"\n      windowToModify[newOpenReference] = newOpen\n      windowToModify.setTimeout(setOriginalRef, 0)\n    }\n  } else {\n    windowToModify.open = newOpen\n  }\n}\n\n/**\n * Call the supplied function when a the current page unloads and a new one loads.\n * This is done by polling continuously until the document changes and is fully loaded.\n */\nBrowserBot.prototype.modifySeparateTestWindowToDetectPageLoads = function(\n  windowObject\n) {\n  // Since the unload event doesn't fire in Safari 1.3, we start polling immediately\n  if (!windowObject) {\n    //LOG.warn(\"modifySeparateTestWindowToDetectPageLoads: no windowObject!\");\n    return\n  }\n  if (this._windowClosed(windowObject)) {\n    //LOG.info(\"modifySeparateTestWindowToDetectPageLoads: windowObject was closed\");\n    return\n  }\n  let oldMarker = this.isPollingForLoad(windowObject)\n  if (oldMarker) {\n    //LOG.debug(\"modifySeparateTestWindowToDetectPageLoads: already polling this window: \" + oldMarker);\n    return\n  }\n\n  let marker = 'selenium' + new Date().getTime()\n  //LOG.debug(\"Starting pollForLoad (\" + marker + \"): \" + windowObject.location);\n  this.pollingForLoad[marker] = true\n  // if this is a frame, add a load listener, otherwise, attach a poller\n  let frameElement = this._getFrameElement(windowObject)\n  // DGF HTA mode can't attach load listeners to subframes (yuk!)\n  let htaSubFrame = this._isHTASubFrame(windowObject)\n  if (frameElement && !htaSubFrame) {\n    //LOG.debug(\"modifySeparateTestWindowToDetectPageLoads: this window is a frame; attaching a load listener\");\n    //addLoadListener(frameElement, this.recordPageLoad); TODO: check if this is necessary\n    frameElement[marker] = true\n    frameElement['frame' + this.uniqueId] = marker\n    //LOG.debug(\"dgf this.uniqueId=\"+this.uniqueId);\n    //LOG.debug(\"dgf marker=\"+marker);\n    //LOG.debug(\"dgf frameElement['frame'+this.uniqueId]=\"+frameElement['frame'+this.uniqueId]);\n    frameElement[this.uniqueId] = marker\n    //LOG.debug(\"dgf frameElement[this.uniqueId]=\"+frameElement[this.uniqueId]);\n  } else {\n    windowObject.location[marker] = true\n    windowObject[this.uniqueId] = marker\n    this.pollForLoad(\n      this.recordPageLoad,\n      windowObject,\n      windowObject.document,\n      windowObject.location,\n      windowObject.location.href,\n      marker\n    )\n  }\n}\n\nBrowserBot.prototype._isHTASubFrame = function() {\n  if (!browserVersion.isHTA) return false\n  // DGF this is wrong! what if \"win\" isn't the selected window?\n  return this.isSubFrameSelected\n}\n\nBrowserBot.prototype._getFrameElement = function(win) {\n  let frameElement = null\n  let caught\n  try {\n    frameElement = win.frameElement\n  } catch (e) {\n    caught = true\n  }\n  if (caught) {\n    // on IE, checking frameElement in a pop-up results in a \"No such interface supported\" exception\n    // but it might have a frame element anyway!\n    let parentContainsIdenticallyNamedFrame = false\n    try {\n      parentContainsIdenticallyNamedFrame = win.parent.frames[win.name]\n    } catch (e) {} // eslint-disable-line no-empty\n    // this may fail if access is denied to the parent; in that case, assume it's not a pop-up\n\n    if (parentContainsIdenticallyNamedFrame) {\n      // it can't be a coincidence that the parent has a frame with the same name as myself!\n      let result\n      try {\n        result = parentContainsIdenticallyNamedFrame.frameElement\n        if (result) {\n          return result\n        }\n      } catch (e) {} // eslint-disable-line no-empty\n      // it was worth a try! _getFrameElementsByName is often slow\n      result = this._getFrameElementByName(win.name, win.parent.document, win)\n      return result\n    }\n  }\n  //LOG.debug(\"_getFrameElement: frameElement=\"+frameElement);\n  if (frameElement) {\n    //LOG.debug(\"frameElement.name=\"+frameElement.name);\n  }\n  return frameElement\n}\n\nBrowserBot.prototype._getFrameElementByName = function(name, doc, win) {\n  let frames\n  let frame\n  let i\n  frames = doc.getElementsByTagName('iframe')\n  for (i = 0; i < frames.length; i++) {\n    frame = frames[i]\n    if (frame.name === name) {\n      return frame\n    }\n  }\n  frames = doc.getElementsByTagName('frame')\n  for (i = 0; i < frames.length; i++) {\n    frame = frames[i]\n    if (frame.name === name) {\n      return frame\n    }\n  }\n  // DGF weird; we only call this function when we know the doc contains the frame\n  //LOG.warn(\"_getFrameElementByName couldn't find a frame or iframe; checking every element for the name \" + name);\n  return BrowserBot.prototype.locateElementByName(win.name, win.parent.document)\n}\n\n/**\n * Set up a polling timer that will keep checking the readyState of the document until it's complete.\n * Since we might call this before the original page is unloaded, we first check to see that the current location\n * or href is different from the original one.\n */\nBrowserBot.prototype.pollForLoad = function(\n  loadFunction,\n  windowObject,\n  originalDocument,\n  originalLocation,\n  originalHref,\n  marker\n) {\n  //LOG.debug(\"pollForLoad original (\" + marker + \"): \" + originalHref);\n  try {\n    //Samit: Fix: open command sometimes fails if current url is chrome and new is not\n    windowObject = core.firefox.unwrap(windowObject)\n    if (this._windowClosed(windowObject)) {\n      //LOG.debug(\"pollForLoad WINDOW CLOSED (\" + marker + \")\");\n      delete this.pollingForLoad[marker]\n      return\n    }\n\n    let isSamePage = this._isSamePage(\n      windowObject,\n      originalDocument,\n      originalLocation,\n      originalHref,\n      marker\n    )\n    let rs = this.getReadyState(windowObject, windowObject.document)\n\n    if (!isSamePage && rs == 'complete') {\n      let currentHref = windowObject.location.href\n      //LOG.debug(\"pollForLoad FINISHED (\" + marker + \"): \" + rs + \" (\" + currentHref + \")\");\n      delete this.pollingForLoad[marker]\n      this._modifyWindow(windowObject)\n      let newMarker = this.isPollingForLoad(windowObject)\n      if (!newMarker) {\n        //LOG.debug(\"modifyWindow didn't start new poller: \" + newMarker);\n        this.modifySeparateTestWindowToDetectPageLoads(windowObject)\n      }\n      newMarker = this.isPollingForLoad(windowObject)\n      let currentlySelectedWindow\n      let currentlySelectedWindowMarker\n      currentlySelectedWindow = this.getCurrentWindow(true)\n      currentlySelectedWindowMarker = currentlySelectedWindow[this.uniqueId]\n\n      //LOG.debug(\"pollForLoad (\" + marker + \") restarting \" + newMarker);\n      if (/(TestRunner-splash|Blank)\\.html\\?start=true$/.test(currentHref)) {\n        //LOG.debug(\"pollForLoad Oh, it's just the starting page.  Never mind!\");\n      } else if (currentlySelectedWindowMarker == newMarker) {\n        loadFunction(currentlySelectedWindow)\n      } else {\n        //LOG.debug(\"pollForLoad page load detected in non-current window; ignoring (currentlySelected=\"+currentlySelectedWindowMarker+\", detection in \"+newMarker+\")\");\n      }\n      return\n    }\n    //LOG.debug(\"pollForLoad continue (\" + marker + \"): \" + currentHref);\n    this.reschedulePoller(\n      loadFunction,\n      windowObject,\n      originalDocument,\n      originalLocation,\n      originalHref,\n      marker\n    )\n  } catch (e) {\n    //LOG.debug(\"Exception during pollForLoad; this should get noticed soon (\" + e.message + \")!\");\n    //DGF this is supposed to get logged later; log it at debug just in case\n    ////LOG.exception(e);\n    this.pageLoadError = e\n  }\n}\n\nBrowserBot.prototype._isSamePage = function(\n  windowObject,\n  originalDocument,\n  originalLocation,\n  originalHref,\n  marker\n) {\n  let currentDocument = windowObject.document\n  let currentLocation = windowObject.location\n  let currentHref = currentLocation.href\n\n  let sameDoc = this._isSameDocument(originalDocument, currentDocument)\n\n  let sameLoc = originalLocation === currentLocation\n\n  // hash marks don't meant the page has loaded, so we need to strip them off if they exist...\n  let currentHash = currentHref.indexOf('#')\n  if (currentHash > 0) {\n    currentHref = currentHref.substring(0, currentHash)\n  }\n  let originalHash = originalHref.indexOf('#')\n  if (originalHash > 0) {\n    originalHref = originalHref.substring(0, originalHash)\n  }\n  //LOG.debug(\"_isSamePage: currentHref: \" + currentHref);\n  //LOG.debug(\"_isSamePage: originalHref: \" + originalHref);\n\n  let sameHref = originalHref === currentHref\n  let markedLoc = currentLocation[marker]\n\n  if (browserVersion.isKonqueror || browserVersion.isSafari) {\n    // the mark disappears too early on these browsers\n    markedLoc = true\n  }\n\n  // since this is some _very_ important logic, especially for PI and multiWindow mode, we should log all these out\n  //LOG.debug(\"_isSamePage: sameDoc: \" + sameDoc);\n  //LOG.debug(\"_isSamePage: sameLoc: \" + sameLoc);\n  //LOG.debug(\"_isSamePage: sameHref: \" + sameHref);\n  //LOG.debug(\"_isSamePage: markedLoc: \" + markedLoc);\n\n  return sameDoc && sameLoc && sameHref && markedLoc\n}\n\nBrowserBot.prototype._isSameDocument = function(\n  originalDocument,\n  currentDocument\n) {\n  return originalDocument === currentDocument\n}\n\nBrowserBot.prototype.getReadyState = function(windowObject, currentDocument) {\n  let rs = currentDocument.readyState\n  if (rs == null) {\n    if (\n      (this.buttonWindow != null &&\n        this.buttonWindow.document.readyState == null) || // not proxy injection mode (and therefore buttonWindow isn't null)\n      top.document.readyState == null\n    ) {\n      // proxy injection mode (and therefore everything's in the top window, but buttonWindow doesn't exist)\n      // uh oh!  we're probably on Firefox with no readyState extension installed!\n      // We'll have to just take a guess as to when the document is loaded; this guess\n      // will never be perfect. :-(\n      if (\n        typeof currentDocument.getElementsByTagName != 'undefined' &&\n        typeof currentDocument.getElementById != 'undefined' &&\n        (currentDocument.getElementsByTagName('body')[0] != null ||\n          currentDocument.body != null)\n      ) {\n        if (\n          windowObject.frameElement &&\n          windowObject.location.href == 'about:blank' &&\n          windowObject.frameElement.src != 'about:blank'\n        ) {\n          //LOG.info(\"getReadyState not loaded, frame location was about:blank, but frame src = \" + windowObject.frameElement.src);\n          return null\n        }\n        //LOG.debug(\"getReadyState = windowObject.frames.length = \" + windowObject.frames.length);\n        for (let i = 0; i < windowObject.frames.length; i++) {\n          //LOG.debug(\"i = \" + i);\n          if (\n            this.getReadyState(\n              windowObject.frames[i],\n              windowObject.frames[i].document\n            ) != 'complete'\n          ) {\n            //LOG.debug(\"getReadyState aha! the nested frame \" + windowObject.frames[i].name + \" wasn't ready!\");\n            return null\n          }\n        }\n\n        rs = 'complete'\n      } else {\n        //LOG.debug(\"pollForLoad readyState was null and DOM appeared to not be ready yet\");\n      }\n    }\n  } else if (rs == 'loading' && browserVersion.isIE) {\n    //LOG.debug(\"pageUnloading = true!!!!\");\n    this.pageUnloading = true\n  }\n  //LOG.debug(\"getReadyState returning \" + rs);\n  return rs\n}\n\n/** This function isn't used normally, but was the way we used to schedule pollers:\n asynchronously executed autonomous units.  This is deprecated, but remains here\n for future reference.\n */\nBrowserBot.prototype.XXXreschedulePoller = function(\n  loadFunction,\n  windowObject,\n  originalDocument,\n  originalLocation,\n  originalHref,\n  marker\n) {\n  let self = this\n  window.setTimeout(function() {\n    self.pollForLoad(\n      loadFunction,\n      windowObject,\n      originalDocument,\n      originalLocation,\n      originalHref,\n      marker\n    )\n  }, 500)\n}\n\n/** This function isn't used normally, but is useful for debugging asynchronous pollers\n * To enable it, rename it to \"reschedulePoller\", so it will override the\n * existing reschedulePoller function\n */\nBrowserBot.prototype.XXXreschedulePoller = function(\n  loadFunction,\n  windowObject,\n  originalDocument,\n  originalLocation,\n  originalHref,\n  marker\n) {\n  let doc = this.buttonWindow.document\n  let button = doc.createElement('button')\n  let buttonName = doc.createTextNode(marker + ' - ' + windowObject.name)\n  button.appendChild(buttonName)\n  let tools = doc.getElementById('tools')\n  let self = this\n  button.onclick = function() {\n    tools.removeChild(button)\n    self.pollForLoad(\n      loadFunction,\n      windowObject,\n      originalDocument,\n      originalLocation,\n      originalHref,\n      marker\n    )\n  }\n  tools.appendChild(button)\n  window.setTimeout(button.onclick, 500)\n}\n\nBrowserBot.prototype.reschedulePoller = function(\n  loadFunction,\n  windowObject,\n  originalDocument,\n  originalLocation,\n  originalHref,\n  marker\n) {\n  let self = this\n  let pollerFunction = function() {\n    self.pollForLoad(\n      loadFunction,\n      windowObject,\n      originalDocument,\n      originalLocation,\n      originalHref,\n      marker\n    )\n  }\n  this.windowPollers.push(pollerFunction)\n}\n\nBrowserBot.prototype.runScheduledPollers = function() {\n  //LOG.debug(\"runScheduledPollers\");\n  let oldPollers = this.windowPollers\n  this.windowPollers = new Array()\n  for (let i = 0; i < oldPollers.length; i++) {\n    oldPollers[i].call()\n  }\n  //LOG.debug(\"runScheduledPollers DONE\");\n}\n\nBrowserBot.prototype.isPollingForLoad = function(win) {\n  let marker\n  let frameElement = this._getFrameElement(win)\n  let htaSubFrame = this._isHTASubFrame(win)\n  if (frameElement && !htaSubFrame) {\n    marker = frameElement['frame' + this.uniqueId]\n  } else {\n    marker = win[this.uniqueId]\n  }\n  if (!marker) {\n    //LOG.debug(\"isPollingForLoad false, missing uniqueId \" + this.uniqueId + \": \" + marker);\n    return false\n  }\n  if (!this.pollingForLoad[marker]) {\n    //LOG.debug(\"isPollingForLoad false, this.pollingForLoad[\" + marker + \"]: \" + this.pollingForLoad[marker]);\n    return false\n  }\n  return marker\n}\n\nBrowserBot.prototype.getWindowByName = function(windowName, doNotModify) {\n  //LOG.debug(\"getWindowByName(\" + windowName + \")\");\n  // First look in the map of opened windows\n  let targetWindow = this.openedWindows[windowName]\n  if (!targetWindow) {\n    targetWindow = this.topWindow[windowName]\n  }\n  if (!targetWindow && windowName == '_blank') {\n    for (let winName in this.openedWindows) {\n      // _blank can match selenium_blank*, if it looks like it's OK (valid href, not closed)\n      if (/^selenium_blank/.test(winName)) {\n        targetWindow = this.openedWindows[winName]\n        let ok\n        try {\n          if (!this._windowClosed(targetWindow)) {\n            ok = targetWindow.location.href\n          }\n        } catch (e) {} // eslint-disable-line no-empty\n        if (ok) break\n      }\n    }\n  }\n  if (!targetWindow) {\n    throw new SeleniumError(\n      'Window does not exist. If this looks like a Selenium bug, make sure to read http://seleniumhq.org/docs/02_selenium_ide.html#alerts-popups-and-multiple-windows for potential workarounds.'\n    )\n  }\n  if (browserVersion.isHTA) {\n    try {\n      targetWindow.location.href\n    } catch (e) {\n      targetWindow = window.open('', targetWindow.name)\n      this.openedWindows[targetWindow.name] = targetWindow\n    }\n  }\n  if (!doNotModify) {\n    this._modifyWindow(targetWindow)\n  }\n  return targetWindow\n}\n\n/**\n * Find a window name from the window title.\n */\nBrowserBot.prototype.getWindowNameByTitle = function(windowTitle) {\n  //LOG.debug(\"getWindowNameByTitle(\" + windowTitle + \")\");\n\n  // First look in the map of opened windows and iterate them\n  for (let windowName in this.openedWindows) {\n    let targetWindow = this.openedWindows[windowName]\n\n    // If the target window's title is our title\n    try {\n      // TODO implement Pattern Matching here\n      if (\n        !this._windowClosed(targetWindow) &&\n        targetWindow.document.title == windowTitle\n      ) {\n        return windowName\n      }\n    } catch (e) {\n      // You'll often get Permission Denied errors here in IE\n      // eh, if we can't read this window's title,\n      // it's probably not available to us right now anyway\n    }\n  }\n\n  try {\n    if (this.topWindow.document.title == windowTitle) {\n      return ''\n    }\n  } catch (e) {} // eslint-disable-line no-empty\n  // IE Perm denied\n\n  throw new SeleniumError('Could not find window with title ' + windowTitle)\n}\n\nBrowserBot.prototype.getNonTopWindowNames = function() {\n  let nonTopWindowNames = []\n\n  for (let windowName in this.openedWindows) {\n    let win = this.openedWindows[windowName]\n    if (!this._windowClosed(win) && win != this.topWindow) {\n      nonTopWindowNames.push(windowName)\n    }\n  }\n\n  return nonTopWindowNames\n}\n\nBrowserBot.prototype.getCurrentWindow = function(doNotModify) {\n  if (this.proxyInjectionMode) {\n    return window\n  }\n  let testWindow = core.firefox.unwrap(this.currentWindow)\n  if (!doNotModify) {\n    this._modifyWindow(testWindow)\n    //LOG.debug(\"getCurrentWindow newPageLoaded = false\");\n    this.newPageLoaded = false\n  }\n  testWindow = this._handleClosedSubFrame(testWindow, doNotModify)\n  bot.window_ = testWindow\n  return core.firefox.unwrap(testWindow)\n}\n\n/**\n * Offer a method the end-user can reliably use to retrieve the current window.\n * This should work even for windows with an XPCNativeWrapper. Returns the\n * current window object.\n */\nBrowserBot.prototype.getUserWindow = function() {\n  let userWindow = this.getCurrentWindow(true)\n  return userWindow\n}\n\nBrowserBot.prototype._handleClosedSubFrame = function(testWindow, doNotModify) {\n  if (this.proxyInjectionMode) {\n    return testWindow\n  }\n\n  if (this.isSubFrameSelected) {\n    let missing = true\n    if (\n      testWindow.parent &&\n      testWindow.parent.frames &&\n      testWindow.parent.frames.length\n    ) {\n      for (let i = 0; i < testWindow.parent.frames.length; i++) {\n        let frame = testWindow.parent.frames[i]\n        if (\n          frame == testWindow ||\n          frame.seleniumKey == testWindow.seleniumKey\n        ) {\n          missing = false\n          break\n        }\n      }\n    }\n    if (missing) {\n      //LOG.warn(\"Current subframe appears to have closed; selecting top frame\");\n      this.selectFrame('relative=top')\n      return this.getCurrentWindow(doNotModify)\n    }\n  } else if (this._windowClosed(testWindow)) {\n    //UnnamedWinIFrameExt, Jie-Lin You, SELAB, CSIE, NCKU, 2016/11/25\n    /*var closedError = new SeleniumError(\"Current window or frame is closed!\");\n        closedError.windowClosed = true;\n        throw closedError;*/\n    testWindow = this.topWindow //select live object\n  }\n  return testWindow\n}\n\nBrowserBot.prototype.setShouldHighlightElement = function(shouldHighlight) {\n  this.shouldHighlightLocatedElement = shouldHighlight\n}\n\n/*****************************************************************/\n/* BROWSER-SPECIFIC FUNCTIONS ONLY AFTER THIS LINE */\n\nBrowserBot.prototype._registerAllLocatorFunctions = function() {\n  // TODO - don't do this in the constructor - only needed once ever\n  this.locationStrategies = {}\n  for (let functionName in this) {\n    let result = /^locateElementBy([A-Z].+)$/.exec(functionName)\n    if (result != null) {\n      let locatorFunction = this[functionName]\n      if (typeof locatorFunction != 'function') {\n        continue\n      }\n      // Use a specified prefix in preference to one generated from\n      // the function name\n      let locatorPrefix = locatorFunction.prefix || result[1].toLowerCase()\n      this.locationStrategies[locatorPrefix] = locatorFunction\n    }\n  }\n\n  /**\n   * Find a locator based on a prefix.\n   */\n  this.findElementBy = function(locatorType, locator, inDocument, inWindow) {\n    let locatorFunction = this.locationStrategies[locatorType]\n    if (!locatorFunction) {\n      throw new SeleniumError(\n        \"Unrecognised locator type: '\" + locatorType + \"'\"\n      )\n    }\n    return locatorFunction.call(this, locator, inDocument, inWindow)\n  }\n\n  /**\n   * The implicit locator, that is used when no prefix is supplied.\n   */\n  this.locationStrategies['implicit'] = function(\n    locator,\n    inDocument,\n    inWindow\n  ) {\n    if (locator.startsWith('//')) {\n      return this.locateElementByXPath(locator, inDocument, inWindow)\n    }\n    if (locator.startsWith('document.')) {\n      return this.locateElementByDomTraversal(locator, inDocument, inWindow)\n    }\n    return this.locateElementByIdentifier(locator, inDocument, inWindow)\n  }\n}\n\nBrowserBot.prototype.getDocument = function() {\n  return core.firefox.unwrap(this.getCurrentWindow().document)\n}\n\nBrowserBot.prototype.getTitle = function() {\n  let t = this.getDocument().title\n  if (typeof t == 'string') {\n    t = t.trim()\n  }\n  return t\n}\n\nBrowserBot.prototype.getCookieByName = function(cookieName, doc) {\n  if (!doc) doc = this.getDocument()\n  let ck = doc.cookie\n  if (!ck) return null\n  let ckPairs = ck.split(/;/)\n  for (let i = 0; i < ckPairs.length; i++) {\n    let ckPair = ckPairs[i].trim()\n    let ckNameValue = ckPair.split(/=/)\n    let ckName = decodeURIComponent(ckNameValue[0])\n    if (ckName === cookieName) {\n      return decodeURIComponent(ckNameValue.slice(1).join('='))\n    }\n  }\n  return null\n}\n\nBrowserBot.prototype.getAllCookieNames = function(doc) {\n  if (!doc) doc = this.getDocument()\n  let ck = doc.cookie\n  if (!ck) return []\n  let cookieNames = []\n  let ckPairs = ck.split(/;/)\n  for (let i = 0; i < ckPairs.length; i++) {\n    let ckPair = ckPairs[i].trim()\n    let ckNameValue = ckPair.split(/=/)\n    let ckName = decodeURIComponent(ckNameValue[0])\n    cookieNames.push(ckName)\n  }\n  return cookieNames\n}\n\nBrowserBot.prototype.getAllRawCookieNames = function(doc) {\n  if (!doc) doc = this.getDocument()\n  let ck = doc.cookie\n  if (!ck) return []\n  let cookieNames = []\n  let ckPairs = ck.split(/;/)\n  for (let i = 0; i < ckPairs.length; i++) {\n    let ckPair = ckPairs[i].trim()\n    let ckNameValue = ckPair.split(/=/)\n    let ckName = ckNameValue[0]\n    cookieNames.push(ckName)\n  }\n  return cookieNames\n}\n\nfunction encodeURIComponentWithASPHack(uri) {\n  let regularEncoding = encodeURIComponent(uri)\n  let aggressiveEncoding = regularEncoding.replace('.', '%2E')\n  aggressiveEncoding = aggressiveEncoding.replace('_', '%5F')\n  return aggressiveEncoding\n}\n\nBrowserBot.prototype.deleteCookie = function(cookieName, domain, path, doc) {\n  if (!doc) doc = this.getDocument()\n  let expireDateInMilliseconds = new Date().getTime() + -1 * 1000\n\n  // we can't really be sure if we're dealing with encoded or unencoded cookie names\n  let _cookieName\n  let rawCookieNames = this.getAllRawCookieNames(doc)\n  for (let rawCookieNumber in rawCookieNames) {\n    if (rawCookieNames[rawCookieNumber] == cookieName) {\n      _cookieName = cookieName\n      break\n    } else if (\n      rawCookieNames[rawCookieNumber] == encodeURIComponent(cookieName)\n    ) {\n      _cookieName = encodeURIComponent(cookieName)\n      break\n    } else if (\n      rawCookieNames[rawCookieNumber] ==\n      encodeURIComponentWithASPHack(cookieName)\n    ) {\n      _cookieName = encodeURIComponentWithASPHack(cookieName)\n      break\n    }\n  }\n\n  let cookie = _cookieName + '=deleted; '\n  if (path) {\n    cookie += 'path=' + path + '; '\n  }\n  if (domain) {\n    cookie += 'domain=' + domain + '; '\n  }\n  cookie += 'expires=' + new Date(expireDateInMilliseconds).toGMTString()\n  //LOG.debug(\"Setting cookie to: \" + cookie);\n  doc.cookie = cookie\n}\n\n/** Try to delete cookie, return false if it didn't work */\nBrowserBot.prototype._maybeDeleteCookie = function(\n  cookieName,\n  domain,\n  path,\n  doc\n) {\n  this.deleteCookie(cookieName, domain, path, doc)\n  return !this.getCookieByName(cookieName, doc)\n}\n\nBrowserBot.prototype._recursivelyDeleteCookieDomains = function(\n  cookieName,\n  domain,\n  path,\n  doc\n) {\n  let deleted = this._maybeDeleteCookie(cookieName, domain, path, doc)\n  if (deleted) return true\n  let dotIndex = domain.indexOf('.')\n  if (dotIndex == 0) {\n    return this._recursivelyDeleteCookieDomains(\n      cookieName,\n      domain.substring(1),\n      path,\n      doc\n    )\n  } else if (dotIndex != -1) {\n    return this._recursivelyDeleteCookieDomains(\n      cookieName,\n      domain.substring(dotIndex),\n      path,\n      doc\n    )\n  } else {\n    // No more dots; try just not passing in a domain at all\n    return this._maybeDeleteCookie(cookieName, null, path, doc)\n  }\n}\n\nBrowserBot.prototype._recursivelyDeleteCookie = function(\n  cookieName,\n  domain,\n  path,\n  doc\n) {\n  let slashIndex = path.lastIndexOf('/')\n  let finalIndex = path.length - 1\n  if (slashIndex == finalIndex) {\n    slashIndex--\n  }\n  if (slashIndex != -1) {\n    const deleted = this._recursivelyDeleteCookie(\n      cookieName,\n      domain,\n      path.substring(0, slashIndex + 1),\n      doc\n    )\n    if (deleted) return true\n  }\n  return this._recursivelyDeleteCookieDomains(cookieName, domain, path, doc)\n}\n\nBrowserBot.prototype.recursivelyDeleteCookie = function(\n  cookieName,\n  domain,\n  path,\n  win\n) {\n  if (!win) win = this.getCurrentWindow()\n  let doc = win.document\n  if (!domain) {\n    domain = doc.domain\n  }\n  if (!path) {\n    path = win.location.pathname\n  }\n  let deleted = this._recursivelyDeleteCookie(\n    cookieName,\n    '.' + domain,\n    path,\n    doc\n  )\n  if (deleted) return\n  // Finally try a null path (Try it last because it's uncommon)\n  deleted = this._recursivelyDeleteCookieDomains(\n    cookieName,\n    '.' + domain,\n    null,\n    doc\n  )\n  if (deleted) return\n  throw new SeleniumError(\"Couldn't delete cookie \" + cookieName)\n}\n\n/*\n * Finds an element on the current page, using various lookup protocols\n */\nBrowserBot.prototype.findElementOrNull = function(locator, win) {\n  locator = parse_locator(locator)\n\n  if (win == null) {\n    win = this.getCurrentWindow()\n  }\n  let element = bot.locators.findElement(\n    { [locator.type]: locator.string },\n    win.document\n  )\n  element = core.firefox.unwrap(element)\n\n  // Element was not found by any locator function.\n  return element\n}\n\nBrowserBot.prototype.findElement = function(locator, win) {\n  let element = this.findElementOrNull(locator, win)\n  if (element == null)\n    throw new SeleniumError('Element ' + locator + ' not found')\n  return core.firefox.unwrap(element)\n}\n\n/**\n * Finds a list of elements using the same mechanism as webdriver.\n *\n * @param {string} how The finding mechanism to use.\n * @param {string} using The selector to use.\n * @param {Document|Element} root The root of the search path.\n */\nBrowserBot.prototype.findElementsLikeWebDriver = function(how, using, root) {\n  let by = {}\n  by[how] = using\n\n  let all = bot.locators.findElements(by, root)\n  let toReturn = ''\n\n  for (let i = 0; i < all.length - 1; i++) {\n    toReturn += bot.inject.cache.addElement(core.firefox.unwrap(all[i])) + ','\n  }\n  if (all[all.length - 1]) {\n    toReturn += bot.inject.cache.addElement(\n      core.firefox.unwrap(all[all.length - 1])\n    )\n  }\n\n  return toReturn\n}\n\n/**\n * In non-IE browsers, getElementById() does not search by name.  Instead, we\n * we search separately by id and name.\n */\nBrowserBot.prototype.locateElementByIdentifier = function(\n  identifier,\n  inDocument,\n  inWindow\n) {\n  // HBC - use \"this\" instead of \"BrowserBot.prototype\"; otherwise we lose\n  // the non-prototype fields of the object!\n  return (\n    this.locateElementById(identifier, inDocument, inWindow) ||\n    BrowserBot.prototype.locateElementByName(\n      identifier,\n      inDocument,\n      inWindow\n    ) ||\n    null\n  )\n}\n\n/**\n * Find the element with id - can't rely on getElementById, coz it returns by name as well in IE..\n */\nBrowserBot.prototype.locateElementById = function(identifier, inDocument) {\n  let element = inDocument.getElementById(identifier)\n  if (element && element.getAttribute('id') === identifier) {\n    return element\n  } else if (browserVersion.isIE || browserVersion.isOpera) {\n    // SEL-484\n    let elements = inDocument.getElementsByTagName('*')\n\n    for (let i = 0, n = elements.length; i < n; ++i) {\n      element = elements[i]\n\n      if (element.tagName.toLowerCase() == 'form') {\n        if (element.attributes['id'].nodeValue == identifier) {\n          return element\n        }\n      } else if (element.getAttribute('id') == identifier) {\n        return element\n      }\n    }\n\n    return null\n  } else {\n    return null\n  }\n}\n\n/**\n * Find an element by name, refined by (optional) element-filter\n * expressions.\n */\nBrowserBot.prototype.locateElementByName = function(locator, document) {\n  let elements = document.getElementsByTagName('*')\n  //UnnamedWinIFrameExt, Jie-Lin You, SELAB, CSIE, NCKU, 2016/11/23\n  /*\n        var filters = locator.split(' ');\n        filters[0] = 'name=' + filters[0];\n\n        while (filters.length) {\n            var filter = filters.shift();\n            elements = this.selectElements(filter, elements, 'value');\n        }\n        */\n  let filter = 'name=' + locator\n  elements = this.selectElements(filter, elements, 'value')\n\n  if (elements.length > 0) {\n    return elements[0]\n  }\n  return null\n}\n\n/**\n * Finds an element using by evaluating the specfied string.\n */\nBrowserBot.prototype.locateElementByDomTraversal = function(domTraversal) {\n  let element = null\n\n  //Evalinsandbox\n  // eslint-disable-next-line no-undef\n  let mySandbox = new Components.utils.Sandbox(this.currentWindow.location.href)\n  mySandbox.domTraversal = domTraversal\n  try {\n    // eslint-disable-next-line no-undef\n    element = Components.utils.evalInSandbox(domTraversal, mySandbox)\n    //element = eval(domTraversal);\n  } catch (e) {\n    return null\n  }\n\n  if (!element) {\n    return null\n  }\n\n  return element\n}\n\nBrowserBot.prototype.locateElementByDomTraversal.prefix = 'dom'\n\nBrowserBot.prototype.locateElementByStoredReference = function(locator) {\n  try {\n    return core.locators.findElement('stored=' + locator)\n  } catch (e) {\n    return null\n  }\n}\nBrowserBot.prototype.locateElementByStoredReference.prefix = 'stored'\n\nBrowserBot.prototype.locateElementByWebDriver = function(locator) {\n  try {\n    return core.locators.findElement('webdriver=' + locator)\n  } catch (e) {\n    return null\n  }\n}\nBrowserBot.prototype.locateElementByWebDriver.prefix = 'webdriver'\n\n/**\n * Finds an element identified by the xpath expression. Expressions _must_\n * begin with \"//\".\n */\nBrowserBot.prototype.locateElementByXPath = function(xpath, inDocument) {\n  return this.xpathEvaluator.selectSingleNode(\n    inDocument,\n    xpath,\n    null,\n    inDocument.createNSResolver\n      ? inDocument.createNSResolver(inDocument.documentElement)\n      : this._namespaceResolver\n  )\n}\n\n/**\n * Find many elements using xpath.\n *\n * @param {string} xpath XPath expression to search for.\n * @param {=Document} inDocument The document to search in.\n * @param {=Window} inWindow The window the document is in.\n */\nBrowserBot.prototype.locateElementsByXPath = function(xpath, inDocument) {\n  return this.xpathEvaluator.selectNodes(\n    inDocument,\n    xpath,\n    null,\n    inDocument.createNSResolver\n      ? inDocument.createNSResolver(inDocument.documentElement)\n      : this._namespaceResolver\n  )\n}\n\nBrowserBot.prototype._namespaceResolver = function(prefix) {\n  if (prefix == 'html' || prefix == 'xhtml' || prefix == 'x') {\n    return 'http://www.w3.org/1999/xhtml'\n  } else if (prefix == 'mathml') {\n    return 'http://www.w3.org/1998/Math/MathML'\n  } else if (prefix == 'svg') {\n    return 'http://www.w3.org/2000/svg'\n  } else {\n    throw new Error('Unknown namespace: ' + prefix + '.')\n  }\n}\n\n/**\n * Returns the number of xpath results.\n */\nBrowserBot.prototype.evaluateXPathCount = function(selector, inDocument) {\n  let locator = parse_locator(selector)\n  if (locator.type == 'xpath' || locator.type == 'implicit') {\n    return bot.locators.findElements({ xpath: locator.string }, inDocument)\n      .length\n  } else {\n    //LOG.error(\"Locator does not use XPath strategy: \" + selector);\n    return 0\n  }\n}\n\n/**\n * Returns the number of css results.\n */\nBrowserBot.prototype.evaluateCssCount = function(selector, inDocument) {\n  let locator = parse_locator(selector)\n  if (locator.type == 'css' || locator.type == 'implicit') {\n    return bot.locators.findElements({ css: locator.string }, inDocument).length\n  } else {\n    //LOG.error(\"Locator does not use CSS strategy: \" + selector);\n    return 0\n  }\n}\n\n/**\n * Finds a link element with text matching the expression supplied. Expressions must\n * begin with \"link:\".\n */\nBrowserBot.prototype.locateElementByLinkText = function(linkText, inDocument) {\n  let links = inDocument.getElementsByTagName('a')\n  for (let i = 0; i < links.length; i++) {\n    let element = links[i]\n    if (PatternMatcher.matches(linkText, bot.dom.getVisibleText(element))) {\n      return element\n    }\n  }\n  return null\n}\n\nBrowserBot.prototype.locateElementByLinkText.prefix = 'link'\n\n/**\n * Returns an attribute based on an attribute locator. This is made up of an element locator\n * suffixed with @attribute-name.\n */\nBrowserBot.prototype.findAttribute = function(locator) {\n  // Split into locator + attributeName\n  let attributePos = locator.lastIndexOf('@')\n  let elementLocator = locator.slice(0, attributePos)\n  let attributeName = locator.slice(attributePos + 1)\n\n  // Find the element.\n  let element = this.findElement(elementLocator)\n  let attributeValue = bot.dom.getAttribute(element, attributeName)\n  return goog.isDefAndNotNull(attributeValue) ? attributeValue.toString() : null\n}\n\n/*\n * Select the specified option and trigger the relevant events of the element.\n */\nBrowserBot.prototype.selectOption = function(element, optionToSelect) {\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n  let changed = false\n  for (let i = 0; i < element.options.length; i++) {\n    let option = element.options[i]\n    if (option.selected && option != optionToSelect) {\n      option.selected = false\n      changed = true\n    } else if (!option.selected && option == optionToSelect) {\n      option.selected = true\n      changed = true\n    }\n  }\n\n  if (changed) {\n    bot.events.fire(element, bot.events.EventType.CHANGE)\n  }\n}\n\n/*\n * Select the specified option and trigger the relevant events of the element.\n */\nBrowserBot.prototype.addSelection = function(element, option) {\n  this.checkMultiselect(element)\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n  if (!option.selected) {\n    option.selected = true\n    bot.events.fire(element, bot.events.EventType.CHANGE)\n  }\n}\n\n/*\n * Select the specified option and trigger the relevant events of the element.\n */\nBrowserBot.prototype.removeSelection = function(element, option) {\n  this.checkMultiselect(element)\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n  if (option.selected) {\n    option.selected = false\n    bot.events.fire(element, bot.events.EventType.CHANGE)\n  }\n}\n\nBrowserBot.prototype.checkMultiselect = function(element) {\n  if (!element.multiple) {\n    throw new SeleniumError('Not a multi-select')\n  }\n}\n\nBrowserBot.prototype.replaceText = function(element, stringValue) {\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n  bot.events.fire(element, bot.events.EventType.SELECT)\n  let maxLengthAttr = element.getAttribute('maxLength')\n  let actualValue = stringValue\n  if (maxLengthAttr != null) {\n    let maxLength = parseInt(maxLengthAttr)\n    if (stringValue.length > maxLength) {\n      actualValue = stringValue.substr(0, maxLength)\n    }\n  }\n\n  if (getTagName(element) == 'body') {\n    if (element.ownerDocument && element.ownerDocument.designMode) {\n      let designMode = new String(\n        element.ownerDocument.designMode\n      ).toLowerCase()\n      if (designMode == 'on') {\n        // this must be a rich text control!\n        element.innerHTML = actualValue\n      }\n    }\n  } else {\n    element.value = actualValue\n  }\n  // DGF this used to be skipped in chrome URLs, but no longer.  Is xpcnativewrappers to blame?\n  try {\n    bot.events.fire(element, bot.events.EventType.CHANGE)\n  } catch (e) {} // eslint-disable-line no-empty\n}\n\nBrowserBot.prototype.clickElement = function(element, clientX, clientY) {\n  this._fireEventOnElement('click', element, clientX, clientY)\n}\n\nBrowserBot.prototype.doubleClickElement = function(element, clientX, clientY) {\n  this._fireEventOnElement('dblclick', element, clientX, clientY)\n}\n\n// The contextmenu event is fired when the user right-clicks to open the context menu\nBrowserBot.prototype.contextMenuOnElement = function(\n  element,\n  clientX,\n  clientY\n) {\n  this._fireEventOnElement('contextmenu', element, clientX, clientY)\n}\n\n//UnnamedWinIFrameExt, Jie-Lin You, SELAB, CSIE, NCKU, 2016/05/26\n//UnnamedWinIFrameExt, Jie-Lin You, SELAB, CSIE, NCKU, 2016/11/17\nBrowserBot.prototype._modifyElementTarget = function(e) {\n  let element = this.findClickableElement(e) || e\n  if (element.target) {\n    if (element.target == '_blank' || /^selenium_blank/.test(element.target)) {\n      let tagName = getTagName(element)\n      if (tagName == 'a' || tagName == 'form') {\n        const newTarget = 'win_ser_' + this.count\n        this.count += 1\n        this.browserbot.openWindow('', newTarget)\n        element.target = newTarget\n      }\n    } else {\n      const newTarget = element.target\n      this.browserbot.openWindow('', newTarget)\n      element.target = newTarget\n    }\n  }\n}\n\n//UnnamedWinIFrameExt, Jie-Lin You, SELAB, CSIE, NCKU, 2016/11/17\nBrowserBot.prototype.findClickableElement = function(e) {\n  if (!e.tagName) return null\n  let tagName = e.tagName.toLowerCase()\n  let type = e.type\n  if (\n    e.hasAttribute('onclick') ||\n    e.hasAttribute('href') ||\n    e.hasAttribute('url') ||\n    tagName == 'button' ||\n    (tagName == 'input' &&\n      (type == 'submit' ||\n        type == 'button' ||\n        type == 'image' ||\n        type == 'radio' ||\n        type == 'checkbox' ||\n        type == 'reset'))\n  ) {\n    return e\n  } else {\n    if (e.parentNode != null) {\n      return this.findClickableElement(e.parentNode)\n    } else {\n      return null\n    }\n  }\n}\n\nBrowserBot.prototype._handleClickingImagesInsideLinks = function(\n  targetWindow,\n  element\n) {\n  let itrElement = element\n  while (itrElement != null) {\n    if (itrElement.href) {\n      targetWindow.location.href = itrElement.href\n      break\n    }\n    itrElement = itrElement.parentNode\n  }\n}\n\nBrowserBot.prototype._getTargetWindow = function(element) {\n  let targetWindow = element.ownerDocument.defaultView\n  if (element.target) {\n    targetWindow = this._getFrameFromGlobal(element.target)\n  }\n  return targetWindow\n}\n\nBrowserBot.prototype._getFrameFromGlobal = function(target) {\n  if (target == '_self') {\n    return this.getCurrentWindow()\n  }\n  if (target == '_top') {\n    return this.topFrame\n  } else if (target == '_parent') {\n    return this.getCurrentWindow().parent\n  } else if (target == '_blank') {\n    // TODO should this set cleverer window defaults?\n    return this.getCurrentWindow().open('', '_blank')\n  }\n  let frameElement = this.findElementBy(\n    'implicit',\n    target,\n    this.topFrame.document,\n    this.topFrame\n  )\n  if (frameElement) {\n    return frameElement.contentWindow\n  }\n  let win = this.getWindowByName(target)\n  if (win) return win\n  return this.getCurrentWindow().open('', target)\n}\n\nBrowserBot.prototype.bodyText = function() {\n  if (!this.getDocument().body) {\n    throw new SeleniumError(\n      \"Couldn't access document.body.  Is this HTML page fully loaded?\"\n    )\n  }\n  return bot.dom.getVisibleText(this.getDocument().body)\n}\n\nBrowserBot.prototype.getAllButtons = function() {\n  let elements = this.getDocument().getElementsByTagName('input')\n  let result = []\n\n  for (let i = 0; i < elements.length; i++) {\n    if (\n      elements[i].type == 'button' ||\n      elements[i].type == 'submit' ||\n      elements[i].type == 'reset'\n    ) {\n      result.push(elements[i].id)\n    }\n  }\n\n  return result\n}\n\nBrowserBot.prototype.getAllFields = function() {\n  let elements = this.getDocument().getElementsByTagName('input')\n  let result = []\n\n  for (let i = 0; i < elements.length; i++) {\n    if (elements[i].type == 'text') {\n      result.push(elements[i].id)\n    }\n  }\n\n  return result\n}\n\nBrowserBot.prototype.getAllLinks = function() {\n  let elements = this.getDocument().getElementsByTagName('a')\n  let result = []\n\n  for (let i = 0; i < elements.length; i++) {\n    result.push(elements[i].id)\n  }\n\n  return result\n}\n\nfunction isDefined(value) {\n  return typeof value != undefined\n}\n\nBrowserBot.prototype.goBack = function() {\n  this.getCurrentWindow().history.back()\n}\n\nBrowserBot.prototype.goForward = function() {\n  this.getCurrentWindow().history.forward()\n}\n\nBrowserBot.prototype.close = function() {\n  if (browserVersion.isIE) {\n    // fix \"do you want to close this window\" warning in IE\n    // You can only close windows that you have opened.\n    // So, let's \"open\" it.\n    try {\n      this.topFrame.name = new Date().getTime()\n      window.open('', this.topFrame.name, '')\n      this.topFrame.close()\n      return\n    } catch (e) {} // eslint-disable-line no-empty\n  }\n  if (\n    browserVersion.isChrome ||\n    browserVersion.isSafari ||\n    browserVersion.isOpera\n  ) {\n    this.topFrame.close()\n  } else {\n    this.getCurrentWindow().eval('window.top.close();')\n  }\n}\n\nBrowserBot.prototype.refresh = function() {\n  this.getCurrentWindow().location.reload(true)\n}\n\n/**\n * Refine a list of elements using a filter.\n */\nBrowserBot.prototype.selectElementsBy = function(filterType, filter, elements) {\n  let filterFunction = BrowserBot.filterFunctions[filterType]\n  if (!filterFunction) {\n    throw new SeleniumError(\n      \"Unrecognised element-filter type: '\" + filterType + \"'\"\n    )\n  }\n\n  return filterFunction(filter, elements)\n}\n\nBrowserBot.filterFunctions = {}\n\nBrowserBot.filterFunctions.name = function(name, elements) {\n  let selectedElements = []\n  for (let i = 0; i < elements.length; i++) {\n    if (elements[i].name === name) {\n      selectedElements.push(elements[i])\n    }\n  }\n  return selectedElements\n}\n\nBrowserBot.filterFunctions.value = function(value, elements) {\n  let selectedElements = []\n  for (let i = 0; i < elements.length; i++) {\n    if (elements[i].value === value) {\n      selectedElements.push(elements[i])\n    }\n  }\n  return selectedElements\n}\n\nBrowserBot.filterFunctions.index = function(index, elements) {\n  index = Number(index)\n  if (isNaN(index) || index < 0) {\n    throw new SeleniumError('Illegal Index: ' + index)\n  }\n  if (elements.length <= index) {\n    throw new SeleniumError('Index out of range: ' + index)\n  }\n  return [elements[index]]\n}\n\nBrowserBot.prototype.selectElements = function(\n  filterExpr,\n  elements,\n  defaultFilterType\n) {\n  let filterType = defaultFilterType || 'value'\n\n  // If there is a filter prefix, use the specified strategy\n  let result = filterExpr.match(/^([A-Za-z]+)=(.+)/)\n  if (result) {\n    filterType = result[1].toLowerCase()\n    filterExpr = result[2]\n  }\n\n  return this.selectElementsBy(filterType, filterExpr, elements)\n}\n\n/**\n * Find an element by css selector\n */\nBrowserBot.prototype.locateElementByCss = function(locator, document) {\n  let elements = bot.locators.findElements({ css: locator }, document)\n  if (elements.length != 0) return elements[0]\n  return null\n}\n\n/* prompt */\nBrowserBot.prototype.cancelNextPrompt = function() {\n  return this.setNextPromptResult(null)\n}\n\nBrowserBot.prototype.setNextPromptResult = function(result) {\n  this.promptResponse = false\n  let self = this\n\n  window.postMessage(\n    {\n      direction: 'from-content-script',\n      command: 'setNextPromptResult',\n      target: result,\n    },\n    '*'\n  )\n\n  let response = new Promise(function(resolve, reject) {\n    let count = 0\n    let interval = setInterval(function() {\n      if (!self.promptResponse) {\n        count++\n        if (count > 60) {\n          reject('No response')\n          clearInterval(interval)\n        }\n      } else {\n        resolve()\n        self.promptResponse = false\n        clearInterval(interval)\n      }\n    }, 500)\n  })\n  return response\n}\n\nBrowserBot.prototype.getPromptMessage = function() {\n  this.promptResponse = false\n  this.promptMessage = null\n  let self = this\n  window.postMessage(\n    {\n      direction: 'from-content-script',\n      command: 'getPromptMessage',\n    },\n    '*'\n  )\n  let response = new Promise(function(resolve, reject) {\n    let count = 0\n    let interval = setInterval(function() {\n      if (!self.promptResponse) {\n        count++\n        if (count > 60) {\n          reject('No response')\n          clearInterval(interval)\n        }\n      } else {\n        resolve(self.promptMessage)\n        self.promptResponse = false\n        self.promptMessage = null\n        clearInterval(interval)\n      }\n    }, 500)\n  })\n  return response\n}\n\n// confirm\nBrowserBot.prototype.setNextConfirmationResult = function(result) {\n  this.confirmationResponse = false\n  let self = this\n  window.postMessage(\n    {\n      direction: 'from-content-script',\n      command: 'setNextConfirmationResult',\n      target: result,\n    },\n    '*'\n  )\n  let response = new Promise(function(resolve, reject) {\n    let count = 0\n    let interval = setInterval(function() {\n      if (!self.confirmationResponse) {\n        count++\n        if (count > 60) {\n          reject('No response')\n          clearInterval(interval)\n        }\n      } else {\n        resolve()\n        self.confirmationResponse = false\n        clearInterval(interval)\n      }\n    }, 500)\n  })\n  return response\n}\n\nBrowserBot.prototype.getConfirmationMessage = function() {\n  this.confirmationResponse = false\n  this.confirmationMessage = null\n  let self = this\n  window.postMessage(\n    {\n      direction: 'from-content-script',\n      command: 'getConfirmationMessage',\n    },\n    '*'\n  )\n  let response = new Promise(function(resolve, reject) {\n    let count = 0\n    let interval = setInterval(function() {\n      if (!self.confirmationResponse) {\n        count++\n        if (count > 60) {\n          reject('No response')\n          clearInterval(interval)\n        }\n      } else {\n        resolve(self.confirmationMessage)\n        self.confirmationResponse = false\n        self.confirmationMessage = null\n        clearInterval(interval)\n      }\n    }, 500)\n  })\n  return response\n}\n\nBrowserBot.prototype.getAlertMessage = function() {\n  let self = this\n  let response = new Promise(function(resolve, reject) {\n    let count = 0\n    let interval = setInterval(function() {\n      if (!self.alertResponse) {\n        count++\n        if (count > 60) {\n          reject('No response!!!!')\n          clearInterval(interval)\n        }\n      } else {\n        resolve(self.alertMessage)\n        self.alertResponse = false\n        self.alertMessage = null\n        clearInterval(interval)\n      }\n    }, 500)\n  })\n  return response\n}\n\n/*****************************************************************/\n/* BROWSER-SPECIFIC FUNCTIONS ONLY AFTER THIS LINE */\n\nexport class MozillaBrowserBot extends BrowserBot {\n  constructor(frame) {\n    super(frame)\n  }\n}\n\nexport class KonquerorBrowserBot extends BrowserBot {\n  constructor(frame) {\n    super(frame)\n  }\n}\n\nKonquerorBrowserBot.prototype.setIFrameLocation = function(iframe, location) {\n  // Window doesn't fire onload event when setting src to the current value,\n  // so we set it to blank first.\n  iframe.src = 'about:blank'\n  iframe.src = location\n}\n\nKonquerorBrowserBot.prototype._isSameDocument = function(\n  originalDocument,\n  currentDocument\n) {\n  // under Konqueror, there may be this case:\n  // originalDocument and currentDocument are different objects\n  // while their location are same.\n  if (originalDocument) {\n    return originalDocument.location == currentDocument.location\n  } else {\n    return originalDocument === currentDocument\n  }\n}\n\nexport class SafariBrowserBot extends BrowserBot {\n  constructor(frame) {\n    super(frame)\n  }\n}\n\nSafariBrowserBot.prototype.setIFrameLocation =\n  KonquerorBrowserBot.prototype.setIFrameLocation\n\nexport class OperaBrowserBot extends BrowserBot {\n  constructor(frame) {\n    super(frame)\n  }\n}\n\nOperaBrowserBot.prototype.setIFrameLocation = function(iframe, location) {\n  if (iframe.src == location) {\n    iframe.src = location + '?reload'\n  } else {\n    iframe.src = location\n  }\n}\n\nexport class IEBrowserBot extends BrowserBot {\n  constructor(frame) {\n    super(frame)\n  }\n}\n\nIEBrowserBot.prototype._handleClosedSubFrame = function(\n  testWindow,\n  doNotModify\n) {\n  if (this.proxyInjectionMode) {\n    return testWindow\n  }\n\n  try {\n    testWindow.location.href\n    this.permDenied = 0\n  } catch (e) {\n    this.permDenied++\n  }\n  if (this._windowClosed(testWindow) || this.permDenied > 4) {\n    if (this.isSubFrameSelected) {\n      //LOG.warn(\"Current subframe appears to have closed; selecting top frame\");\n      this.selectFrame('relative=top')\n      return this.getCurrentWindow(doNotModify)\n    } else {\n      let closedError = new SeleniumError('Current window or frame is closed!')\n      closedError.windowClosed = true\n      throw closedError\n    }\n  }\n  return testWindow\n}\n\nIEBrowserBot.prototype.modifyWindowToRecordPopUpDialogs = function(\n  windowToModify,\n  browserBot\n) {\n  BrowserBot.prototype.modifyWindowToRecordPopUpDialogs(\n    windowToModify,\n    browserBot\n  )\n\n  // we will call the previous version of this method from within our own interception\n  let oldShowModalDialog = windowToModify.showModalDialog\n\n  windowToModify.showModalDialog = function(url, args, features) {\n    // Get relative directory to where TestRunner.html lives\n    // A risky assumption is that the user's TestRunner is named TestRunner.html\n    let doc_location = document.location.toString()\n    let end_of_base_ref = doc_location.indexOf('TestRunner.html')\n    let base_ref = doc_location.substring(0, end_of_base_ref)\n    let runInterval = ''\n\n    // Only set run interval if options is defined\n    if (typeof window.runOptions != 'undefined') {\n      runInterval = '&runInterval=' + runOptions.runInterval // eslint-disable-line no-undef\n    }\n\n    let testRunnerURL =\n      'TestRunner.html?auto=true&singletest=' +\n      escape(browserBot.modalDialogTest) +\n      '&autoURL=' +\n      escape(url) +\n      runInterval\n    let fullURL = base_ref + testRunnerURL\n    browserBot.modalDialogTest = null\n\n    // If using proxy injection mode\n    if (this.proxyInjectionMode) {\n      fullURL = url\n    }\n    let returnValue = oldShowModalDialog(fullURL, args, features)\n    return returnValue\n  }\n}\n\nIEBrowserBot.prototype.modifySeparateTestWindowToDetectPageLoads = function(\n  windowObject\n) {\n  this.pageUnloading = false\n  let self = this\n  let pageUnloadDetector = function() {\n    self.pageUnloading = true\n  }\n  if (windowObject.addEventListener) {\n    windowObject.addEventListener('beforeunload', pageUnloadDetector, true)\n  } else {\n    windowObject.attachEvent('onbeforeunload', pageUnloadDetector)\n  }\n  BrowserBot.prototype.modifySeparateTestWindowToDetectPageLoads.call(\n    this,\n    windowObject\n  )\n}\n\nIEBrowserBot.prototype.pollForLoad = function(\n  loadFunction,\n  windowObject,\n  originalDocument,\n  originalLocation,\n  originalHref,\n  marker\n) {\n  //LOG.debug(\"IEBrowserBot.pollForLoad: \" + marker);\n  if (!this.permDeniedCount[marker]) this.permDeniedCount[marker] = 0\n  BrowserBot.prototype.pollForLoad.call(\n    this,\n    loadFunction,\n    windowObject,\n    originalDocument,\n    originalLocation,\n    originalHref,\n    marker\n  )\n  if (this.pageLoadError) {\n    if (this.pageUnloading) {\n      //LOG.debug(\"pollForLoad UNLOADING (\" + marker + \"): caught exception while firing events on unloading page: \" + this.pageLoadError.message);\n      this.reschedulePoller(\n        loadFunction,\n        windowObject,\n        originalDocument,\n        originalLocation,\n        originalHref,\n        marker\n      )\n      this.pageLoadError = null\n      return\n    } else if (\n      (this.pageLoadError.message == 'Permission denied' ||\n        /^Access is denied/.test(this.pageLoadError.message)) &&\n      this.permDeniedCount[marker]++ < 8\n    ) {\n      if (this.permDeniedCount[marker] > 4) {\n        let canAccessThisWindow\n        let canAccessCurrentlySelectedWindow\n        try {\n          windowObject.location.href\n          canAccessThisWindow = true\n        } catch (e) {} // eslint-disable-line no-empty\n        try {\n          this.getCurrentWindow(true).location.href\n          canAccessCurrentlySelectedWindow = true\n        } catch (e) {} // eslint-disable-line no-empty\n        if (canAccessCurrentlySelectedWindow & !canAccessThisWindow) {\n          //LOG.debug(\"pollForLoad (\" + marker + \") ABORTING: \" + this.pageLoadError.message + \" (\" + this.permDeniedCount[marker] + \"), but the currently selected window is fine\");\n          // returning without rescheduling\n          this.pageLoadError = null\n          return\n        }\n      }\n\n      //LOG.debug(\"pollForLoad (\" + marker + \"): \" + this.pageLoadError.message + \" (\" + this.permDeniedCount[marker] + \"), waiting to see if it goes away\");\n      this.reschedulePoller(\n        loadFunction,\n        windowObject,\n        originalDocument,\n        originalLocation,\n        originalHref,\n        marker\n      )\n      this.pageLoadError = null\n      return\n    }\n    //handy for debugging!\n    //throw this.pageLoadError;\n  }\n}\n\nIEBrowserBot.prototype._windowClosed = function(win) {\n  try {\n    let c = win.closed\n    // frame windows claim to be non-closed when their parents are closed\n    // but you can't access their document objects in that case\n    if (!c) {\n      try {\n        win.document\n      } catch (de) {\n        if (de.message == 'Permission denied') {\n          // the window is probably unloading, which means it's probably not closed yet\n          return false\n        } else if (/^Access is denied/.test(de.message)) {\n          // rare variation on \"Permission denied\"?\n          //LOG.debug(\"IEBrowserBot.windowClosed: got \" + de.message + \" (this.pageUnloading=\" + this.pageUnloading + \"); assuming window is unloading, probably not closed yet\");\n          return false\n        } else {\n          // this is probably one of those frame window situations\n          //LOG.debug(\"IEBrowserBot.windowClosed: couldn't read win.document, assume closed: \" + de.message + \" (this.pageUnloading=\" + this.pageUnloading + \")\");\n          return true\n        }\n      }\n    }\n    if (c == null) {\n      //LOG.debug(\"IEBrowserBot.windowClosed: win.closed was null, assuming closed\");\n      return true\n    }\n    return c\n  } catch (e) {\n    //LOG.debug(\"IEBrowserBot._windowClosed: Got an exception trying to read win.closed; we'll have to take a guess!\");\n\n    if (browserVersion.isHTA) {\n      if (e.message == 'Permission denied') {\n        // the window is probably unloading, which means it's not closed yet\n        return false\n      } else {\n        // there's a good chance that we've lost contact with the window object if it is closed\n        return true\n      }\n    } else {\n      // the window is probably unloading, which means it's not closed yet\n      return false\n    }\n  }\n}\n\n/**\n * In IE, getElementById() also searches by name - this is an optimisation for IE.\n */\nIEBrowserBot.prototype.locateElementByIdentifer = function(\n  identifier,\n  inDocument\n) {\n  return inDocument.getElementById(identifier)\n}\n\nSafariBrowserBot.prototype.modifyWindowToRecordPopUpDialogs = function(\n  windowToModify,\n  browserBot\n) {\n  BrowserBot.prototype.modifyWindowToRecordPopUpDialogs(\n    windowToModify,\n    browserBot\n  )\n\n  let originalOpen = windowToModify.open\n  /*\n   * Safari seems to be broken, so that when we manually trigger the onclick method\n   * of a button/href, any window.open calls aren't resolved relative to the app location.\n   * So here we replace the open() method with one that does resolve the url correctly.\n   */\n  windowToModify.open = function(url, windowName, windowFeatures, replaceFlag) {\n    if (\n      url.startsWith('http://') ||\n      url.startsWith('https://') ||\n      url.startsWith('/')\n    ) {\n      return originalOpen(url, windowName, windowFeatures, replaceFlag)\n    }\n\n    // Reduce the current path to the directory\n    let currentPath = windowToModify.location.pathname || '/'\n    currentPath = currentPath.replace(/\\/[^\\/]*$/, '/') // eslint-disable-line no-useless-escape\n\n    // Remove any leading \"./\" from the new url.\n    url = url.replace(/^\\.\\//, '')\n\n    const newUrl = currentPath + url\n\n    let openedWindow = originalOpen(\n      newUrl,\n      windowName,\n      windowFeatures,\n      replaceFlag\n    )\n    //LOG.debug(\"window.open call intercepted; window ID (which you can use with selectWindow()) is \\\"\" +  windowName + \"\\\"\");\n    if (windowName != null) {\n      openedWindow['seleniumWindowName'] = windowName\n    }\n    return openedWindow\n  }\n}\n\nMozillaBrowserBot.prototype._fireEventOnElement = function(\n  eventType,\n  element,\n  clientX,\n  clientY\n) {\n  let win = this.getCurrentWindow()\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n\n  // Add an event listener that detects if the default action has been prevented.\n  // (This is caused by a javascript onclick handler returning false)\n  // we capture the whole event, rather than the getPreventDefault() state at the time,\n  // because we need to let the entire event bubbling and capturing to go through\n  // before making a decision on whether we should force the href\n  element.addEventListener(eventType, function() {}, false)\n\n  //this._modifyElementTarget(element);\n\n  // Trigger the event.\n  this.browserbot.triggerMouseEvent(element, eventType, true, clientX, clientY)\n\n  if (this._windowClosed(win)) {\n    return\n  }\n\n  // Perform the link action if preventDefault was set.\n  // In chrome URL, the link action is already executed by triggerMouseEvent.\n  //if (!browserVersion.isChrome && savedEvent != null && savedEvent.getPreventDefault && !savedEvent.getPreventDefault()) {\n  /*\n    if (!browserVersion.isChrome && savedEvent != null && savedEvent.defaultPrevented && !savedEvent.defaultPrevented()) {\n        var targetWindow = this.browserbot._getTargetWindow(element);\n        if (element.href) {\n            targetWindow.location.href = element.href;\n        } else {\n            this.browserbot._handleClickingImagesInsideLinks(targetWindow, element);\n        }\n    }\n    */\n}\n\nOperaBrowserBot.prototype._fireEventOnElement = function(\n  eventType,\n  element,\n  clientX,\n  clientY\n) {\n  let win = this.getCurrentWindow()\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n\n  this._modifyElementTarget(element)\n\n  // Trigger the click event.\n  this.browserbot.triggerMouseEvent(element, eventType, true, clientX, clientY)\n\n  if (this._windowClosed(win)) {\n    return\n  }\n}\n\nKonquerorBrowserBot.prototype._fireEventOnElement = function(\n  eventType,\n  element,\n  clientX,\n  clientY\n) {\n  let win = this.getCurrentWindow()\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n\n  this._modifyElementTarget(element)\n\n  if (element[eventType]) {\n    element[eventType]()\n  } else {\n    this.browserbot.triggerMouseEvent(\n      element,\n      eventType,\n      true,\n      clientX,\n      clientY\n    )\n  }\n\n  if (this._windowClosed(win)) {\n    return\n  }\n}\n\nSafariBrowserBot.prototype._fireEventOnElement = function(\n  eventType,\n  element,\n  clientX,\n  clientY\n) {\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n  this._modifyElementTarget(element)\n\n  // For form element it is simple.\n  if (element[eventType]) {\n    element[eventType]()\n  }\n  // For links and other elements, event emulation is required.\n  else {\n    // todo: deal with anchors?\n    this.browserbot.triggerMouseEvent(\n      element,\n      eventType,\n      true,\n      clientX,\n      clientY\n    )\n  }\n}\n\nSafariBrowserBot.prototype.refresh = function() {\n  let win = this.getCurrentWindow()\n  if (win.location.hash) {\n    // DGF Safari refuses to refresh when there's a hash symbol in the URL\n    win.location.hash = ''\n    let actuallyReload = function() {\n      win.location.reload(true)\n    }\n    window.setTimeout(actuallyReload, 1)\n  } else {\n    win.location.reload(true)\n  }\n}\n\nIEBrowserBot.prototype._fireEventOnElement = function(\n  eventType,\n  element,\n  clientX,\n  clientY\n) {\n  let win = this.getCurrentWindow()\n  bot.events.fire(element, bot.events.EventType.FOCUS)\n\n  let wasChecked = element.checked\n\n  // Set a flag that records if the page will unload - this isn't always accurate, because\n  // <a href=\"javascript:alert('foo'):\"> triggers the onbeforeunload event, even thought the page won't unload\n  let pageUnloading = false\n  let pageUnloadDetector = function() {\n    pageUnloading = true\n  }\n  if (win.addEventListener) {\n    win.addEventListener('beforeunload', pageUnloadDetector, true)\n  } else {\n    win.attachEvent('onbeforeunload', pageUnloadDetector)\n  }\n  this._modifyElementTarget(element)\n  if (element[eventType]) {\n    element[eventType]()\n  } else {\n    this.browserbot.triggerMouseEvent(\n      element,\n      eventType,\n      true,\n      clientX,\n      clientY\n    )\n  }\n\n  // If the page is going to unload - still attempt to fire any subsequent events.\n  // However, we can't guarantee that the page won't unload half way through, so we need to handle exceptions.\n  try {\n    if (win.removeEventListener) {\n      win.removeEventListener('onbeforeunload', pageUnloadDetector, true)\n    } else {\n      win.detachEvent('onbeforeunload', pageUnloadDetector)\n    }\n\n    if (this._windowClosed(win)) {\n      return\n    }\n\n    // Onchange event is not triggered automatically in IE.\n    if (isDefined(element.checked) && wasChecked != element.checked) {\n      bot.events.fire(element, bot.events.EventType.CHANGE)\n    }\n  } catch (e) {\n    // If the page is unloading, we may get a \"Permission denied\" or \"Unspecified error\".\n    // Just ignore it, because the document may have unloaded.\n    if (pageUnloading) {\n      //LOG.logHook = function() {\n      //};\n      //LOG.warn(\"Caught exception when firing events on unloading page: \" + e.message);\n      return\n    }\n    throw e\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content/selenium-browserbot.js","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport SeleniumError from './SeleniumError'\n\nexport default function PatternMatcher(pattern) {\n  this.selectStrategy(pattern)\n}\n\nPatternMatcher.prototype = {\n  selectStrategy: function(pattern) {\n    this.pattern = pattern\n    let strategyName = 'glob'\n    // by default\n    if (/^([a-z-]+):(.*)/.test(pattern)) {\n      const possibleNewStrategyName = RegExp.$1\n      const possibleNewPattern = RegExp.$2\n      if (PatternMatcher.strategies[possibleNewStrategyName]) {\n        strategyName = possibleNewStrategyName\n        pattern = possibleNewPattern\n      }\n    }\n    const matchStrategy = PatternMatcher.strategies[strategyName]\n    if (!matchStrategy) {\n      throw new SeleniumError(\n        'cannot find PatternMatcher.strategies.' + strategyName\n      )\n    }\n    this.strategy = matchStrategy\n    this.matcher = new matchStrategy(pattern)\n  },\n\n  matches: function(actual) {\n    return this.matcher.matches(actual + '')\n    // Note: appending an empty string avoids a Konqueror bug\n  },\n}\n\n/**\n * A \"static\" convenience method for easy matching\n */\nPatternMatcher.matches = function(pattern, actual) {\n  return new PatternMatcher(pattern).matches(actual)\n}\n\nPatternMatcher.strategies = {\n  /**\n   * Exact matching, e.g. \"exact:***\"\n   */\n  exact: function(expected) {\n    this.expected = expected\n    this.matches = function(actual) {\n      return actual == this.expected\n    }\n  },\n\n  /**\n   * Match by regular expression, e.g. \"regexp:^[0-9]+$\"\n   */\n  regexp: function(regexpString) {\n    this.regexp = new RegExp(regexpString)\n    this.matches = function(actual) {\n      return this.regexp.test(actual)\n    }\n  },\n\n  regex: function(regexpString) {\n    this.regexp = new RegExp(regexpString)\n    this.matches = function(actual) {\n      return this.regexp.test(actual)\n    }\n  },\n\n  regexpi: function(regexpString) {\n    this.regexp = new RegExp(regexpString, 'i')\n    this.matches = function(actual) {\n      return this.regexp.test(actual)\n    }\n  },\n\n  regexi: function(regexpString) {\n    this.regexp = new RegExp(regexpString, 'i')\n    this.matches = function(actual) {\n      return this.regexp.test(actual)\n    }\n  },\n\n  /**\n   * \"globContains\" (aka \"wildmat\") patterns, e.g. \"glob:one,two,*\",\n   * but don't require a perfect match; instead succeed if actual\n   * contains something that matches globString.\n   * Making this distinction is motivated by a bug in IE6 which\n   * leads to the browser hanging if we implement *TextPresent tests\n   * by just matching against a regular expression beginning and\n   * ending with \".*\".  The globcontains strategy allows us to satisfy\n   * the functional needs of the *TextPresent ops more efficiently\n   * and so avoid running into this IE6 freeze.\n   */\n  globContains: function(globString) {\n    this.regexp = new RegExp(PatternMatcher.regexpFromGlobContains(globString))\n    this.matches = function(actual) {\n      return this.regexp.test(actual)\n    }\n  },\n\n  /**\n   * \"glob\" (aka \"wildmat\") patterns, e.g. \"glob:one,two,*\"\n   */\n  glob: function(globString) {\n    this.regexp = new RegExp(PatternMatcher.regexpFromGlob(globString))\n    this.matches = function(actual) {\n      return this.regexp.test(actual)\n    }\n  },\n}\n\nPatternMatcher.convertGlobMetaCharsToRegexpMetaChars = function(glob) {\n  let re = glob\n  re = re.replace(/([.^$+(){}\\[\\]\\\\|])/g, '\\\\$1') // eslint-disable-line no-useless-escape\n  re = re.replace(/\\?/g, '(.|[\\r\\n])')\n  re = re.replace(/\\*/g, '(.|[\\r\\n])*')\n  return re\n}\n\nPatternMatcher.regexpFromGlobContains = function(globContains) {\n  return PatternMatcher.convertGlobMetaCharsToRegexpMetaChars(globContains)\n}\n\nPatternMatcher.regexpFromGlob = function(glob) {\n  return '^' + PatternMatcher.convertGlobMetaCharsToRegexpMetaChars(glob) + '$'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content/PatternMatcher.js","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n// Modified in tools.js from selenium-IDE\n\nexport function exactMatchPattern(string) {\n  if (\n    string != null &&\n    (string.match(/^\\w*:/) ||\n      string.indexOf('?') >= 0 ||\n      string.indexOf('*') >= 0)\n  ) {\n    return 'exact:' + string\n  } else {\n    return string\n  }\n}\n\nclass TargetSelector {\n  constructor(callback, cleanupCallback) {\n    this.callback = callback\n    this.cleanupCallback = cleanupCallback\n    // This is for XPCOM/XUL addon and can't be used\n    //var wm = Components.classes[\"@mozilla.org/appshell/window-mediator;1\"].getService(Components.interfaces.nsIWindowMediator);\n    //this.win = wm.getMostRecentWindow('navigator:browser').getBrowser().contentWindow;\n\n    // Instead, we simply assign global content window to this.win\n    this.win = window\n    const doc = this.win.document\n    const div = doc.createElement('div')\n    div.setAttribute('style', 'display: none;')\n    doc.body.insertBefore(div, doc.body.firstChild)\n    this.div = div\n    this.e = null\n    this.r = null\n    this.banner = doc.createElement('div')\n    this.banner.setAttribute(\n      'style',\n      'position: fixed;top: 0;left: 0;bottom: 0;right: 0;background: trasparent;z-index: 10000;'\n    )\n    const header = doc.createElement('div')\n    header.setAttribute(\n      'style',\n      \"pointer-events: none;display: flex;align-items: center;justify-content: center;flex-direction: row;position: fixed;top: 20%;left: 50%;transform: translateX(-50%);background: #f7f7f7;color: #114990;font-size: 22px;font-weight: 200;z-index: 10001;font-family: system, -apple-system, BlinkMacSystemFont, 'Helvetica Neue', Arial, sans-serif;box-shadow: 0 7px 10px 0 rgba(0,0,0,0.1);border: 1px black solid; border-radius: 50px;padding: 10px;\"\n    )\n    const img = doc.createElement('img')\n    img.src = browser.runtime.getURL('/icons/icon_light128.png')\n    img.setAttribute('style', 'width: 28px;margin: 0 10px;')\n    header.appendChild(img)\n    const span = doc.createElement('span')\n    span.setAttribute(\n      'style',\n      'border-left: 1px solid #c6c6c6;padding: 3px 10px;'\n    )\n    span.innerText = 'Select an element'\n    header.appendChild(span)\n    setTimeout(() => {\n      // this has to happen after a timeout, since adding it sync will add the event\n      // before the window is focused which will case mousemove to fire before the\n      // user actually moves the mouse\n      this.banner.addEventListener(\n        'mousemove',\n        () => {\n          setTimeout(() => {\n            this.banner.style.visibility = 'hidden'\n          }, 300)\n        },\n        false\n      )\n    }, 300)\n    this.banner.appendChild(header)\n    doc.body.insertBefore(this.banner, div)\n    doc.addEventListener('mousemove', this, true)\n    doc.addEventListener('click', this, true)\n  }\n\n  cleanup() {\n    try {\n      if (this.div) {\n        if (this.div.parentNode) {\n          this.div.parentNode.removeChild(this.div)\n        }\n        this.div = null\n      }\n      if (this.header) {\n        if (this.header.parentNode) {\n          this.header.parentNode.removeChild(this.header)\n        }\n        this.header = null\n      }\n      if (this.win) {\n        const doc = this.win.document\n        doc.removeEventListener('mousemove', this, true)\n        doc.removeEventListener('click', this, true)\n      }\n    } catch (e) {\n      if (e != \"TypeError: can't access dead object\") {\n        throw e\n      }\n    }\n    this.win = null\n    if (this.cleanupCallback) {\n      this.cleanupCallback()\n    }\n  }\n\n  handleEvent(evt) {\n    switch (evt.type) {\n      case 'mousemove':\n        this.highlight(evt.target.ownerDocument, evt.clientX, evt.clientY)\n        break\n      case 'click':\n        if (evt.button == 0 && this.e && this.callback) {\n          this.callback(this.e, this.win)\n        } //Right click would cancel the select\n        evt.preventDefault()\n        evt.stopPropagation()\n        this.cleanup()\n        break\n    }\n  }\n\n  highlight(doc, x, y) {\n    if (doc) {\n      const e = doc.elementFromPoint(x, y)\n      if (e && e != this.e) {\n        this.highlightElement(e)\n      }\n    }\n  }\n\n  highlightElement(element) {\n    if (element && element != this.e && element !== this.banner) {\n      this.e = element\n    } else {\n      return\n    }\n    const r = element.getBoundingClientRect()\n    const or = this.r\n    if (r.left >= 0 && r.top >= 0 && r.width > 0 && r.height > 0) {\n      if (\n        or &&\n        r.top == or.top &&\n        r.left == or.left &&\n        r.width == or.width &&\n        r.height == or.height\n      ) {\n        return\n      }\n      this.r = r\n      const style =\n        'pointer-events: none; position: absolute; background-color: rgb(78, 171, 230); opacity: 0.4; border: 1px solid #0e0e0e; z-index: 1000000;'\n      const pos = `top:${r.top + this.win.scrollY}px; left:${r.left +\n        this.win.scrollX}px; width:${r.width}px; height:${r.height}px;`\n      this.div.setAttribute('style', style + pos)\n    } else if (or) {\n      this.div.setAttribute('style', 'display: none;')\n    }\n  }\n}\n\nexport default TargetSelector\n\n\n\n// WEBPACK FOOTER //\n// ./content/targetSelector.js","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst coords = {\n  startX: 0,\n  startY: 0,\n  endX: 0,\n  endY: 0,\n}\n\nconst mouseOffset = {\n  x: 0,\n  y: 0,\n}\n\nconst STATES = {\n  create: 1,\n  update: 2,\n  resize: 3,\n}\n\nlet state = STATES.create\nlet canvasExists = false\n\nexport function editRegion(rect, cb) {\n  if (canvasExists) {\n    return cb(false)\n  }\n  const container = document.createElement('div')\n  container.id = 'selenium-container'\n  const canvas = document.createElement('div')\n  canvas.id = 'selenium-canvas'\n  const region = createRegion()\n  setStyle(canvas, region)\n  setEvents(container)\n  const buttonContainer = createButtons(cb)\n  buttonContainer.style.zIndex = '10002'\n  if (rect) {\n    region.style.left = `${rect.x}px`\n    region.style.top = `${rect.y}px`\n    region.style.width = `${rect.width}px`\n    region.style.height = `${rect.height}px`\n  }\n  container.appendChild(buttonContainer)\n  container.appendChild(canvas)\n  container.appendChild(region)\n  document.body.appendChild(container)\n  canvasExists = true\n}\n\nexport function removeRegion() {\n  if (canvasExists) {\n    document.body.removeChild(document.getElementById('selenium-container'))\n  }\n  canvasExists = false\n}\n\nfunction setStyle(canvas, region) {\n  canvas.style.position = 'fixed'\n  canvas.style.top = 0\n  canvas.style.bottom = 0\n  canvas.style.right = 0\n  canvas.style.left = 0\n  canvas.style.zIndex = '10000'\n  canvas.style.cursor = 'crosshair'\n\n  region.style.position = 'absolute'\n  region.style.zIndex = '10001'\n  region.style.backgroundColor = 'rgb(78, 171, 230)'\n  region.style.opacity = '0.4'\n  region.style.border = '1px solid #0e0e0e'\n}\n\nfunction setEvents(container) {\n  container.addEventListener('mousedown', mousedown)\n  container.addEventListener('mouseup', mouseup)\n}\n\nfunction mousedown(e) {\n  const container = document.getElementById('selenium-container')\n  const canvas = document.getElementById('selenium-canvas')\n  const region = document.getElementById('selenium-region')\n  e.stopPropagation()\n  if (e.target.tagName === 'BUTTON') return\n  if (e.target === canvas) {\n    updateRegion(e.pageX, e.pageY, e.pageX, e.pageY)\n    state = STATES.create\n    region.style.cursor = 'crosshair'\n  } else if (e.target === region) {\n    state = STATES.update\n    mouseOffset.x = e.pageX\n    mouseOffset.y = e.pageY\n    region.style.cursor = 'move'\n  } else if (e.target.parentElement === region) {\n    state = STATES.resize\n  }\n  container.addEventListener('mousemove', mousemove)\n}\n\nfunction mousemove(e) {\n  e.stopPropagation()\n  if (e.target.tagName === 'BUTTON') return\n  if (state === STATES.create || state === STATES.resize) {\n    updateRegion(undefined, undefined, e.pageX, e.pageY)\n  } else if (state === STATES.update) {\n    moveRegion(e.pageX, e.pageY)\n  }\n}\n\nfunction mouseup(e) {\n  const container = document.getElementById('selenium-container')\n  const canvas = document.getElementById('selenium-canvas')\n  const region = document.getElementById('selenium-region')\n  e.stopPropagation()\n  region.style.cursor = 'move'\n  canvas.style.cursor = 'crosshair'\n  container.removeEventListener('mousemove', mousemove)\n  showButtons()\n}\n\nfunction calculateRectFromCoords(coords) {\n  return calculateRect(\n    { x: coords.startX, y: coords.startY },\n    { x: coords.endX, y: coords.endY }\n  )\n}\n\nfunction calculateRect(p1, p2) {\n  return {\n    left: Math.min(p1.x, p2.x),\n    top: Math.min(p1.y, p2.y),\n    width: Math.abs(p1.x - p2.x),\n    height: Math.abs(p1.y - p2.y),\n  }\n}\n\nfunction updateRegion(startX, startY, endX, endY) {\n  hideButtons()\n  const region = document.getElementById('selenium-region')\n  if (startX) {\n    coords.startX = startX\n  }\n  if (startY) {\n    coords.startY = startY\n  }\n  if (endX) {\n    coords.endX = endX\n  }\n  if (endY) {\n    coords.endY = endY\n  }\n  const rect = calculateRectFromCoords(coords)\n  region.style.left = `${rect.left}px`\n  region.style.top = `${rect.top}px`\n  region.style.width = `${rect.width}px`\n  region.style.height = `${rect.height}px`\n}\n\nfunction moveRegion(mouseX, mouseY) {\n  let dx = mouseOffset.x - mouseX\n  let dy = mouseOffset.y - mouseY\n  mouseOffset.x = mouseX\n  mouseOffset.y = mouseY\n  if (coords.startX - dx < 5 || coords.endX - dx < 5) dx = 0\n  if (coords.startY - dy < 5 || coords.endY - dy < 5) dy = 0\n  updateRegion(\n    coords.startX - dx,\n    coords.startY - dy,\n    coords.endX - dx,\n    coords.endY - dy\n  )\n}\n\nfunction createRegion() {\n  const region = document.createElement('div')\n  region.id = 'selenium-region'\n\n  const cornerSize = 20\n\n  const tlc = createHotCorner(cornerSize)\n  tlc.style.top = '-5px'\n  tlc.style.left = '-5px'\n  tlc.style.cursor = 'nw-resize'\n\n  tlc.addEventListener('mousedown', () => {\n    const canvas = document.getElementById('selenium-canvas')\n    const region = document.getElementById('selenium-region')\n    canvas.style.cursor = 'nw-resize'\n    region.style.cursor = 'nw-resize'\n    updateRegion(\n      Math.max(coords.startX, coords.endX),\n      Math.max(coords.startY, coords.endY),\n      Math.min(coords.startX, coords.endX),\n      Math.min(coords.startY, coords.endY)\n    )\n  })\n\n  region.appendChild(tlc)\n\n  const trc = createHotCorner(cornerSize)\n  trc.style.top = '-5px'\n  trc.style.right = '-5px'\n  trc.style.cursor = 'ne-resize'\n\n  trc.addEventListener('mousedown', () => {\n    const canvas = document.getElementById('selenium-canvas')\n    const region = document.getElementById('selenium-region')\n    canvas.style.cursor = 'ne-resize'\n    region.style.cursor = 'ne-resize'\n    updateRegion(\n      Math.min(coords.startX, coords.endX),\n      Math.max(coords.startY, coords.endY),\n      Math.max(coords.startX, coords.endX),\n      Math.min(coords.startY, coords.endY)\n    )\n  })\n\n  region.appendChild(trc)\n\n  const blc = createHotCorner(cornerSize)\n  blc.style.bottom = '-5px'\n  blc.style.left = '-5px'\n  blc.style.cursor = 'sw-resize'\n\n  blc.addEventListener('mousedown', () => {\n    const canvas = document.getElementById('selenium-canvas')\n    const region = document.getElementById('selenium-region')\n    canvas.style.cursor = 'sw-resize'\n    region.style.cursor = 'sw-resize'\n    updateRegion(\n      Math.max(coords.startX, coords.endX),\n      Math.min(coords.startY, coords.endY),\n      Math.min(coords.startX, coords.endX),\n      Math.max(coords.startY, coords.endY)\n    )\n  })\n\n  region.appendChild(blc)\n\n  const brc = createHotCorner(cornerSize)\n  brc.style.bottom = '-5px'\n  brc.style.right = '-5px'\n  brc.style.cursor = 'se-resize'\n\n  brc.addEventListener('mousedown', () => {\n    const canvas = document.getElementById('selenium-canvas')\n    const region = document.getElementById('selenium-region')\n    canvas.style.cursor = 'se-resize'\n    region.style.cursor = 'se-resize'\n    updateRegion(\n      Math.min(coords.startX, coords.endX),\n      Math.min(coords.startY, coords.endY),\n      Math.max(coords.startX, coords.endX),\n      Math.max(coords.startY, coords.endY)\n    )\n  })\n\n  region.appendChild(brc)\n\n  return region\n}\n\nfunction createHotCorner(size) {\n  const c = document.createElement('div')\n  c.style.position = 'absolute'\n  c.style.height = `${size}px`\n  c.style.width = `${size}px`\n\n  return c\n}\n\nfunction showButtons() {\n  const canvasRect = document\n    .getElementById('selenium-canvas')\n    .getBoundingClientRect()\n  const buttonContainer = document.getElementById('region-control-panel')\n  let top = coords.startY\n  let bottom = coords.endY\n  let left = coords.startX\n  let right = coords.endX\n  let width = right - left\n  if (canvasRect.bottom - bottom <= 100) bottom = top\n  if (width < 0) left = coords.endX\n  right = coords.startX\n  width = Math.abs(width)\n  if (width < 225) width = 225\n  buttonContainer.style.position = 'absolute'\n  buttonContainer.style.top = bottom + 'px'\n  buttonContainer.style.left = left + 'px'\n  buttonContainer.style.right = right + 'px'\n  buttonContainer.style.width = width + 'px'\n  buttonContainer.style.backgroundColor = 'rgba(0, 0, 0, 0.55)'\n  buttonContainer.style.visibility = 'visible'\n}\n\nfunction hideButtons() {\n  const buttonContainer = document.getElementById('region-control-panel')\n  buttonContainer.style.visibility = 'hidden'\n}\n\nfunction createButtons(cb) {\n  const container = document.createElement('div')\n  container.id = 'region-control-panel'\n  const buttons = document.createElement('div')\n  const confirm = document.createElement('button')\n  confirm.innerText = 'Confirm'\n  confirm.addEventListener('click', () => {\n    hideButtons()\n    removeRegion()\n    const rect = calculateRectFromCoords(coords)\n    cb(\n      `x: ${rect.left}, y: ${rect.top}, width: ${rect.width}, height: ${\n        rect.height\n      }`\n    )\n  })\n  const cancel = document.createElement('button')\n  cancel.innerText = 'Cancel'\n  cancel.addEventListener('click', () => {\n    hideButtons()\n    removeRegion()\n    cb(false)\n  })\n\n  container.style.visibility = 'hidden'\n  buttons.style.display = 'flex'\n  buttons.style.alignItems = 'center'\n  buttons.style.justifyContent = 'center'\n\n  styleButton(confirm)\n  styleButton(cancel)\n\n  buttons.appendChild(cancel)\n  buttons.appendChild(confirm)\n  container.appendChild(buttons)\n  return container\n}\n\nfunction styleButton(button) {\n  button.style.color = '#656565'\n  button.style.backgroundColor = '#F5F5F5'\n  button.style.padding = '10px 20px'\n  button.style.margin = '5px 8px'\n  button.style.borderRadius = '4px'\n  button.style.outline = '0'\n  button.style.textTransform = 'capitalize'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content/region.js","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport browser from 'webextension-polyfill'\n\nlet handler, elementForInjectingScript\nexport function attach(selenium) {\n  elementForInjectingScript = document.createElement('script')\n  elementForInjectingScript.src = browser.runtime.getURL('/assets/prompt.js')\n  ;(document.head || document.documentElement).appendChild(\n    elementForInjectingScript\n  )\n\n  if (window === window.top) {\n    handler = e => {\n      return handleMessage(e, selenium)\n    }\n    window.addEventListener('message', handler)\n  }\n}\n\nexport function detach() {\n  window.postMessage(\n    {\n      direction: 'from-content-script',\n      detach: true,\n    },\n    '*'\n  )\n  elementForInjectingScript.parentNode.removeChild(elementForInjectingScript)\n  window.removeEventListener('message', handler)\n}\n\nfunction handleMessage(event, selenium) {\n  if (\n    event.source &&\n    event.source.top == window &&\n    event.data &&\n    event.data.direction == 'from-page-script'\n  ) {\n    if (event.data.response) {\n      switch (event.data.response) {\n        case 'prompt':\n          selenium.browserbot.promptResponse = true\n          if (event.data.value)\n            selenium.browserbot.promptMessage = event.data.value\n          break\n        case 'confirm':\n          selenium.browserbot.confirmationResponse = true\n          if (event.data.value)\n            selenium.browserbot.confirmationMessage = event.data.value\n          break\n        case 'alert':\n          selenium.browserbot.alertResponse = true\n          if (event.data.value)\n            selenium.browserbot.alertMessage = event.data.value\n          break\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content/prompt-injector.js"],"sourceRoot":""}